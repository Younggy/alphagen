[39743:MainThread](2024-01-20 00:07:54,800) INFO - qlib.Initialization - [config.py:416] - default_conf: client.
[39743:MainThread](2024-01-20 00:07:55,023) INFO - qlib.Initialization - [__init__.py:74] - qlib successfully initialized based on client settings.
[39743:MainThread](2024-01-20 00:07:55,023) INFO - qlib.Initialization - [__init__.py:76] - data_path={'__DEFAULT_FREQ': PosixPath('/Users/yangguangyu/.qlib/qlib_data/crypto_data_1d')}
instruments: all
[39743:MainThread](2024-01-20 00:07:58,812) INFO - qlib.timer - [log.py:127] - Time cost: 0.005s | DropnaProcessor Done
/Users/yangguangyu/anaconda3/envs/quant_dev/lib/python3.9/site-packages/qlib/data/dataset/processor.py:244: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df.loc(axis=1)[self.cols] = normalize(df[self.cols].values)
[39743:MainThread](2024-01-20 00:07:58,819) INFO - qlib.timer - [log.py:127] - Time cost: 0.007s | MinMaxNorm Done
raw df:                              $open     $close  ...  $usd_price_pct   $usd_volume
datetime   instrument                          ...                              
2020-09-23 ADA-USDT       0.081480   0.076630  ...        1.169394  9.044087e+08
           ADADOWN-USDT  14.324000  16.493999  ...        0.696695  6.387215e+05
           ADAUP-USDT     2.422000   2.060000  ...        1.417460  1.105980e+06
           AION-USDT      0.083500   0.074600  ...        1.016604  1.204919e+06
           ALGO-USDT      0.306300   0.269000  ...        1.078290  6.938055e+07
...                            ...        ...  ...             ...           ...
2022-01-30 YGG-USDT       3.058000   2.891000  ...        1.099246  6.327832e+07
           ZEC-USDT      96.199997  93.099998  ...        1.044836  1.718351e+08
           ZEN-USDT      41.540001  40.290001  ...        0.955721  2.430721e+07
           ZIL-USDT       0.045710   0.044510  ...        1.017369  3.178437e+07
           ZRX-USDT       0.565600   0.554000  ...        1.025391  3.814004e+07

[132595 rows x 18 columns]
preprocessed df:                               $open        $close  ...  $usd_price_pct   $usd_volume
datetime   instrument                              ...                              
2020-09-23 ADA-USDT    9.830911e-07  9.244615e-07  ...        0.240147  4.618374e-05
           AION-USDT   1.007465e-06  8.999699e-07  ...        0.208744  6.152900e-08
           ALGO-USDT   3.695837e-06  3.245385e-06  ...        0.221423  3.542926e-06
           ANKR-USDT   6.409752e-08  5.605482e-08  ...        0.215074  1.505430e-06
           ANT-USDT    3.968599e-05  3.753381e-05  ...        0.232173  1.667908e-06
...                             ...           ...  ...             ...           ...
2022-01-30 YGG-USDT    3.689868e-05  3.487953e-05  ...        0.225730  3.231315e-06
           ZEC-USDT    1.160778e-03  1.123241e-03  ...        0.214547  8.774779e-06
           ZEN-USDT    5.012341e-04  4.860944e-04  ...        0.196231  1.241250e-06
           ZIL-USDT    5.514796e-07  5.369373e-07  ...        0.208902  1.623073e-06
           ZRX-USDT    6.824629e-06  6.683879e-06  ...        0.210550  1.947626e-06

[108630 rows x 18 columns]
df after stack: instrument                     ADA-USDT  ...      ANC-USDT
datetime                                 ...              
2020-09-23 $open           9.830911e-07  ...           NaN
           $close          9.244615e-07  ...           NaN
           $high           8.715132e-07  ...           NaN
           $low            1.139266e-06  ...           NaN
           $volume         1.173439e-06  ...           NaN
...                                 ...  ...           ...
2022-01-30 $total_mcap     2.907337e-02  ...  1.219481e-03
           $turnover_rate  3.573538e-06  ...  1.557498e-06
           $usd_price      1.315627e-05  ...  1.879425e-05
           $usd_price_pct  2.124258e-01  ...  2.067355e-01
           $usd_volume     5.773182e-05  ...  2.371539e-07

[8910 rows x 311 columns]
features: ['$open', '$close', '$high', '$low', '$volume', '$quote_volume', '$trade_num', '$taker_buy_base_asset_volume', '$taker_buy_quote_asset_volume', '$circulating_supply', '$circulating_mcap', '$num_market_pairs', '$pct_diff_abs', '$total_mcap', '$turnover_rate', '$usd_price', '$usd_price_pct', '$usd_volume']
dates: DatetimeIndex(['2020-09-23', '2020-09-24', '2020-09-25', '2020-09-26',
               '2020-09-27', '2020-09-28', '2020-09-29', '2020-09-30',
               '2020-10-01', '2020-10-02',
               ...
               '2022-01-21', '2022-01-22', '2022-01-23', '2022-01-24',
               '2022-01-25', '2022-01-26', '2022-01-27', '2022-01-28',
               '2022-01-29', '2022-01-30'],
              dtype='datetime64[ns]', name='datetime', length=495, freq=None)
stock ids: Index(['ADA-USDT', 'AION-USDT', 'ALGO-USDT', 'ANKR-USDT', 'ANT-USDT',
       'ARDR-USDT', 'ARPA-USDT', 'ATOM-USDT', 'AVAX-USDT', 'BAL-USDT',
       ...
       'OOKI-USDT', 'ACH-USDT', 'IMX-USDT', 'GLMR-USDT', 'PEOPLE-USDT',
       'API3-USDT', 'HIGH-USDT', 'SCRT-USDT', 'ACA-USDT', 'ANC-USDT'],
      dtype='object', name='instrument', length=311)
values: [[9.8309113e-07 1.0074650e-06 3.6958370e-06 ...           nan
            nan           nan]
 [9.2446152e-07 8.9996990e-07 3.2453847e-06 ...           nan
            nan           nan]
 [8.7151324e-07 8.8414481e-07 3.2630924e-06 ...           nan
            nan           nan]
 ...
 [1.3156275e-05 1.1020321e-06 1.1687555e-05 ... 6.6502136e-05
  1.7853694e-05 1.8794250e-05]
 [2.1242580e-01 2.0608747e-01 2.0841348e-01 ... 2.0970602e-01
  2.0679475e-01 2.0673546e-01]
 [5.7731824e-05 1.8551475e-07 1.0601806e-05 ... 1.0689701e-06
  6.0033005e-07 2.3715387e-07]], (8910, 311)
values: [[[9.83091127e-07 1.00746502e-06 3.69583699e-06 ...            nan
              nan            nan]
  [9.24461517e-07 8.99969905e-07 3.24538473e-06 ...            nan
              nan            nan]
  [8.71513237e-07 8.84144811e-07 3.26309237e-06 ...            nan
              nan            nan]
  ...
  [1.17033210e-06 9.74365889e-07 3.83688985e-06 ...            nan
              nan            nan]
  [2.40147084e-01 2.08744347e-01 2.21422553e-01 ...            nan
              nan            nan]
  [4.61837444e-05 6.15290006e-08 3.54292615e-06 ...            nan
              nan            nan]]

 [[9.24569520e-07 9.01281567e-07 3.24938401e-06 ...            nan
              nan            nan]
  [9.95765049e-07 9.54261850e-07 3.54821350e-06 ...            nan
              nan            nan]
  [8.81618519e-07 8.38881647e-07 3.18519756e-06 ...            nan
              nan            nan]
  ...
  [1.15484283e-06 9.93787921e-07 3.94340032e-06 ...            nan
              nan            nan]
  [2.02611744e-01 2.09428236e-01 2.11037010e-01 ...            nan
              nan            nan]
  [3.31576666e-05 7.25786435e-08 3.09713187e-06 ...            nan
              nan            nan]]

 [[9.95881351e-07 9.57993279e-07 3.54862777e-06 ...            nan
              nan            nan]
  [1.16937883e-06 9.73565761e-07 3.82932558e-06 ...            nan
              nan            nan]
  [1.03856587e-06 8.60986916e-07 3.45046078e-06 ...            nan
              nan            nan]
  ...
  [1.22401195e-06 1.17324407e-06 3.79277844e-06 ...            nan
              nan            nan]
  [2.17641085e-01 2.42442966e-01 1.97481513e-01 ...            nan
              nan            nan]
  [3.71752285e-05 5.96416953e-07 2.45056981e-06 ...            nan
              nan            nan]]

 ...

 [[1.25730157e-05 1.01711805e-06 1.12988137e-05 ... 6.97310825e-05
   1.92094813e-05 1.69651503e-05]
  [1.26439363e-05 1.05801996e-06 1.15629218e-05 ... 6.70204026e-05
   1.95209250e-05 1.61306907e-05]
  [1.11473037e-05 9.47302738e-07 1.03725661e-05 ... 6.18315171e-05
   1.75578298e-05 1.49157249e-05]
  ...
  [1.25380993e-05 1.09024995e-06 1.14236254e-05 ... 6.41890510e-05
   1.85792760e-05 1.84899254e-05]
  [2.01045528e-01 2.06069604e-01 2.00511947e-01 ... 1.94899321e-01
   1.94492891e-01 2.01047301e-01]
  [3.82010330e-05 2.56663441e-07 9.84582402e-06 ... 8.18998444e-07
   8.08731784e-07 6.86632973e-07]]

 [[1.26574796e-05 1.05814354e-06 1.15642724e-05 ... 6.68351713e-05
   1.94628738e-05 1.61567077e-05]
  [1.27766507e-05 1.08456277e-06 1.16908095e-05 ... 6.77201679e-05
   1.97139634e-05 1.88935501e-05]
  [1.14104614e-05 1.06309221e-06 1.06051984e-05 ... 6.14525634e-05
   1.80525658e-05 1.77578295e-05]
  ...
  [1.27173180e-05 1.09799453e-06 1.15148969e-05 ... 6.51162554e-05
   1.77275051e-05 1.86667567e-05]
  [2.08269536e-01 2.06791595e-01 2.06973836e-01 ... 2.08300591e-01
   1.95909292e-01 2.07297325e-01]
  [4.72692664e-05 1.63093588e-07 1.13059859e-05 ... 9.93564413e-07
   7.25656946e-07 3.96770787e-07]]

 [[1.27781432e-05 1.08348274e-06 1.16921747e-05 ... 6.76918862e-05
   1.97162644e-05 1.88836912e-05]
  [1.24870921e-05 1.08697566e-06 1.13976321e-05 ... 6.37628837e-05
   1.82420463e-05 1.85074750e-05]
  [1.13367769e-05 9.91513275e-07 1.04167766e-05 ... 6.00209896e-05
   1.85683566e-05 1.74209872e-05]
  ...
  [1.31562747e-05 1.10203212e-06 1.16875553e-05 ... 6.65021362e-05
   1.78536939e-05 1.87942496e-05]
  [2.12425798e-01 2.06087470e-01 2.08413482e-01 ... 2.09706023e-01
   2.06794754e-01 2.06735462e-01]
  [5.77318242e-05 1.85514750e-07 1.06018060e-05 ... 1.06897005e-06
   6.00330054e-07 2.37153870e-07]]], (495, 18, 311)
train data: tensor([[[9.8309e-07, 1.0075e-06, 3.6958e-06,  ...,        nan,
                 nan,        nan],
         [9.2446e-07, 8.9997e-07, 3.2454e-06,  ...,        nan,
                 nan,        nan],
         [8.7151e-07, 8.8414e-07, 3.2631e-06,  ...,        nan,
                 nan,        nan],
         ...,
         [1.1703e-06, 9.7437e-07, 3.8369e-06,  ...,        nan,
                 nan,        nan],
         [2.4015e-01, 2.0874e-01, 2.2142e-01,  ...,        nan,
                 nan,        nan],
         [4.6184e-05, 6.1529e-08, 3.5429e-06,  ...,        nan,
                 nan,        nan]],

        [[9.2457e-07, 9.0128e-07, 3.2494e-06,  ...,        nan,
                 nan,        nan],
         [9.9577e-07, 9.5426e-07, 3.5482e-06,  ...,        nan,
                 nan,        nan],
         [8.8162e-07, 8.3888e-07, 3.1852e-06,  ...,        nan,
                 nan,        nan],
         ...,
         [1.1548e-06, 9.9379e-07, 3.9434e-06,  ...,        nan,
                 nan,        nan],
         [2.0261e-01, 2.0943e-01, 2.1104e-01,  ...,        nan,
                 nan,        nan],
         [3.3158e-05, 7.2579e-08, 3.0971e-06,  ...,        nan,
                 nan,        nan]],

        [[9.9588e-07, 9.5799e-07, 3.5486e-06,  ...,        nan,
                 nan,        nan],
         [1.1694e-06, 9.7357e-07, 3.8293e-06,  ...,        nan,
                 nan,        nan],
         [1.0386e-06, 8.6099e-07, 3.4505e-06,  ...,        nan,
                 nan,        nan],
         ...,
         [1.2240e-06, 1.1732e-06, 3.7928e-06,  ...,        nan,
                 nan,        nan],
         [2.1764e-01, 2.4244e-01, 1.9748e-01,  ...,        nan,
                 nan,        nan],
         [3.7175e-05, 5.9642e-07, 2.4506e-06,  ...,        nan,
                 nan,        nan]],

        ...,

        [[1.2573e-05, 1.0171e-06, 1.1299e-05,  ..., 6.9731e-05,
          1.9209e-05, 1.6965e-05],
         [1.2644e-05, 1.0580e-06, 1.1563e-05,  ..., 6.7020e-05,
          1.9521e-05, 1.6131e-05],
         [1.1147e-05, 9.4730e-07, 1.0373e-05,  ..., 6.1832e-05,
          1.7558e-05, 1.4916e-05],
         ...,
         [1.2538e-05, 1.0902e-06, 1.1424e-05,  ..., 6.4189e-05,
          1.8579e-05, 1.8490e-05],
         [2.0105e-01, 2.0607e-01, 2.0051e-01,  ..., 1.9490e-01,
          1.9449e-01, 2.0105e-01],
         [3.8201e-05, 2.5666e-07, 9.8458e-06,  ..., 8.1900e-07,
          8.0873e-07, 6.8663e-07]],

        [[1.2657e-05, 1.0581e-06, 1.1564e-05,  ..., 6.6835e-05,
          1.9463e-05, 1.6157e-05],
         [1.2777e-05, 1.0846e-06, 1.1691e-05,  ..., 6.7720e-05,
          1.9714e-05, 1.8894e-05],
         [1.1410e-05, 1.0631e-06, 1.0605e-05,  ..., 6.1453e-05,
          1.8053e-05, 1.7758e-05],
         ...,
         [1.2717e-05, 1.0980e-06, 1.1515e-05,  ..., 6.5116e-05,
          1.7728e-05, 1.8667e-05],
         [2.0827e-01, 2.0679e-01, 2.0697e-01,  ..., 2.0830e-01,
          1.9591e-01, 2.0730e-01],
         [4.7269e-05, 1.6309e-07, 1.1306e-05,  ..., 9.9356e-07,
          7.2566e-07, 3.9677e-07]],

        [[1.2778e-05, 1.0835e-06, 1.1692e-05,  ..., 6.7692e-05,
          1.9716e-05, 1.8884e-05],
         [1.2487e-05, 1.0870e-06, 1.1398e-05,  ..., 6.3763e-05,
          1.8242e-05, 1.8507e-05],
         [1.1337e-05, 9.9151e-07, 1.0417e-05,  ..., 6.0021e-05,
          1.8568e-05, 1.7421e-05],
         ...,
         [1.3156e-05, 1.1020e-06, 1.1688e-05,  ..., 6.6502e-05,
          1.7854e-05, 1.8794e-05],
         [2.1243e-01, 2.0609e-01, 2.0841e-01,  ..., 2.0971e-01,
          2.0679e-01, 2.0674e-01],
         [5.7732e-05, 1.8551e-07, 1.0602e-05,  ..., 1.0690e-06,
          6.0033e-07, 2.3715e-07]]]), torch.Size([495, 18, 311])
instruments: all
[39743:MainThread](2024-01-20 00:08:03,656) INFO - qlib.timer - [log.py:127] - Time cost: 0.842s | CSZFillna Done
[39743:MainThread](2024-01-20 00:08:03,663) INFO - qlib.timer - [log.py:127] - Time cost: 0.006s | DropnaProcessor Done
[39743:MainThread](2024-01-20 00:08:03,667) INFO - qlib.timer - [log.py:127] - Time cost: 0.004s | MinMaxNorm Done
raw df:                                 $open      $close  ...  $usd_price_pct   $usd_volume
datetime   instrument                              ...                              
2021-09-23 1INCH-USDT        2.630000    2.778000  ...        0.978600  2.630232e+08
           1INCHDOWN-USDT    0.072820    0.062470  ...        1.040954  5.707309e+05
           1INCHUP-USDT      0.032987    0.036864  ...        0.960353  9.256852e+05
           AAVE-USDT       301.799988  308.899994  ...        0.977228  2.012291e+08
           AAVEDOWN-USDT     0.010398    0.009636  ...        1.066509  1.331965e+06
...                               ...         ...  ...             ...           ...
2023-01-30 YGG-USDT          0.322200    0.304700  ...        1.015573  2.402939e+07
           ZEC-USDT         47.099998   44.599998  ...        1.044967  6.380775e+07
           ZEN-USDT         11.260000    9.980000  ...        1.026103  2.303312e+07
           ZIL-USDT          0.029550    0.026710  ...        1.045352  8.666747e+07
           ZRX-USDT          0.235500    0.214400  ...        1.044808  1.683987e+07

[166944 rows x 18 columns]
preprocessed df:                                   $open  ...   $usd_volume
datetime   instrument                    ...              
2021-09-23 1INCH-USDT      3.173430e-05  ...  1.343131e-05
           1INCHDOWN-USDT  8.785969e-07  ...  2.914411e-08
           1INCHUP-USDT    3.979600e-07  ...  4.726990e-08
           AAVE-USDT       3.641610e-03  ...  1.027579e-05
           AAVEDOWN-USDT   1.253943e-07  ...  6.801664e-08
...                                 ...  ...           ...
2023-01-30 YGG-USDT        3.887691e-06  ...  1.227064e-06
           ZEC-USDT        5.683227e-04  ...  3.258350e-06
           ZEN-USDT        1.358665e-04  ...  1.176189e-06
           ZIL-USDT        3.564881e-07  ...  4.425685e-06
           ZRX-USDT        2.841543e-06  ...  8.599300e-07

[166944 rows x 18 columns]
df after stack: instrument                   1INCH-USDT  ...      ZRX-USDT
datetime                                 ...              
2021-09-23 $open           3.173430e-05  ...  1.172717e-05
           $close          3.351620e-05  ...  1.199967e-05
           $high           3.052625e-05  ...  1.048414e-05
           $low            3.861224e-05  ...  1.411901e-05
           $volume         4.119877e-08  ...  1.263246e-08
...                                 ...  ...           ...
2023-01-30 $total_mcap     6.211977e-04  ...  1.768502e-04
           $turnover_rate  1.292826e-05  ...  1.019339e-05
           $usd_price      6.384430e-06  ...  2.730747e-06
           $usd_price_pct  2.111182e-01  ...  2.145410e-01
           $usd_volume     2.379712e-06  ...  8.599300e-07

[8910 rows x 394 columns]
features: ['$open', '$close', '$high', '$low', '$volume', '$quote_volume', '$trade_num', '$taker_buy_base_asset_volume', '$taker_buy_quote_asset_volume', '$circulating_supply', '$circulating_mcap', '$num_market_pairs', '$pct_diff_abs', '$total_mcap', '$turnover_rate', '$usd_price', '$usd_price_pct', '$usd_volume']
dates: DatetimeIndex(['2021-09-23', '2021-09-24', '2021-09-25', '2021-09-26',
               '2021-09-27', '2021-09-28', '2021-09-29', '2021-09-30',
               '2021-10-01', '2021-10-02',
               ...
               '2023-01-21', '2023-01-22', '2023-01-23', '2023-01-24',
               '2023-01-25', '2023-01-26', '2023-01-27', '2023-01-28',
               '2023-01-29', '2023-01-30'],
              dtype='datetime64[ns]', name='datetime', length=495, freq=None)
stock ids: Index(['1INCH-USDT', '1INCHDOWN-USDT', '1INCHUP-USDT', 'AAVE-USDT',
       'AAVEDOWN-USDT', 'AAVEUP-USDT', 'ACA-USDT', 'ACH-USDT', 'ACM-USDT',
       'ADA-USDT',
       ...
       'XVS-USDT', 'YFI-USDT', 'YFIDOWN-USDT', 'YFII-USDT', 'YFIUP-USDT',
       'YGG-USDT', 'ZEC-USDT', 'ZEN-USDT', 'ZIL-USDT', 'ZRX-USDT'],
      dtype='object', name='instrument', length=394)
values: [[3.1734300e-05 8.7859695e-07 3.9796001e-07 ... 9.5034181e-04
  1.1093047e-06 1.1727167e-05]
 [3.3516200e-05 7.5362277e-07 4.4468914e-07 ... 9.4443967e-04
  1.1224464e-06 1.1999670e-05]
 [3.0526251e-05 8.1540793e-07 4.0625011e-07 ... 8.3673676e-04
  1.0177238e-06 1.0484145e-05]
 ...
 [6.3844300e-06           nan           nan ... 1.2560005e-04
  3.4043319e-07 2.7307467e-06]
 [2.1111816e-01           nan           nan ... 2.1069670e-01
  2.1465291e-01 2.1454103e-01]
 [2.3797122e-06           nan           nan ... 1.1761888e-06
  4.4256849e-06 8.5992997e-07]], (8910, 394)
values: [[[3.1734300e-05 8.7859695e-07 3.9796001e-07 ... 9.5034181e-04
   1.1093047e-06 1.1727167e-05]
  [3.3516200e-05 7.5362277e-07 4.4468914e-07 ... 9.4443967e-04
   1.1224464e-06 1.1999670e-05]
  [3.0526251e-05 8.1540793e-07 4.0625011e-07 ... 8.3673676e-04
   1.0177238e-06 1.0484145e-05]
  ...
  [3.0101402e-05 9.7495956e-07 3.6081119e-07 ... 8.1545091e-04
   1.0141707e-06 1.0934105e-05]
  [2.0093337e-01 2.1374892e-01 1.9718313e-01 ... 2.0375575e-01
   2.0261149e-01 2.0318212e-01]
  [1.3431313e-05 2.9144113e-08 4.7269900e-08 ... 2.4882163e-06
   2.8576537e-06 2.8889376e-06]]

 [[3.3495980e-05 7.5226285e-07 4.4474109e-07 ... 9.4370532e-04
   1.1226982e-06 1.2009518e-05]
  [3.0729207e-05 9.2916684e-07 3.7571414e-07 ... 8.1896473e-04
   1.0244795e-06 1.1076706e-05]
  [2.9936778e-05 9.2625004e-07 4.0360800e-07 ... 8.2852622e-04
   9.8330270e-07 1.0508355e-05]
  ...
  [3.2365708e-05 6.6983654e-07 4.0968646e-07 ... 7.9599436e-04
   1.0078884e-06 1.0790248e-05]
  [2.2079207e-01 1.4101432e-01 2.3316704e-01 ... 2.0042786e-01
   2.0405866e-01 2.0262767e-01]
  [1.8641087e-05 8.3109285e-08 1.7319775e-07 ... 4.0459781e-06
   3.3740880e-06 7.7758023e-06]]

 [[3.0720730e-05 9.2855140e-07 3.7567355e-07 ... 8.1978447e-04
   1.0243579e-06 1.1076793e-05]
  [3.0041510e-05 9.7175598e-07 3.5900425e-07 ... 8.1450079e-04
   1.0136212e-06 1.0939167e-05]
  [2.7347303e-05 8.8361844e-07 3.4145012e-07 ... 7.3368411e-04
   9.8414489e-07 9.7157235e-06]
  ...
  [3.0508023e-05 7.2638551e-07 3.6210525e-07 ... 7.8989094e-04
   9.6156100e-07 1.0318033e-05]
  [1.9353510e-01 2.2268103e-01 1.8146567e-01 ... 2.0375581e-01
   1.9588533e-01 1.9633722e-01]
  [1.6866994e-05 7.2094892e-08 9.8313215e-08 ... 3.1133461e-06
   3.0008043e-06 3.6056649e-06]]

 ...

 [[6.4795327e-06           nan           nan ... 1.2862671e-04
   3.5238560e-07 2.8946347e-06]
  [6.3701918e-06           nan           nan ... 1.2414767e-04
   3.5113794e-07 2.7724411e-06]
  [5.7894081e-06           nan           nan ... 1.1610519e-04
   3.3351327e-07 2.5325660e-06]
  ...
  [6.1486485e-06           nan           nan ... 1.2069482e-04
   3.2255096e-07 2.5897377e-06]
  [1.9315574e-01           nan           nan ... 1.8186289e-01
   1.8553382e-01 1.8687437e-01]
  [2.1742580e-06           nan           nan ... 1.5240488e-06
   2.9679406e-06 9.1176713e-07]]

 [[6.3830021e-06           nan           nan ... 1.2416216e-04
   3.5117895e-07 2.7751782e-06]
  [6.5391005e-06           nan           nan ... 1.3585061e-04
   3.5632587e-07 2.8424174e-06]
  [5.7157235e-06           nan           nan ... 1.2147361e-04
   3.1277642e-07 2.4862502e-06]
  ...
  [6.2096037e-06           nan           nan ... 1.2240489e-04
   3.2566052e-07 2.6136322e-06]
  [2.0736924e-01           nan           nan ... 2.0824377e-01
   2.0731269e-01 2.0722800e-01]
  [1.3274120e-06           nan           nan ... 7.5297993e-07
   1.7426080e-06 7.7828662e-07]]

 [[6.5277977e-06           nan           nan ... 1.3586649e-04
   3.5648813e-07 2.8415429e-06]
  [6.1409592e-06           nan           nan ... 1.2040755e-04
   3.2218222e-07 2.5866418e-06]
  [5.7367765e-06           nan           nan ... 1.1894730e-04
   3.1256590e-07 2.4873027e-06]
  ...
  [6.3844300e-06           nan           nan ... 1.2560005e-04
   3.4043319e-07 2.7307467e-06]
  [2.1111816e-01           nan           nan ... 2.1069670e-01
   2.1465291e-01 2.1454103e-01]
  [2.3797122e-06           nan           nan ... 1.1761888e-06
   4.4256849e-06 8.5992997e-07]]], (495, 18, 394)
valid data: tensor([[[3.1734e-05, 8.7860e-07, 3.9796e-07,  ..., 9.5034e-04,
          1.1093e-06, 1.1727e-05],
         [3.3516e-05, 7.5362e-07, 4.4469e-07,  ..., 9.4444e-04,
          1.1224e-06, 1.2000e-05],
         [3.0526e-05, 8.1541e-07, 4.0625e-07,  ..., 8.3674e-04,
          1.0177e-06, 1.0484e-05],
         ...,
         [3.0101e-05, 9.7496e-07, 3.6081e-07,  ..., 8.1545e-04,
          1.0142e-06, 1.0934e-05],
         [2.0093e-01, 2.1375e-01, 1.9718e-01,  ..., 2.0376e-01,
          2.0261e-01, 2.0318e-01],
         [1.3431e-05, 2.9144e-08, 4.7270e-08,  ..., 2.4882e-06,
          2.8577e-06, 2.8889e-06]],

        [[3.3496e-05, 7.5226e-07, 4.4474e-07,  ..., 9.4371e-04,
          1.1227e-06, 1.2010e-05],
         [3.0729e-05, 9.2917e-07, 3.7571e-07,  ..., 8.1896e-04,
          1.0245e-06, 1.1077e-05],
         [2.9937e-05, 9.2625e-07, 4.0361e-07,  ..., 8.2853e-04,
          9.8330e-07, 1.0508e-05],
         ...,
         [3.2366e-05, 6.6984e-07, 4.0969e-07,  ..., 7.9599e-04,
          1.0079e-06, 1.0790e-05],
         [2.2079e-01, 1.4101e-01, 2.3317e-01,  ..., 2.0043e-01,
          2.0406e-01, 2.0263e-01],
         [1.8641e-05, 8.3109e-08, 1.7320e-07,  ..., 4.0460e-06,
          3.3741e-06, 7.7758e-06]],

        [[3.0721e-05, 9.2855e-07, 3.7567e-07,  ..., 8.1978e-04,
          1.0244e-06, 1.1077e-05],
         [3.0042e-05, 9.7176e-07, 3.5900e-07,  ..., 8.1450e-04,
          1.0136e-06, 1.0939e-05],
         [2.7347e-05, 8.8362e-07, 3.4145e-07,  ..., 7.3368e-04,
          9.8414e-07, 9.7157e-06],
         ...,
         [3.0508e-05, 7.2639e-07, 3.6211e-07,  ..., 7.8989e-04,
          9.6156e-07, 1.0318e-05],
         [1.9354e-01, 2.2268e-01, 1.8147e-01,  ..., 2.0376e-01,
          1.9589e-01, 1.9634e-01],
         [1.6867e-05, 7.2095e-08, 9.8313e-08,  ..., 3.1133e-06,
          3.0008e-06, 3.6057e-06]],

        ...,

        [[6.4795e-06,        nan,        nan,  ..., 1.2863e-04,
          3.5239e-07, 2.8946e-06],
         [6.3702e-06,        nan,        nan,  ..., 1.2415e-04,
          3.5114e-07, 2.7724e-06],
         [5.7894e-06,        nan,        nan,  ..., 1.1611e-04,
          3.3351e-07, 2.5326e-06],
         ...,
         [6.1486e-06,        nan,        nan,  ..., 1.2069e-04,
          3.2255e-07, 2.5897e-06],
         [1.9316e-01,        nan,        nan,  ..., 1.8186e-01,
          1.8553e-01, 1.8687e-01],
         [2.1743e-06,        nan,        nan,  ..., 1.5240e-06,
          2.9679e-06, 9.1177e-07]],

        [[6.3830e-06,        nan,        nan,  ..., 1.2416e-04,
          3.5118e-07, 2.7752e-06],
         [6.5391e-06,        nan,        nan,  ..., 1.3585e-04,
          3.5633e-07, 2.8424e-06],
         [5.7157e-06,        nan,        nan,  ..., 1.2147e-04,
          3.1278e-07, 2.4863e-06],
         ...,
         [6.2096e-06,        nan,        nan,  ..., 1.2240e-04,
          3.2566e-07, 2.6136e-06],
         [2.0737e-01,        nan,        nan,  ..., 2.0824e-01,
          2.0731e-01, 2.0723e-01],
         [1.3274e-06,        nan,        nan,  ..., 7.5298e-07,
          1.7426e-06, 7.7829e-07]],

        [[6.5278e-06,        nan,        nan,  ..., 1.3587e-04,
          3.5649e-07, 2.8415e-06],
         [6.1410e-06,        nan,        nan,  ..., 1.2041e-04,
          3.2218e-07, 2.5866e-06],
         [5.7368e-06,        nan,        nan,  ..., 1.1895e-04,
          3.1257e-07, 2.4873e-06],
         ...,
         [6.3844e-06,        nan,        nan,  ..., 1.2560e-04,
          3.4043e-07, 2.7307e-06],
         [2.1112e-01,        nan,        nan,  ..., 2.1070e-01,
          2.1465e-01, 2.1454e-01],
         [2.3797e-06,        nan,        nan,  ..., 1.1762e-06,
          4.4257e-06, 8.5993e-07]]]), torch.Size([495, 18, 394])
instruments: all
[39743:MainThread](2024-01-20 00:08:08,419) INFO - qlib.timer - [log.py:127] - Time cost: 0.672s | CSZFillna Done
[39743:MainThread](2024-01-20 00:08:08,423) INFO - qlib.timer - [log.py:127] - Time cost: 0.004s | DropnaProcessor Done
[39743:MainThread](2024-01-20 00:08:08,427) INFO - qlib.timer - [log.py:127] - Time cost: 0.003s | MinMaxNorm Done
raw df:                            $open     $close  ...  $usd_price_pct   $usd_volume
datetime   instrument                        ...                              
2022-09-23 1INCH-USDT   0.593000   0.609000  ...        0.990452  2.892365e+07
           AAVE-USDT   76.699997  77.099998  ...        0.982887  7.692371e+07
           ACA-USDT     0.221200   0.223000  ...        0.958074  1.442172e+06
           ACH-USDT     0.011370   0.011860  ...        0.999285  5.011673e+06
           ACM-USDT     3.814000   4.236000  ...        1.023066  5.635930e+06
...                          ...        ...  ...             ...           ...
2023-10-01 YGG-USDT     0.246700   0.250200  ...        0.937181  2.317559e+07
           ZEC-USDT    26.910000  28.059999  ...        0.985763  3.927619e+07
           ZEN-USDT     7.780000   8.350000  ...        0.945512  6.446274e+06
           ZIL-USDT     0.017770   0.017970  ...        0.980666  1.402580e+07
           ZRX-USDT     0.190900   0.196900  ...        0.975817  7.896374e+06

[130803 rows x 18 columns]
preprocessed df:                               $open        $close  ...  $usd_price_pct   $usd_volume
datetime   instrument                              ...                              
2022-09-23 1INCH-USDT  7.155245e-06  7.347448e-06  ...        0.203369  1.476989e-06
           AAVE-USDT   9.254852e-04  9.302031e-04  ...        0.201815  3.928119e-06
           ACA-USDT    2.668995e-06  2.690400e-06  ...        0.196715  7.364437e-08
           ACH-USDT    1.371228e-07  1.430186e-07  ...        0.205185  2.559214e-07
           ACM-USDT    4.602080e-05  5.110681e-05  ...        0.210072  2.877991e-07
...                             ...           ...  ...             ...           ...
2023-10-01 YGG-USDT    2.976686e-06  3.018565e-06  ...        0.192421  1.183464e-06
           ZEC-USDT    3.247041e-04  3.385408e-04  ...        0.202406  2.005643e-06
           ZEN-USDT    9.387576e-05  1.007418e-04  ...        0.194133  3.291794e-07
           ZIL-USDT    2.143471e-07  2.167350e-07  ...        0.201358  7.162287e-07
           ZRX-USDT    2.303386e-06  2.375506e-06  ...        0.200361  4.032290e-07

[130803 rows x 18 columns]
df after stack: instrument                   1INCH-USDT  ...      ZRX-USDT
datetime                                 ...              
2022-09-23 $open           7.155245e-06  ...  3.330228e-06
           $close          7.347448e-06  ...  3.369653e-06
           $high           6.515724e-06  ...  2.976776e-06
           $low            8.818691e-06  ...  4.006120e-06
           $volume         2.428194e-08  ...  1.422471e-08
...                                 ...  ...           ...
2023-10-01 $total_mcap     3.047052e-04  ...  1.451286e-04
           $turnover_rate  6.442768e-06  ...  5.813119e-06
           $usd_price      3.133691e-06  ...  2.242022e-06
           $usd_price_pct  1.985269e-01  ...  2.003614e-01
           $usd_volume     7.614861e-07  ...  4.032290e-07

[6732 rows x 398 columns]
features: ['$open', '$close', '$high', '$low', '$volume', '$quote_volume', '$trade_num', '$taker_buy_base_asset_volume', '$taker_buy_quote_asset_volume', '$circulating_supply', '$circulating_mcap', '$num_market_pairs', '$pct_diff_abs', '$total_mcap', '$turnover_rate', '$usd_price', '$usd_price_pct', '$usd_volume']
dates: DatetimeIndex(['2022-09-23', '2022-09-24', '2022-09-25', '2022-09-26',
               '2022-09-27', '2022-09-28', '2022-09-29', '2022-09-30',
               '2022-10-01', '2022-10-02',
               ...
               '2023-09-22', '2023-09-23', '2023-09-24', '2023-09-25',
               '2023-09-26', '2023-09-27', '2023-09-28', '2023-09-29',
               '2023-09-30', '2023-10-01'],
              dtype='datetime64[ns]', name='datetime', length=374, freq=None)
stock ids: Index(['1INCH-USDT', 'AAVE-USDT', 'ACA-USDT', 'ACH-USDT', 'ACM-USDT',
       'ADA-USDT', 'ADADOWN-USDT', 'ADAUP-USDT', 'ADX-USDT', 'AERGO-USDT',
       ...
       'XTZ-USDT', 'XVG-USDT', 'XVS-USDT', 'YFI-USDT', 'YFII-USDT', 'YGG-USDT',
       'ZEC-USDT', 'ZEN-USDT', 'ZIL-USDT', 'ZRX-USDT'],
      dtype='object', name='instrument', length=398)
values: [[7.1552454e-06 9.2548516e-04 2.6689950e-06 ... 1.7122074e-04
  3.9980617e-07 3.3302279e-06]
 [7.3474484e-06 9.3020307e-04 2.6903999e-06 ... 1.7083880e-04
  3.9722585e-07 3.3696533e-06]
 [6.5157237e-06 8.2947366e-04 2.3662501e-06 ... 1.5273677e-04
  3.5551327e-07 2.9767764e-06]
 ...
 [3.1336906e-06 7.8737817e-04 6.1813284e-07 ... 9.2738905e-05
  2.0380213e-07 2.2420215e-06]
 [1.9852686e-01 1.9327748e-01 1.9024003e-01 ... 1.9413280e-01
  2.0135812e-01 2.0036142e-01]
 [7.6148615e-07 3.0918193e-06 6.0260356e-07 ... 3.2917944e-07
  7.1622873e-07 4.0322900e-07]], (6732, 398)
/Users/yangguangyu/anaconda3/envs/quant_dev/lib/python3.9/site-packages/torch/nn/modules/transformer.py:282: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.activation_relu_or_gelu was not True
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
values: [[[7.1552454e-06 9.2548516e-04 2.6689950e-06 ... 1.7122074e-04
   3.9980617e-07 3.3302279e-06]
  [7.3474484e-06 9.3020307e-04 2.6903999e-06 ... 1.7083880e-04
   3.9722585e-07 3.3696533e-06]
  [6.5157237e-06 8.2947366e-04 2.3662501e-06 ... 1.5273677e-04
   3.5551327e-07 2.9767764e-06]
  ...
  [7.2654775e-06 8.9148927e-04 2.4385654e-06 ... 1.6696054e-04
   3.8258432e-07 3.2489406e-06]
  [2.0336930e-01 2.0181458e-01 1.9671477e-01 ... 2.0134223e-01
   2.0158665e-01 2.0227580e-01]
  [1.4769893e-06 3.9281185e-06 7.3644372e-08 ... 2.9516028e-07
   1.6141233e-06 5.6634252e-07]]

 [[7.3483066e-06 9.2910510e-04 2.6919208e-06 ... 1.7097942e-04
   3.9727226e-07 3.3712533e-06]
  [7.3112537e-06 9.0486684e-04 2.5432084e-06 ... 1.6987362e-04
   3.8865974e-07 3.2864052e-06]
  [6.5894078e-06 8.1473676e-04 2.4662502e-06 ... 1.5263150e-04
   3.5014486e-07 2.9651974e-06]
  ...
  [7.5476146e-06 9.2116324e-04 2.4098738e-06 ... 1.7004456e-04
   3.8525511e-07 3.2377682e-06]
  [2.1331283e-01 2.1217293e-01 2.0291361e-01 ... 2.0912817e-01
   2.0676623e-01 2.0462497e-01]
  [2.6190471e-06 5.5471846e-06 1.3375758e-07 ... 3.5509359e-07
   2.4066458e-06 7.8519093e-07]]

 [[7.3121073e-06 9.0376590e-04 2.5386787e-06 ... 1.6977279e-04
   3.8870513e-07 3.2855828e-06]
  [7.2388643e-06 8.8797597e-04 2.4334176e-06 ... 1.6661610e-04
   3.8154147e-07 3.2405587e-06]
  [6.5999338e-06 8.1684202e-04 2.2357237e-06 ... 1.5052625e-04
   3.4382904e-07 2.8988820e-06]
  ...
  [7.3546194e-06 9.2696853e-04 2.3111782e-06 ... 1.7024658e-04
   3.7981118e-07 3.2220651e-06]
  [2.0007637e-01 2.0662700e-01 1.9691461e-01 ... 2.0557594e-01
   2.0242803e-01 2.0433496e-01]
  [2.1231988e-06 6.3887665e-06 1.3992451e-07 ... 4.9934664e-07
   2.6975877e-06 9.9579370e-07]]

 ...

 [[3.2481771e-06 7.9251459e-04 5.9600421e-07 ... 9.4117080e-05
   2.0578004e-07 2.3456180e-06]
  [3.2152225e-06 7.9700665e-04 5.9110863e-07 ... 9.3985444e-05
   2.0744510e-07 2.3453440e-06]
  [2.8367765e-06 7.1526307e-04 5.3677644e-07 ... 8.2526254e-05
   1.8403958e-07 2.0999341e-06]
  ...
  [3.3441131e-06 8.7172538e-04 5.9721413e-07 ... 1.0095588e-04
   2.1723390e-07 2.3848190e-06]
  [2.1048398e-01 2.1926041e-01 2.0867020e-01 ... 2.2038387e-01
   2.0779608e-01 2.1230778e-01]
  [8.3675792e-07 4.3920932e-06 7.5240955e-08 ... 3.2516829e-07
   7.8251418e-07 4.2779854e-07]]

 [[3.2180114e-06 7.9722045e-04 5.9117770e-07 ... 9.3996416e-05
   2.0746933e-07 2.3456180e-06]
  [3.2538301e-06 8.1510399e-04 5.8628268e-07 ... 9.3985444e-05
   2.1432207e-07 2.3031168e-06]
  [2.8609873e-06 7.2294730e-04 5.2098693e-07 ... 8.2420986e-05
   1.8940800e-07 2.0546711e-06]
  ...
  [3.2410001e-06 8.3643512e-04 6.6712414e-07 ... 9.8083314e-05
   2.0782143e-07 2.2975860e-06]
  [1.9899456e-01 1.9701129e-01 2.2938810e-01 ... 1.9948369e-01
   1.9642936e-01 1.9781405e-01]
  [1.2919872e-06 5.0900553e-06 1.2399637e-06 ... 4.3190670e-07
   1.0476655e-06 4.9886114e-07]]

 [[3.2554169e-06 8.1519922e-04 5.8635118e-07 ... 9.3875758e-05
   2.1434711e-07 2.3033858e-06]
  [3.3370779e-06 8.7120576e-04 5.9714108e-07 ... 1.0074179e-04
   2.1673505e-07 2.3755063e-06]
  [2.9399346e-06 7.6210522e-04 5.2519749e-07 ... 8.9263085e-05
   1.9203958e-07 2.0999341e-06]
  ...
  [3.1336906e-06 7.8737817e-04 6.1813284e-07 ... 9.2738905e-05
   2.0380213e-07 2.2420215e-06]
  [1.9852686e-01 1.9327748e-01 1.9024003e-01 ... 1.9413280e-01
   2.0135812e-01 2.0036142e-01]
  [7.6148615e-07 3.0918193e-06 6.0260356e-07 ... 3.2917944e-07
   7.1622873e-07 4.0322900e-07]]], (374, 18, 398)
test data: tensor([[[7.1552e-06, 9.2549e-04, 2.6690e-06,  ..., 1.7122e-04,
          3.9981e-07, 3.3302e-06],
         [7.3474e-06, 9.3020e-04, 2.6904e-06,  ..., 1.7084e-04,
          3.9723e-07, 3.3697e-06],
         [6.5157e-06, 8.2947e-04, 2.3663e-06,  ..., 1.5274e-04,
          3.5551e-07, 2.9768e-06],
         ...,
         [7.2655e-06, 8.9149e-04, 2.4386e-06,  ..., 1.6696e-04,
          3.8258e-07, 3.2489e-06],
         [2.0337e-01, 2.0181e-01, 1.9671e-01,  ..., 2.0134e-01,
          2.0159e-01, 2.0228e-01],
         [1.4770e-06, 3.9281e-06, 7.3644e-08,  ..., 2.9516e-07,
          1.6141e-06, 5.6634e-07]],

        [[7.3483e-06, 9.2911e-04, 2.6919e-06,  ..., 1.7098e-04,
          3.9727e-07, 3.3713e-06],
         [7.3113e-06, 9.0487e-04, 2.5432e-06,  ..., 1.6987e-04,
          3.8866e-07, 3.2864e-06],
         [6.5894e-06, 8.1474e-04, 2.4663e-06,  ..., 1.5263e-04,
          3.5014e-07, 2.9652e-06],
         ...,
         [7.5476e-06, 9.2116e-04, 2.4099e-06,  ..., 1.7004e-04,
          3.8526e-07, 3.2378e-06],
         [2.1331e-01, 2.1217e-01, 2.0291e-01,  ..., 2.0913e-01,
          2.0677e-01, 2.0462e-01],
         [2.6190e-06, 5.5472e-06, 1.3376e-07,  ..., 3.5509e-07,
          2.4066e-06, 7.8519e-07]],

        [[7.3121e-06, 9.0377e-04, 2.5387e-06,  ..., 1.6977e-04,
          3.8871e-07, 3.2856e-06],
         [7.2389e-06, 8.8798e-04, 2.4334e-06,  ..., 1.6662e-04,
          3.8154e-07, 3.2406e-06],
         [6.5999e-06, 8.1684e-04, 2.2357e-06,  ..., 1.5053e-04,
          3.4383e-07, 2.8989e-06],
         ...,
         [7.3546e-06, 9.2697e-04, 2.3112e-06,  ..., 1.7025e-04,
          3.7981e-07, 3.2221e-06],
         [2.0008e-01, 2.0663e-01, 1.9691e-01,  ..., 2.0558e-01,
          2.0243e-01, 2.0433e-01],
         [2.1232e-06, 6.3888e-06, 1.3992e-07,  ..., 4.9935e-07,
          2.6976e-06, 9.9579e-07]],

        ...,

        [[3.2482e-06, 7.9251e-04, 5.9600e-07,  ..., 9.4117e-05,
          2.0578e-07, 2.3456e-06],
         [3.2152e-06, 7.9701e-04, 5.9111e-07,  ..., 9.3985e-05,
          2.0745e-07, 2.3453e-06],
         [2.8368e-06, 7.1526e-04, 5.3678e-07,  ..., 8.2526e-05,
          1.8404e-07, 2.0999e-06],
         ...,
         [3.3441e-06, 8.7173e-04, 5.9721e-07,  ..., 1.0096e-04,
          2.1723e-07, 2.3848e-06],
         [2.1048e-01, 2.1926e-01, 2.0867e-01,  ..., 2.2038e-01,
          2.0780e-01, 2.1231e-01],
         [8.3676e-07, 4.3921e-06, 7.5241e-08,  ..., 3.2517e-07,
          7.8251e-07, 4.2780e-07]],

        [[3.2180e-06, 7.9722e-04, 5.9118e-07,  ..., 9.3996e-05,
          2.0747e-07, 2.3456e-06],
         [3.2538e-06, 8.1510e-04, 5.8628e-07,  ..., 9.3985e-05,
          2.1432e-07, 2.3031e-06],
         [2.8610e-06, 7.2295e-04, 5.2099e-07,  ..., 8.2421e-05,
          1.8941e-07, 2.0547e-06],
         ...,
         [3.2410e-06, 8.3644e-04, 6.6712e-07,  ..., 9.8083e-05,
          2.0782e-07, 2.2976e-06],
         [1.9899e-01, 1.9701e-01, 2.2939e-01,  ..., 1.9948e-01,
          1.9643e-01, 1.9781e-01],
         [1.2920e-06, 5.0901e-06, 1.2400e-06,  ..., 4.3191e-07,
          1.0477e-06, 4.9886e-07]],

        [[3.2554e-06, 8.1520e-04, 5.8635e-07,  ..., 9.3876e-05,
          2.1435e-07, 2.3034e-06],
         [3.3371e-06, 8.7121e-04, 5.9714e-07,  ..., 1.0074e-04,
          2.1674e-07, 2.3755e-06],
         [2.9399e-06, 7.6211e-04, 5.2520e-07,  ..., 8.9263e-05,
          1.9204e-07, 2.0999e-06],
         ...,
         [3.1337e-06, 7.8738e-04, 6.1813e-07,  ..., 9.2739e-05,
          2.0380e-07, 2.2420e-06],
         [1.9853e-01, 1.9328e-01, 1.9024e-01,  ..., 1.9413e-01,
          2.0136e-01, 2.0036e-01],
         [7.6149e-07, 3.0918e-06, 6.0260e-07,  ..., 3.2918e-07,
          7.1623e-07, 4.0323e-07]]]), torch.Size([374, 18, 398])
Using cpu device
Wrapping the env with a `Monitor` wrapper
Wrapping the env in a DummyVecEnv.
Logging to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/crypto/new_all_200_5_20240120000808_1
/Users/yangguangyu/anaconda3/envs/quant_dev/lib/python3.9/site-packages/gymnasium/core.py:311: UserWarning: [33mWARN: env.action_masks to get variables from other wrappers is deprecated and will be removed in v1.0, to get this variable you can do `env.unwrapped.action_masks` for environment variables or `env.get_wrapper_attr('action_masks')` that will search the reminding wrappers.[0m
  logger.warn(
/Users/yangguangyu/anaconda3/envs/quant_dev/lib/python3.9/site-packages/stable_baselines3/common/save_util.py:283: UserWarning: Path '/Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/crypto/new_all_200_5_20240120000808' does not exist. Will create it.
  warnings.warn(f"Path '{path.parent}' does not exist. Will create it.")
Var(Mad($open,30),40)
Ref($turnover_rate,10)
Std(Abs(Var(EMA($usd_price,30),50)),40)
Mul(Constant(-5.0),$usd_volume)
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/crypto/new_all_200_5_20240120000808/2048_steps
---------------------------------
| pool/              |          |
|    best_ic_ret     | 0.0413   |
|    eval_cnt        | 3        |
|    significant     | 3        |
|    size            | 3        |
| rollout/           |          |
|    ep_len_mean     | 19.4     |
|    ep_rew_mean     | -0.959   |
| test/              |          |
|    ic              | 0.0237   |
|    rank_ic         | 0.0241   |
| time/              |          |
|    fps             | 286      |
|    iterations      | 1        |
|    time_elapsed    | 7        |
|    total_timesteps | 2048     |
---------------------------------
/Users/yangguangyu/anaconda3/envs/quant_dev/lib/python3.9/site-packages/gymnasium/core.py:311: UserWarning: [33mWARN: env.action_masks to get variables from other wrappers is deprecated and will be removed in v1.0, to get this variable you can do `env.unwrapped.action_masks` for environment variables or `env.get_wrapper_attr('action_masks')` that will search the reminding wrappers.[0m
  logger.warn(
$total_mcap
$high
$open
$pct_diff_abs
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/crypto/new_all_200_5_20240120000808/4096_steps
-----------------------------------------
| pool/                   |             |
|    best_ic_ret          | 0.0693      |
|    eval_cnt             | 6           |
|    significant          | 6           |
|    size                 | 6           |
| rollout/                |             |
|    ep_len_mean          | 19.3        |
|    ep_rew_mean          | -0.958      |
| test/                   |             |
|    ic                   | 0.0237      |
|    rank_ic              | 0.0261      |
| time/                   |             |
|    fps                  | 69          |
|    iterations           | 2           |
|    time_elapsed         | 58          |
|    total_timesteps      | 4096        |
| train/                  |             |
|    approx_kl            | 0.017293133 |
|    clip_fraction        | 0.243       |
|    clip_range           | 0.2         |
|    entropy_loss         | -3.52       |
|    explained_variance   | 0.22        |
|    learning_rate        | 0.001       |
|    loss                 | -0.313      |
|    n_updates            | 10          |
|    policy_gradient_loss | -0.0242     |
|    value_loss           | 0.212       |
-----------------------------------------
$close
$circulating_supply
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/crypto/new_all_200_5_20240120000808/6144_steps
-----------------------------------------
| pool/                   |             |
|    best_ic_ret          | 0.127       |
|    eval_cnt             | 7           |
|    significant          | 6           |
|    size                 | 7           |
| rollout/                |             |
|    ep_len_mean          | 19.8        |
|    ep_rew_mean          | -0.989      |
| test/                   |             |
|    ic                   | 0.0185      |
|    rank_ic              | 0.0566      |
| time/                   |             |
|    fps                  | 55          |
|    iterations           | 3           |
|    time_elapsed         | 109         |
|    total_timesteps      | 6144        |
| train/                  |             |
|    approx_kl            | 0.014468497 |
|    clip_fraction        | 0.162       |
|    clip_range           | 0.2         |
|    entropy_loss         | -3.5        |
|    explained_variance   | 3.31e-05    |
|    learning_rate        | 0.001       |
|    loss                 | -0.372      |
|    n_updates            | 20          |
|    policy_gradient_loss | -0.0159     |
|    value_loss           | 0.0142      |
-----------------------------------------
$pct_diff_abs
Less(Div(Constant(-2.0),$turnover_rate),$trade_num)
$circulating_mcap
Mad($circulating_mcap,50)
$open
$open
Delta($close,30)
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/crypto/new_all_200_5_20240120000808/8192_steps
-----------------------------------------
| pool/                   |             |
|    best_ic_ret          | 0.128       |
|    eval_cnt             | 10          |
|    significant          | 9           |
|    size                 | 10          |
| rollout/                |             |
|    ep_len_mean          | 18.8        |
|    ep_rew_mean          | -0.926      |
| test/                   |             |
|    ic                   | 0.0239      |
|    rank_ic              | 0.0637      |
| time/                   |             |
|    fps                  | 51          |
|    iterations           | 4           |
|    time_elapsed         | 160         |
|    total_timesteps      | 8192        |
| train/                  |             |
|    approx_kl            | 0.014758664 |
|    clip_fraction        | 0.156       |
|    clip_range           | 0.2         |
|    entropy_loss         | -3.5        |
|    explained_variance   | 4.68e-05    |
|    learning_rate        | 0.001       |
|    loss                 | -0.346      |
|    n_updates            | 30          |
|    policy_gradient_loss | -0.0129     |
|    value_loss           | 0.0039      |
-----------------------------------------
Log(Med(Add(Constant(-10.0),$num_market_pairs),30))
Log(Div($pct_diff_abs,Less(Div(Sub(Add($turnover_rate,Add($turnover_rate,Constant(2.0))),Constant(0.01)),$num_market_pairs),Abs(WMA(Mad($trade_num,50),50)))))
$low
Div(Less(Less(Std(Std(Std($high,30),20),30),Less(Med(Mean($circulating_mcap,30),30),$usd_price)),$turnover_rate),Constant(2.0))
$close
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/crypto/new_all_200_5_20240120000808/10240_steps
-----------------------------------------
| pool/                   |             |
|    best_ic_ret          | 0.13        |
|    eval_cnt             | 13          |
|    significant          | 12          |
|    size                 | 13          |
| rollout/                |             |
|    ep_len_mean          | 19.5        |
|    ep_rew_mean          | -0.946      |
| test/                   |             |
|    ic                   | 0.0365      |
|    rank_ic              | 0.0876      |
| time/                   |             |
|    fps                  | 47          |
|    iterations           | 5           |
|    time_elapsed         | 214         |
|    total_timesteps      | 10240       |
| train/                  |             |
|    approx_kl            | 0.014779488 |
|    clip_fraction        | 0.164       |
|    clip_range           | 0.2         |
|    entropy_loss         | -3.48       |
|    explained_variance   | 1.19e-05    |
|    learning_rate        | 0.001       |
|    loss                 | -0.334      |
|    n_updates            | 40          |
|    policy_gradient_loss | -0.0158     |
|    value_loss           | 0.0107      |
-----------------------------------------
Div(Med(Abs($turnover_rate),20),$taker_buy_quote_asset_volume)
Mul(Constant(0.01),Sub(Add(Add(Med($circulating_supply,30),Mul(Less($turnover_rate,$high),$open)),Constant(-2.0)),Constant(10.0)))
$num_market_pairs
Sub($volume,Cov(Abs(Div($trade_num,Mean($turnover_rate,20))),Med($turnover_rate,50),30))
Abs($pct_diff_abs)
Div($quote_volume,Constant(-10.0))
Add(Greater(Add($close,$open),Constant(1.0)),Less($trade_num,Add(Less(Constant(10.0),Mean(Var($usd_volume,40),50)),$open)))
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/crypto/new_all_200_5_20240120000808/12288_steps
-----------------------------------------
| pool/                   |             |
|    best_ic_ret          | 0.152       |
|    eval_cnt             | 19          |
|    significant          | 16          |
|    size                 | 19          |
| rollout/                |             |
|    ep_len_mean          | 19.4        |
|    ep_rew_mean          | -0.933      |
| test/                   |             |
|    ic                   | 0.0327      |
|    rank_ic              | 0.0886      |
| time/                   |             |
|    fps                  | 45          |
|    iterations           | 6           |
|    time_elapsed         | 269         |
|    total_timesteps      | 12288       |
| train/                  |             |
|    approx_kl            | 0.020824723 |
|    clip_fraction        | 0.309       |
|    clip_range           | 0.2         |
|    entropy_loss         | -3.45       |
|    explained_variance   | 4.77e-07    |
|    learning_rate        | 0.001       |
|    loss                 | -0.366      |
|    n_updates            | 50          |
|    policy_gradient_loss | -0.0212     |
|    value_loss           | 0.0159      |
-----------------------------------------
Add($circulating_mcap,$circulating_mcap)
Add(Div(Constant(2.0),$taker_buy_base_asset_volume),$turnover_rate)
Sub(Constant(-10.0),Div($taker_buy_base_asset_volume,$taker_buy_quote_asset_volume))
$low
$num_market_pairs
$open
WMA(Abs(Ref($low,20)),40)
Mean($quote_volume,50)
$pct_diff_abs
Less($low,Mad(Greater(Sub(Sum(Div($total_mcap,Mad(Greater(Div($total_mcap,Constant(-0.01)),$total_mcap),50)),10),Constant(-0.01)),$high),40))
Mul($close,Constant(-5.0))
Var($close,10)
WMA(WMA(Med($open,40),50),50)
Div(Greater($usd_price_pct,Add($taker_buy_base_asset_volume,Less(Mean(Div($usd_price,$taker_buy_base_asset_volume),10),Abs($trade_num)))),Mul(Constant(10.0),$num_market_pairs))
$low
$high
Add(Less(Div(Constant(-10.0),Add($open,$circulating_mcap)),Sub(Div(Constant(5.0),Mul($pct_diff_abs,$trade_num)),Mul($circulating_mcap,$circulating_mcap))),Add(Constant(2.0),$num_market_pairs))
$pct_diff_abs
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/crypto/new_all_200_5_20240120000808/14336_steps
-----------------------------------------
| pool/                   |             |
|    best_ic_ret          | 0.163       |
|    eval_cnt             | 28          |
|    significant          | 17          |
|    size                 | 28          |
| rollout/                |             |
|    ep_len_mean          | 17.8        |
|    ep_rew_mean          | -0.827      |
| test/                   |             |
|    ic                   | 0.0256      |
|    rank_ic              | 0.0959      |
| time/                   |             |
|    fps                  | 43          |
|    iterations           | 7           |
|    time_elapsed         | 328         |
|    total_timesteps      | 14336       |
| train/                  |             |
|    approx_kl            | 0.017110776 |
|    clip_fraction        | 0.275       |
|    clip_range           | 0.2         |
|    entropy_loss         | -3.43       |
|    explained_variance   | 6.56e-07    |
|    learning_rate        | 0.001       |
|    loss                 | -0.355      |
|    n_updates            | 60          |
|    policy_gradient_loss | -0.019      |
|    value_loss           | 0.0235      |
-----------------------------------------
Abs(Sub(WMA(Log(Log($circulating_supply)),30),Constant(-2.0)))
Div(Constant(-1.0),$num_market_pairs)
$open
$total_mcap
$circulating_supply
$close
$close
$quote_volume
Mean(Abs(Div(Constant(0.5),Sum($high,30))),30)
Std(Div(Var(Med($num_market_pairs,40),10),$high),50)
Var(Div(Constant(0.5),$total_mcap),20)
$turnover_rate
Log(Sum(Div(Sub(Div(Sum($circulating_mcap,10),Constant(10.0)),$num_market_pairs),Constant(-2.0)),50))
$usd_price
$circulating_mcap
Sub(Constant(-2.0),Sum($usd_volume,40))
$usd_price_pct
$circulating_mcap
Add(Less(Greater(Constant(-0.01),$quote_volume),Mul(Div(Mean(WMA($open,20),50),Mul($usd_volume,Less(Constant(-5.0),$low))),Constant(-2.0))),$total_mcap)
Sub($open,Constant(30.0))
$usd_volume
Sub(Mean($low,30),$num_market_pairs)
$circulating_supply
Add(Constant(-10.0),$num_market_pairs)
Div(Delta($open,50),Add($volume,$close))
$usd_price
Abs($turnover_rate)
Mean($num_market_pairs,50)
$circulating_supply
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/crypto/new_all_200_5_20240120000808/16384_steps
-----------------------------------------
| pool/                   |             |
|    best_ic_ret          | 0.241       |
|    eval_cnt             | 41          |
|    significant          | 32          |
|    size                 | 41          |
| rollout/                |             |
|    ep_len_mean          | 16.6        |
|    ep_rew_mean          | -0.748      |
| test/                   |             |
|    ic                   | 0.125       |
|    rank_ic              | 0.192       |
| time/                   |             |
|    fps                  | 41          |
|    iterations           | 8           |
|    time_elapsed         | 391         |
|    total_timesteps      | 16384       |
| train/                  |             |
|    approx_kl            | 0.017270267 |
|    clip_fraction        | 0.268       |
|    clip_range           | 0.2         |
|    entropy_loss         | -3.4        |
|    explained_variance   | 3.16e-06    |
|    learning_rate        | 0.001       |
|    loss                 | -0.33       |
|    n_updates            | 70          |
|    policy_gradient_loss | -0.0239     |
|    value_loss           | 0.042       |
-----------------------------------------
$total_mcap
Add(Greater($taker_buy_quote_asset_volume,$turnover_rate),Sub(Less(Constant(-2.0),$open),Ref(Add($taker_buy_base_asset_volume,Sub(Div(Std($open,30),$total_mcap),Constant(1.0))),30)))
$pct_diff_abs
Div($usd_volume,Add($quote_volume,Var($low,30)))
$low
Mul($circulating_supply,Constant(-10.0))
$num_market_pairs
$open
Add($usd_price_pct,Mul(Greater($total_mcap,$volume),Mul($num_market_pairs,$quote_volume)))
Min(Delta($high,10),50)
Std($circulating_supply,10)
$num_market_pairs
Sum($open,20)
$open
Mul($open,Add($usd_price_pct,$usd_volume))
Mean($usd_price,50)
Add(Constant(-2.0),$low)
Sub(Div(Sub(Constant(-10.0),$close),$trade_num),Greater($circulating_mcap,Greater(Less(Greater(Abs(Abs($close)),Constant(30.0)),Ref($volume,10)),$taker_buy_quote_asset_volume)))
Sub(Less(Mul(Div(Constant(-10.0),Std($usd_price,50)),$high),Sub($circulating_mcap,Mean(Delta(Div($total_mcap,$num_market_pairs),30),20))),Constant(0.01))
Greater($volume,Mul($total_mcap,Abs(WMA(Mad($usd_price,30),20))))
$num_market_pairs
Mean($close,50)
Mean($circulating_supply,10)
Add(Add(Constant(2.0),$taker_buy_base_asset_volume),Constant(10.0))
Div(Std(Log(Std(Var($high,50),50)),10),$open)
$usd_price_pct
Mul(Less(Div(Constant(-10.0),Mul($usd_price_pct,$quote_volume)),Constant(-0.01)),Mul(Less(Div($usd_price,Constant(-2.0)),Mul($quote_volume,Constant(-0.01))),Constant(1.0)))
$quote_volume
Div(Constant(2.0),Mean($total_mcap,30))
$trade_num
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/crypto/new_all_200_5_20240120000808/18432_steps
----------------------------------------
| pool/                   |            |
|    best_ic_ret          | 0.243      |
|    eval_cnt             | 55         |
|    significant          | 44         |
|    size                 | 55         |
| rollout/                |            |
|    ep_len_mean          | 16.9       |
|    ep_rew_mean          | -0.743     |
| test/                   |            |
|    ic                   | 0.125      |
|    rank_ic              | 0.191      |
| time/                   |            |
|    fps                  | 39         |
|    iterations           | 9          |
|    time_elapsed         | 461        |
|    total_timesteps      | 18432      |
| train/                  |            |
|    approx_kl            | 0.01696162 |
|    clip_fraction        | 0.28       |
|    clip_range           | 0.2        |
|    entropy_loss         | -3.38      |
|    explained_variance   | 2.56e-06   |
|    learning_rate        | 0.001      |
|    loss                 | -0.345     |
|    n_updates            | 80         |
|    policy_gradient_loss | -0.0283    |
|    value_loss           | 0.0564     |
----------------------------------------
$total_mcap
Delta(Add(Mul(Greater(Constant(2.0),Sub(Mul(Greater($open,Sum($low,30)),Constant(0.5)),Mean($open,30))),$usd_price_pct),Constant(30.0)),50)
Add(Div($num_market_pairs,Add($usd_volume,$pct_diff_abs)),Div(Constant(30.0),$num_market_pairs))
Add($volume,Sum($turnover_rate,50))
Sub(Constant(30.0),Mul($open,Mean(Sub(Less(Constant(-10.0),$pct_diff_abs),$total_mcap),10)))
$circulating_mcap
Add(Mul($open,Constant(0.5)),Constant(10.0))
Sub($total_mcap,Less(Constant(-10.0),$high))
$usd_price_pct
Std(Mad(Sub(Delta(Std(Sub(Constant(-10.0),$quote_volume),40),40),$total_mcap),40),30)
Add(Constant(-10.0),WMA(Var(Add($pct_diff_abs,Add(Div($circulating_mcap,$num_market_pairs),Constant(-1.0))),50),30))
Mean($usd_volume,10)
Min(Greater(Add($taker_buy_quote_asset_volume,$usd_volume),$usd_price),40)
Log($circulating_mcap)
Ref(Add(Div(Sub($low,Div($close,Constant(-2.0))),Constant(10.0)),Var($taker_buy_base_asset_volume,10)),40)
$usd_price_pct
Ref($trade_num,50)
$open
Div(Constant(0.01),Corr(Add($circulating_mcap,Constant(1.0)),$close,50))
$turnover_rate
$close
$usd_volume
$usd_volume
$volume
Div(Std($usd_volume,50),Abs($open))
Std(Add(Div(Var($volume,50),Add(Div(Div($trade_num,Constant(2.0)),$total_mcap),$turnover_rate)),Constant(2.0)),40)
$circulating_mcap
WMA(Abs(Add(Constant(1.0),$taker_buy_quote_asset_volume)),50)
Log(Mad(Add(Constant(-10.0),$trade_num),40))
$open
$quote_volume
Sub(Sub(Constant(1.0),$open),Med(Mul(Sub($usd_price_pct,Mul($usd_volume,Div(Constant(0.01),Log(Div(Log($num_market_pairs),$quote_volume))))),$pct_diff_abs),30))
Add($quote_volume,Constant(1.0))
Mean(Div(Min(Var(Var(Corr($num_market_pairs,$taker_buy_base_asset_volume,50),40),50),20),Abs($volume)),50)
$circulating_mcap
$volume
Ref(Add(Mul(Div(Abs(Mad(Sub($quote_volume,$usd_volume),20)),$quote_volume),Less(Constant(0.5),Sub($num_market_pairs,$taker_buy_base_asset_volume))),Constant(-10.0)),10)
Abs(Add(Mul($usd_volume,$taker_buy_quote_asset_volume),Sum(Ref($num_market_pairs,40),10)))
Add(Mean(Ref($usd_price,50),50),Add(Add(Div($open,Constant(-1.0)),Constant(-2.0)),$low))
WMA(Sub(Abs(Mean($high,50)),$volume),30)
Div(Abs(Std($high,20)),Constant(2.0))
Mean(Sub($circulating_supply,Div($total_mcap,$open)),40)
Div(Delta(Sub(Constant(30.0),Mul(Greater(Mean(Add($low,$circulating_mcap),10),Div($close,$pct_diff_abs)),Mad($open,30))),10),Constant(-2.0))
Div(Mean($low,10),Log(Div(Constant(2.0),Add($num_market_pairs,Constant(1.0)))))
WMA($usd_volume,10)
$usd_volume
Abs(Div($usd_price,Constant(1.0)))
Abs(Mean(Max(EMA(Mean(Sub(Div($high,Sub($turnover_rate,$quote_volume)),$low),40),10),10),50))
Mean(Div(Sub(Less(Greater($quote_volume,Constant(1.0)),$usd_price),Abs($turnover_rate)),$low),20)
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/crypto/new_all_200_5_20240120000808/20480_steps
-----------------------------------------
| pool/                   |             |
|    best_ic_ret          | 0.254       |
|    eval_cnt             | 77          |
|    significant          | 56          |
|    size                 | 77          |
| rollout/                |             |
|    ep_len_mean          | 15.5        |
|    ep_rew_mean          | -0.6        |
| test/                   |             |
|    ic                   | 0.122       |
|    rank_ic              | 0.206       |
| time/                   |             |
|    fps                  | 36          |
|    iterations           | 10          |
|    time_elapsed         | 557         |
|    total_timesteps      | 20480       |
| train/                  |             |
|    approx_kl            | 0.016660918 |
|    clip_fraction        | 0.274       |
|    clip_range           | 0.2         |
|    entropy_loss         | -3.36       |
|    explained_variance   | 1.13e-06    |
|    learning_rate        | 0.001       |
|    loss                 | -0.324      |
|    n_updates            | 90          |
|    policy_gradient_loss | -0.0269     |
|    value_loss           | 0.074       |
-----------------------------------------
WMA(Log(Std($usd_price,50)),50)
$volume
Sub($high,Constant(-2.0))
Less(Sub($open,Constant(-10.0)),$circulating_supply)
Add(WMA($volume,20),Constant(-2.0))
Max(Add(Mul(Var(Mean(Abs(Sub(Div(Constant(-2.0),$total_mcap),Constant(-2.0))),30),10),Sub(Constant(-10.0),$circulating_mcap)),Log($trade_num)),50)
$circulating_mcap
Sub(Div(Var(Log(Mul(Constant(-2.0),$turnover_rate)),20),$volume),Sum(Div($high,Constant(2.0)),50))
$num_market_pairs
Mean($low,30)
Mean(Std($num_market_pairs,50),10)
Div($trade_num,Constant(-0.01))
$circulating_supply
$num_market_pairs
Div($volume,Div(Constant(-0.5),$usd_price))
Div(Add(Var(Ref($turnover_rate,20),30),$high),Sum($total_mcap,50))
Div(Mul(Constant(30.0),$open),Constant(-2.0))
Mul(Constant(-5.0),$pct_diff_abs)
Div(WMA(Add(Div(Add(Constant(-2.0),$usd_price_pct),$usd_volume),Mean(Div(Constant(-10.0),$open),20)),20),Sub(Constant(-1.0),Div($volume,Constant(0.01))))
Med(Add(Constant(0.5),Mul($open,Constant(-2.0))),20)
Abs($low)
Sub($low,Constant(-1.0))
$trade_num
$turnover_rate
$num_market_pairs
Add(Constant(5.0),Div(Div($taker_buy_base_asset_volume,Div($usd_volume,Add(Var($turnover_rate,10),$usd_price))),Less($pct_diff_abs,Less(Add(Constant(1.0),$usd_price),Constant(10.0)))))
Mul($total_mcap,Add(Div(Div(Add(Constant(-10.0),$circulating_mcap),Add($num_market_pairs,Add(Constant(30.0),$low))),Mul(Constant(30.0),$usd_price_pct)),Sub($num_market_pairs,Constant(-2.0))))
Mul(Add(Constant(-2.0),Sub($pct_diff_abs,$total_mcap)),Div(Mean($open,20),$num_market_pairs))
Mean(Delta(Mul($usd_volume,Constant(-0.01)),20),50)
Std($usd_volume,20)
Div(Constant(5.0),Add(Div($pct_diff_abs,$low),Constant(-1.0)))
Std(Add(Add(Div(Greater($circulating_mcap,Constant(5.0)),$usd_price_pct),$circulating_supply),Constant(30.0)),50)
Abs($volume)
Mul(Constant(-0.01),$circulating_mcap)
$low
Div(Constant(0.5),Std(Add($trade_num,Mul($circulating_mcap,Constant(0.01))),50))
Sub($circulating_mcap,$pct_diff_abs)
Mean(Abs(Log($usd_price_pct)),30)
Mean(Add(Constant(10.0),$circulating_mcap),10)
$close
Add(Add(Var($taker_buy_base_asset_volume,30),Div(Mul($pct_diff_abs,Constant(-2.0)),Div($turnover_rate,$circulating_supply))),Max($total_mcap,30))
Add($quote_volume,Constant(5.0))
Add($turnover_rate,$quote_volume)
$open
Abs(Log($close))
Greater(Mad(Add(Log($usd_volume),Constant(10.0)),30),$high)
Mean(Div(Mean(Add(Abs(Abs(EMA($usd_price_pct,30))),Constant(2.0)),20),Add($usd_price_pct,$usd_price)),40)
Abs(Add($trade_num,Abs($taker_buy_quote_asset_volume)))
Div(Constant(1.0),Div(Greater($volume,Std(Sub($circulating_supply,$circulating_supply),50)),EMA($usd_price_pct,40)))
Add(Constant(1.0),Sum(Add($usd_price_pct,Constant(30.0)),40))
Div(Less($usd_price_pct,$taker_buy_quote_asset_volume),$circulating_mcap)
$close
Cov(Var(Add(Constant(-10.0),$turnover_rate),20),$close,20)
$open
Sub($num_market_pairs,Mul($circulating_supply,$volume))
$pct_diff_abs
Sub(Var(Sub(Less(Constant(-0.01),$open),$quote_volume),10),$pct_diff_abs)
Add(Abs($high),Var($volume,50))
Abs($low)
$circulating_supply
$total_mcap
Div(Less(Less(Log(Mul(Constant(-30.0),Abs($volume))),Constant(-1.0)),$total_mcap),$pct_diff_abs)
Div($usd_volume,Constant(10.0))
Less($taker_buy_base_asset_volume,$quote_volume)
$close
$volume
Add(Constant(30.0),$low)
$close
$close
$total_mcap
Mul(Constant(1.0),Med(Div($num_market_pairs,$total_mcap),30))
Mul($usd_price_pct,Var(Div(Mul($total_mcap,Div($taker_buy_quote_asset_volume,Constant(-2.0))),Add($circulating_mcap,Constant(-0.01))),50))
$trade_num
Med($total_mcap,10)
$circulating_mcap
Mean(Div(Constant(-10.0),$pct_diff_abs),10)
Div(Less(Std(Sub($circulating_mcap,Log(Less($turnover_rate,$usd_price_pct))),30),Add($quote_volume,$turnover_rate)),Sub($taker_buy_quote_asset_volume,$total_mcap))
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/crypto/new_all_200_5_20240120000808/22528_steps
-----------------------------------------
| pool/                   |             |
|    best_ic_ret          | 0.28        |
|    eval_cnt             | 110         |
|    significant          | 76          |
|    size                 | 110         |
| rollout/                |             |
|    ep_len_mean          | 13          |
|    ep_rew_mean          | -0.427      |
| test/                   |             |
|    ic                   | 0.124       |
|    rank_ic              | 0.183       |
| time/                   |             |
|    fps                  | 31          |
|    iterations           | 11          |
|    time_elapsed         | 707         |
|    total_timesteps      | 22528       |
| train/                  |             |
|    approx_kl            | 0.016002035 |
|    clip_fraction        | 0.268       |
|    clip_range           | 0.2         |
|    entropy_loss         | -3.3        |
|    explained_variance   | 1.07e-06    |
|    learning_rate        | 0.001       |
|    loss                 | -0.302      |
|    n_updates            | 100         |
|    policy_gradient_loss | -0.0337     |
|    value_loss           | 0.125       |
-----------------------------------------
Abs(Greater($num_market_pairs,WMA(Sub(Mul($low,Constant(-2.0)),Constant(0.01)),10)))
Div(Std(Mul($high,Delta(Add(Abs(Med($total_mcap,10)),Div($trade_num,Sub(Constant(-2.0),$turnover_rate))),30)),30),Constant(-10.0))
Add(Constant(1.0),Add(Med($volume,10),Abs($high)))
$circulating_supply
Div($circulating_supply,$taker_buy_quote_asset_volume)
$usd_price
Add(Constant(30.0),Corr($low,Var($turnover_rate,40),20))
Greater(Add($trade_num,Mean(Sub(Add($taker_buy_quote_asset_volume,$taker_buy_base_asset_volume),Constant(10.0)),50)),Div($usd_price_pct,Add(Mean(Mean($usd_volume,50),10),$volume)))
Sub(Constant(-2.0),$open)
Div(Mad(Delta($circulating_mcap,10),30),$low)
Sub(Constant(1.0),$low)
Greater($open,$circulating_mcap)
$close
Mul(Add(Div(Div($usd_price_pct,$circulating_mcap),Constant(-10.0)),Constant(-0.01)),Add($volume,Abs(Add(Abs($pct_diff_abs),$usd_price_pct))))
Mul(Constant(-30.0),EMA(Var(Sub(Div(Div($taker_buy_quote_asset_volume,$usd_price_pct),$num_market_pairs),Greater(Constant(1.0),Abs($circulating_supply))),30),20))
$usd_volume
Add(Mad(Var(Mul(Constant(-5.0),$open),20),30),Var(Add(Std(Mul($usd_volume,Med($usd_price,50)),50),$num_market_pairs),50))
$low
Greater(Add($low,Constant(1.0)),$quote_volume)
$num_market_pairs
Div(Constant(30.0),Min($volume,20))
Mean($volume,20)
$quote_volume
Greater(Add(Sub($open,Log(Log($close))),Add($usd_price,Less($trade_num,Log(Mean($trade_num,50))))),$total_mcap)
$open
Std(Log($open),40)
Add(Sub(Mul(Constant(-2.0),Add($usd_price_pct,Constant(1.0))),Constant(-2.0)),$circulating_supply)
Mul($trade_num,Constant(-10.0))
Sub(Greater(Sub($usd_volume,$circulating_mcap),$trade_num),Constant(-1.0))
Add(Sub(Less(Constant(1.0),Sub(Delta(Div($num_market_pairs,Constant(30.0)),30),Constant(30.0))),$taker_buy_quote_asset_volume),Sub($total_mcap,$taker_buy_base_asset_volume))
Var(Var(Add(Constant(30.0),$num_market_pairs),10),50)
Delta(Div(Add($taker_buy_base_asset_volume,Constant(-30.0)),$high),50)
$usd_price_pct
Mul($open,Div($usd_volume,Constant(-10.0)))
Add($volume,Add(Div($turnover_rate,Constant(-10.0)),Sum(Abs($taker_buy_quote_asset_volume),40)))
$pct_diff_abs
Sub(Constant(-10.0),$volume)
Mean($close,40)
Sub(Med(Abs($turnover_rate),10),Delta(Med($volume,20),30))
Var(Less($usd_price,Sub($usd_volume,$usd_volume)),30)
Mean(Var(Div(Less(Add(Constant(-5.0),Abs($turnover_rate)),Sum($open,50)),Abs(Sum($usd_volume,50))),10),30)
$pct_diff_abs
Sum(Mul(Less(Constant(-10.0),Div(Add(Div(Add($usd_volume,$close),$num_market_pairs),$close),Constant(2.0))),Mul(Var($open,30),$trade_num)),30)
Add(Abs(Add(Log($volume),$volume)),Mean(Add($usd_price,$quote_volume),30))
WMA($close,20)
Sub($volume,Sub(Var(Less(Greater($trade_num,Ref($usd_volume,30)),$close),30),Mul($open,Constant(5.0))))
Div(Med(Div($usd_volume,Constant(-2.0)),20),Add(Constant(-0.01),$open))
Div(Constant(10.0),$usd_volume)
$open
WMA($high,30)
Mul(Constant(-2.0),Less($num_market_pairs,$close))
$circulating_supply
Add(Constant(0.5),Add(WMA($open,10),$usd_volume))
$open
$open
Add(Add($open,$close),Constant(1.0))
Var($total_mcap,40)
$circulating_supply
Abs($close)
$usd_price
Add(Mul(Add(Constant(1.0),$open),$usd_price),Constant(2.0))
Div(Add($usd_volume,Constant(2.0)),Constant(-5.0))
Greater(Add($quote_volume,Add($taker_buy_quote_asset_volume,Div(Log($circulating_supply),Constant(0.01)))),Add(Add(Abs($taker_buy_base_asset_volume),$low),Sub(Med($low,30),$circulating_mcap)))
Mul(Sub(Mul(Constant(-0.01),Sub($usd_price_pct,Constant(30.0))),Constant(30.0)),Add(Constant(-1.0),Div($usd_price,Constant(2.0))))
Add(Div(Constant(2.0),$circulating_supply),Constant(-10.0))
Mul(Constant(-0.5),Div(Abs(Sub($total_mcap,Sub(Constant(10.0),Mean(Div($num_market_pairs,Div(Constant(1.0),Abs($low))),40)))),Div($low,Constant(-1.0))))
Add(Less(Constant(-0.01),Mul(Less(Div($close,Constant(-10.0)),Div(Sub(Std(Med($usd_price_pct,40),30),$turnover_rate),$volume)),Constant(-0.5))),$num_market_pairs)
Log($high)
Div(Add(Constant(-5.0),Mean($usd_price,40)),Sub($high,Sub(Mad($pct_diff_abs,20),Constant(-0.5))))
$high
Max(Sub($pct_diff_abs,Div(Log(Add($usd_price,$usd_price)),$open)),30)
Add(Constant(2.0),$circulating_supply)
$close
Mad(Add(Greater($volume,Constant(-2.0)),$usd_price_pct),20)
EMA(Div(Mean(Add(Constant(-2.0),Max(Add($taker_buy_quote_asset_volume,Add(Abs($num_market_pairs),$circulating_supply)),50)),30),Constant(-0.5)),10)
Std(Div($low,Constant(-5.0)),20)
Sub(Constant(-1.0),$pct_diff_abs)
Sub(Div($low,Add(Div($usd_price_pct,Constant(-0.01)),Abs(Log($usd_price)))),$usd_volume)
Add($circulating_supply,Constant(-10.0))
$open
$num_market_pairs
$quote_volume
Sub($taker_buy_quote_asset_volume,Constant(0.01))
Mean(Div($open,Constant(-10.0)),40)
Mean(Div(Constant(10.0),Std(Mul(Less($low,Constant(2.0)),$high),30)),30)
Sub(Abs($pct_diff_abs),Ref($usd_price,10))
Greater(Add(Mean(Mul(Add(Var(Sub(Constant(2.0),Med(Max($num_market_pairs,10),50)),40),Constant(-10.0)),Constant(-30.0)),10),Constant(-1.0)),$trade_num)
$quote_volume
Add(Constant(1.0),$circulating_supply)
Abs(Std(Std(Sub(Less(Constant(10.0),Greater(Div($trade_num,$turnover_rate),$pct_diff_abs)),$high),30),50))
Mul(Div($open,$circulating_mcap),Sub($usd_price,Constant(-10.0)))
Sub(Constant(-2.0),$low)
Log($volume)
Sub(Constant(0.5),Mul(Add($trade_num,Constant(-2.0)),$usd_price_pct))
Add(Constant(-1.0),$open)
Sub(Less($volume,$turnover_rate),Log(Div(Constant(2.0),Add(Med($high,30),Add(Constant(10.0),$quote_volume)))))
Cov(Log(Add(Less(Sub($close,$open),Constant(-1.0)),Mean(Add($trade_num,Add($taker_buy_quote_asset_volume,Constant(-2.0))),50))),Mean($open,20),40)
Sub(Less(Max($high,30),Div(Constant(30.0),Mul(Std(Div($volume,$taker_buy_quote_asset_volume),20),Constant(30.0)))),Constant(-30.0))
WMA(Add(Constant(-2.0),$taker_buy_base_asset_volume),10)
Div(Mean(Sub($usd_price,$close),50),Add($usd_volume,$turnover_rate))
$volume
Mean(Mul(Div(Div(Constant(-10.0),$num_market_pairs),$taker_buy_base_asset_volume),Sum(Mul(Abs(Abs($usd_price_pct)),Sub(Div($high,$taker_buy_quote_asset_volume),$total_mcap)),50)),30)
$open
Mean(Mean($usd_price,30),40)
Sub(WMA(Greater(Var(Sub(Less(Constant(10.0),$volume),$quote_volume),50),$usd_volume),10),Less(Constant(2.0),Delta($volume,30)))
Ref(Div(Constant(1.0),Log($turnover_rate)),50)
Sub(Greater(Constant(0.01),Log($usd_price_pct)),$pct_diff_abs)
Abs($taker_buy_quote_asset_volume)
Sub(Ref($total_mcap,50),$usd_volume)
$usd_volume
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/crypto/new_all_200_5_20240120000808/24576_steps
----------------------------------------
| pool/                   |            |
|    best_ic_ret          | 0.289      |
|    eval_cnt             | 154        |
|    significant          | 108        |
|    size                 | 154        |
| rollout/                |            |
|    ep_len_mean          | 11.8       |
|    ep_rew_mean          | -0.271     |
| test/                   |            |
|    ic                   | 0.286      |
|    rank_ic              | 0.237      |
| time/                   |            |
|    fps                  | 26         |
|    iterations           | 12         |
|    time_elapsed         | 932        |
|    total_timesteps      | 24576      |
| train/                  |            |
|    approx_kl            | 0.01523071 |
|    clip_fraction        | 0.243      |
|    clip_range           | 0.2        |
|    entropy_loss         | -3.23      |
|    explained_variance   | 4.77e-07   |
|    learning_rate        | 0.001      |
|    loss                 | -0.277     |
|    n_updates            | 110        |
|    policy_gradient_loss | -0.0347    |
|    value_loss           | 0.159      |
----------------------------------------
Div($usd_price,Mean(Add($circulating_mcap,Constant(2.0)),10))
$volume
$circulating_mcap
Div(Constant(-5.0),$total_mcap)
Mad(Std($volume,30),10)
Add(Add(Constant(10.0),$circulating_mcap),$trade_num)
Cov($num_market_pairs,Sub($close,Constant(0.5)),20)
Abs(Add(Sub(Constant(30.0),$open),Sum(Std(WMA(Add($usd_volume,Med($usd_price,10)),10),30),50)))
Div(Constant(-10.0),Div(Sub($volume,$trade_num),Div(Constant(-10.0),Add(Sub(Mad($pct_diff_abs,30),Mul(Delta($quote_volume,50),Constant(-2.0))),Constant(-0.01)))))
Sub(Constant(-10.0),Add(Med($circulating_mcap,50),$usd_volume))
Sub(Constant(2.0),$volume)
Div($taker_buy_quote_asset_volume,$open)
$num_market_pairs
Div(Constant(-2.0),Mad($pct_diff_abs,40))
Add(Constant(-1.0),Log($usd_volume))
$open
$usd_price_pct
Mean(Mul(Constant(-10.0),Cov($usd_price_pct,Log($volume),50)),30)
$taker_buy_base_asset_volume
Add(Constant(30.0),Mean(Mad(Abs(Add($usd_price,Log(Delta($usd_volume,30)))),50),50))
Mul($quote_volume,$turnover_rate)
Mul($usd_price,$usd_volume)
Var($low,40)
Sub(Mean($close,30),$quote_volume)
Mul($circulating_supply,$volume)
$circulating_mcap
$quote_volume
Mul($taker_buy_quote_asset_volume,Add($volume,Constant(0.01)))
$open
Less(Div(Constant(-30.0),$taker_buy_quote_asset_volume),Add(Mad($usd_price_pct,10),Add(Constant(2.0),$quote_volume)))
Ref(Mul($close,Constant(10.0)),40)
$usd_price_pct
Greater(Std(Mad(Div(Constant(30.0),$taker_buy_quote_asset_volume),50),30),$trade_num)
Var($low,20)
$circulating_mcap
Add(Add(WMA(Var(Add(Constant(-1.0),Add(Std(Mean($high,20),30),Div(Constant(-10.0),$volume))),10),50),$usd_price_pct),$taker_buy_quote_asset_volume)
Add(Constant(-2.0),Mean(Var(Div(Add($close,Med(Var($num_market_pairs,20),50)),Less(Add($usd_volume,Constant(0.5)),Constant(-10.0))),50),30))
$taker_buy_base_asset_volume
Sub(Constant(-2.0),Cov($volume,Mean($usd_price_pct,20),20))
Sub($usd_volume,Constant(1.0))
Add(Abs(Sub(Div($high,$circulating_supply),Div($total_mcap,$trade_num))),Constant(1.0))
Mul($total_mcap,Constant(-0.5))
$volume
Add($taker_buy_quote_asset_volume,Constant(1.0))
Sub(Greater(Mul(Constant(10.0),$quote_volume),Constant(30.0)),$usd_price_pct)
Add(Std($trade_num,30),Constant(5.0))
Mul(Constant(-2.0),$quote_volume)
Sub($usd_volume,Constant(5.0))
Add(Div($total_mcap,Constant(-0.01)),EMA(Add(Div(Mad(Log($trade_num),10),$taker_buy_base_asset_volume),Constant(2.0)),30))
Less(EMA(Sub(Div(Mul(WMA($usd_price,50),$usd_volume),Add(Sub(Max($low,10),Constant(-10.0)),$volume)),$taker_buy_quote_asset_volume),10),$usd_volume)
Delta($pct_diff_abs,30)
Sub(Mul(Constant(-2.0),$pct_diff_abs),Add($open,Constant(-5.0)))
$circulating_mcap
Ref(Delta(Div(Constant(30.0),$close),50),50)
Add(Sub($circulating_supply,Add($quote_volume,Add(Mul($usd_price,$close),$usd_volume))),Less(Add(Div(Div($low,Constant(0.01)),Constant(-2.0)),$taker_buy_quote_asset_volume),Constant(-30.0)))
Mul($turnover_rate,Div(Div(Constant(30.0),$circulating_supply),Med(WMA(Mad(Add(Constant(30.0),$pct_diff_abs),50),30),10)))
Var($quote_volume,50)
Add(WMA($open,40),Add(Mean(Abs(Sub(Mean($usd_price_pct,50),$high)),50),Constant(-10.0)))
$total_mcap
Add(Add(Constant(-2.0),Add(Delta($high,30),Constant(10.0))),Less($taker_buy_quote_asset_volume,Constant(5.0)))
Div(Add(Div(Less(Sub(Less(Constant(-5.0),Min($close,50)),$volume),Constant(-2.0)),$low),Constant(10.0)),Constant(-2.0))
$trade_num
Min($circulating_mcap,50)
Sub($turnover_rate,$circulating_mcap)
$usd_price
Sub(Add($usd_price_pct,$close),$quote_volume)
Corr(Greater($close,Sub(Abs(Add(Constant(2.0),$circulating_mcap)),$trade_num)),$trade_num,10)
Mul(WMA(Div($open,Log(Div(Constant(-2.0),$taker_buy_quote_asset_volume))),20),Constant(-2.0))
$circulating_mcap
Mean(Mad($trade_num,10),50)
$turnover_rate
Log(Div($low,Delta($taker_buy_quote_asset_volume,50)))
Div(Max(Mul(Mul($quote_volume,Greater($turnover_rate,Add(Add($close,Div(Div(Constant(-5.0),$quote_volume),$total_mcap)),$open))),$total_mcap),40),Constant(-0.5))
Mean($usd_price,10)
$usd_price
$usd_volume
Div($num_market_pairs,Mean(Div($turnover_rate,Constant(-0.5)),20))
WMA($trade_num,30)
$total_mcap
$total_mcap
Delta(Mul(Constant(-1.0),$volume),50)
$circulating_supply
Div($low,Add(Cov(Abs($open),Sub(Constant(1.0),$circulating_supply),10),Delta(Mean(Mean(Sub($num_market_pairs,$high),20),40),30)))
Sub(Log(Div(Constant(-2.0),$total_mcap)),Constant(-10.0))
$volume
Log(Med(Sub(Constant(2.0),WMA(Less(WMA($volume,50),$turnover_rate),50)),30))
$pct_diff_abs
$usd_price_pct
$num_market_pairs
WMA($circulating_supply,30)
Max(Div($low,$circulating_mcap),50)
Mul(Constant(-1.0),$total_mcap)
Mul(Constant(10.0),Div($num_market_pairs,Div(Constant(-0.01),Add($total_mcap,Constant(0.01)))))
Mul(Constant(1.0),$quote_volume)
$num_market_pairs
Add($trade_num,Less(Add(Var(Mul($taker_buy_quote_asset_volume,Constant(0.01)),20),Mean($quote_volume,20)),Sum(Mul(Add(Constant(-10.0),$quote_volume),$volume),40)))
Add(Less(Constant(-1.0),$usd_volume),$close)
Div(Sub(Mean(Less(Div($num_market_pairs,$taker_buy_quote_asset_volume),$usd_price_pct),10),Add(Mad($low,20),$low)),Constant(-0.5))
Div(Less(WMA($open,50),Constant(5.0)),$high)
Div($taker_buy_quote_asset_volume,Constant(1.0))
Std(Mean(Mul(Constant(-0.5),Delta(Sum($high,10),30)),40),30)
Div(Constant(-10.0),$quote_volume)
$volume
Div(Div(Div(Add(Constant(2.0),$circulating_supply),$taker_buy_base_asset_volume),Constant(-2.0)),Constant(30.0))
$usd_volume
Div(Less(Constant(-0.5),WMA($volume,40)),Sub(Add($circulating_supply,Less(Sub($quote_volume,Constant(30.0)),Delta(Sub(Constant(0.01),$total_mcap),30))),Constant(2.0)))
Div(Add(Constant(-30.0),$usd_volume),Constant(2.0))
Add(Add(Constant(-0.01),$circulating_mcap),$turnover_rate)
Div(Less($usd_price,Constant(30.0)),$trade_num)
Std(Delta(Abs(Abs(Std($high,20))),50),30)
Div(Constant(-2.0),$low)
Add(EMA(Div(Constant(30.0),Mul($usd_price,$total_mcap)),50),$pct_diff_abs)
Add($close,$total_mcap)
Abs($pct_diff_abs)
Abs(Max($quote_volume,10))
Less(Delta(Div($open,Sum($taker_buy_quote_asset_volume,30)),50),$volume)
Add(Constant(10.0),$pct_diff_abs)
WMA(WMA(Add(Log($usd_volume),Constant(10.0)),50),20)
Std($low,20)
Log(Mul(Sub(Min(Div(Add(Constant(-0.01),$taker_buy_base_asset_volume),Constant(-10.0)),20),$turnover_rate),$open))
Log(Div(WMA(Abs(Log(Add(Constant(-2.0),$low))),30),$usd_price_pct))
$low
Sub($pct_diff_abs,Log(Sub($open,Constant(1.0))))
$circulating_supply
$trade_num
Less(Div(Add(Add($low,Mul($usd_price,Constant(-2.0))),Min(Log($circulating_supply),30)),Constant(-2.0)),Sub(Var($total_mcap,30),Log($total_mcap)))
Sub(Add(Less(Std(Div(Constant(-1.0),$usd_price),30),Constant(30.0)),$num_market_pairs),Div(Constant(0.01),Div($total_mcap,$quote_volume)))
Div(Constant(-10.0),$taker_buy_quote_asset_volume)
Add(Sub(Constant(-1.0),Med($usd_price_pct,50)),Sub(Constant(-0.01),Abs(Div(Abs($trade_num),Div($close,Div(Constant(2.0),Var($high,30)))))))
Div(Add(Abs($turnover_rate),$total_mcap),Sum(Less($usd_price_pct,Sub(Greater(Constant(2.0),$total_mcap),$usd_price_pct)),30))
$usd_price
Max(Sub(Add($circulating_mcap,$low),Div(Constant(0.01),Sub(Add($usd_price,$taker_buy_quote_asset_volume),Constant(2.0)))),30)
$turnover_rate
Abs(Mul($open,Delta(Div($close,Add(Constant(1.0),Mean($usd_price,50))),40)))
$usd_price_pct
$taker_buy_quote_asset_volume
Div(Constant(-1.0),Add(Less(Mul(Less(Greater($close,Constant(30.0)),$volume),$volume),Sub(Constant(-10.0),Mad($taker_buy_quote_asset_volume,10))),Std($circulating_mcap,40)))
$pct_diff_abs
Log(Sum(Var($close,10),50))
WMA($total_mcap,50)
Add(Constant(-5.0),WMA(Sub(Abs(Sub($total_mcap,Add(Constant(0.01),Abs(Sub($trade_num,Constant(2.0)))))),$low),10))
Corr(Sub(Constant(-30.0),$usd_price),$open,10)
$usd_price
Sub(Mad(Greater(WMA($trade_num,20),$circulating_supply),30),$low)
Sub(Sub(Constant(10.0),Add(Sub($close,Med($pct_diff_abs,30)),Add(Add(Constant(-0.01),$close),Constant(0.5)))),Mul($volume,Ref($open,20)))
Max(Mul(Sub(Constant(5.0),Sub(Mean($taker_buy_quote_asset_volume,50),$low)),Constant(10.0)),40)
Var(Mul(Add(WMA(Sub(Mul(Add(Constant(2.0),$high),Constant(-5.0)),Constant(5.0)),40),Constant(-0.01)),Div(Add($volume,$usd_price),$high)),30)
Sub(Constant(-2.0),$total_mcap)
$usd_volume
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/crypto/new_all_200_5_20240120000808/26624_steps
-----------------------------------------
| pool/                   |             |
|    best_ic_ret          | 0.313       |
|    eval_cnt             | 227         |
|    significant          | 152         |
|    size                 | 200         |
| rollout/                |             |
|    ep_len_mean          | 10.3        |
|    ep_rew_mean          | -0.108      |
| test/                   |             |
|    ic                   | 0.0959      |
|    rank_ic              | 0.173       |
| time/                   |             |
|    fps                  | 19          |
|    iterations           | 13          |
|    time_elapsed         | 1354        |
|    total_timesteps      | 26624       |
| train/                  |             |
|    approx_kl            | 0.013277775 |
|    clip_fraction        | 0.215       |
|    clip_range           | 0.2         |
|    entropy_loss         | -3.15       |
|    explained_variance   | 1.55e-06    |
|    learning_rate        | 0.001       |
|    loss                 | -0.265      |
|    n_updates            | 120         |
|    policy_gradient_loss | -0.0328     |
|    value_loss           | 0.193       |
-----------------------------------------
$circulating_supply
$total_mcap
Sub(Constant(-0.01),Add(WMA(Less($quote_volume,$num_market_pairs),30),Log(Div($quote_volume,Mul(Div(Constant(-10.0),$close),Sum($total_mcap,30))))))
Delta(Log(Add($close,Constant(5.0))),30)
Add(Abs(Max(Div(Constant(30.0),$high),10)),Constant(-1.0))
Div(Delta(Div($circulating_mcap,$open),10),$usd_price_pct)
$pct_diff_abs
Div($num_market_pairs,Sub($close,$circulating_mcap))
$close
Add($circulating_supply,$total_mcap)
$taker_buy_quote_asset_volume
$trade_num
$close
Div(Constant(-2.0),$circulating_mcap)
Add(Less(Greater(Constant(1.0),Std($circulating_mcap,20)),$circulating_mcap),Mul(Mean(WMA(Less(Mad($circulating_supply,10),$total_mcap),40),50),$open))
$close
Add(Sub(Less(Constant(1.0),$pct_diff_abs),$taker_buy_quote_asset_volume),Constant(5.0))
$usd_price
$turnover_rate
Log($circulating_mcap)
$trade_num
Sum(Med($quote_volume,30),40)
Mul(Constant(-0.01),Div($circulating_mcap,$trade_num))
$trade_num
Add(Sum($taker_buy_quote_asset_volume,10),Constant(10.0))
Mul(Constant(30.0),$volume)
Mul(Greater(Div($usd_price,$circulating_supply),Constant(5.0)),$usd_volume)
Add($open,$low)
Abs(Div(Delta(Abs(Greater(Less(Add($circulating_mcap,Less(Constant(30.0),Std($quote_volume,20))),Sum($usd_price_pct,20)),$high)),20),$total_mcap))
Ref(Add($usd_price,Constant(-2.0)),10)
$num_market_pairs
Log($circulating_mcap)
Greater(Min($usd_price,10),Add($total_mcap,Add($taker_buy_quote_asset_volume,Constant(-10.0))))
Mad($volume,20)
$usd_volume
Add(Log(Sub(Sub($quote_volume,Constant(1.0)),Constant(2.0))),$usd_price)
$high
Ref(Sub(Constant(-30.0),WMA(WMA($taker_buy_quote_asset_volume,10),50)),20)
Min(Add(Constant(10.0),Mean($circulating_mcap,20)),10)
$low
$circulating_mcap
Add(Less(Constant(-10.0),Div($low,$quote_volume)),Mul(Mul($circulating_mcap,Constant(-10.0)),Constant(1.0)))
Add(Constant(-10.0),$quote_volume)
Div(Constant(-5.0),$circulating_supply)
Mad(Med(Add(Constant(2.0),$usd_volume),50),20)
$num_market_pairs
Mul($open,$high)
Mad(Mean(Std($usd_price,50),20),50)
$usd_price_pct
Add(Greater(Add(Constant(2.0),$circulating_mcap),Add($num_market_pairs,$quote_volume)),Constant(30.0))
$usd_price_pct
Mul(Mean(Greater($trade_num,Sub(Mean($circulating_mcap,30),Constant(-0.01))),20),Min(Mean(Delta(Sub($low,Constant(0.01)),40),10),50))
Sub(Constant(-2.0),$circulating_supply)
WMA(Var(Sub(Greater($taker_buy_quote_asset_volume,Constant(-10.0)),$usd_volume),40),10)
Add(Constant(1.0),Add(Add(Std($close,10),Sub($low,Constant(0.01))),Mul($num_market_pairs,Add(Mul($turnover_rate,Sum($taker_buy_base_asset_volume,30)),Constant(-0.01)))))
Add(Constant(2.0),Log(Log(Add($turnover_rate,$total_mcap))))
Std(WMA(Div(Constant(-10.0),$quote_volume),50),30)
Max($usd_volume,50)
$circulating_supply
Sub(Mean($circulating_mcap,10),Div(Constant(0.01),$volume))
$pct_diff_abs
Div(Greater(Min($close,30),Abs($low)),Log(Add(Log($open),Constant(-5.0))))
Div($usd_price,Add(Constant(-2.0),Add($usd_volume,Constant(-0.5))))
$pct_diff_abs
Div($volume,Add(Mul($usd_price,Constant(-2.0)),$num_market_pairs))
$circulating_supply
WMA(Log($total_mcap),20)
Add($low,Mean(Div(Constant(10.0),Div(Less(Div(Add($usd_price,$low),WMA($open,30)),Sub(Constant(-30.0),$num_market_pairs)),$volume)),30))
$low
Add($turnover_rate,$high)
Add(Div(Div(Add($close,$usd_volume),Constant(0.5)),$num_market_pairs),Mul($usd_price_pct,Add(Div($usd_price,$circulating_supply),$usd_price)))
$volume
WMA(Mul(Constant(-5.0),Add($taker_buy_quote_asset_volume,$total_mcap)),20)
$close
$usd_volume
Var(Add(Constant(30.0),$total_mcap),20)
$low
$turnover_rate
Mean(Div(Mul(Constant(2.0),Add($quote_volume,Constant(10.0))),$circulating_mcap),10)
Add(Mul($taker_buy_base_asset_volume,$usd_price),Constant(-0.01))
$close
$taker_buy_quote_asset_volume
Std(Med($taker_buy_quote_asset_volume,20),10)
$usd_volume
Mul($usd_volume,Delta($circulating_mcap,50))
$num_market_pairs
Mad(Mul(Less(Sub(Less(Constant(10.0),Log($num_market_pairs)),Sub(Mad($circulating_mcap,30),$taker_buy_base_asset_volume)),$usd_price),$close),30)
Add(Less(Greater(Div($high,Add(Div(Sum($usd_price_pct,50),$pct_diff_abs),Constant(2.0))),$circulating_supply),$taker_buy_quote_asset_volume),Constant(2.0))
$taker_buy_quote_asset_volume
Abs(Div(Constant(5.0),Less(Less(Div($circulating_mcap,Constant(0.5)),Mean($volume,30)),Mad(Mean($usd_price_pct,20),40))))
Greater(Ref(Add(Constant(-2.0),$close),40),Div(Add(Div($pct_diff_abs,$trade_num),Constant(10.0)),Less(Constant(-10.0),Sub(Less($circulating_mcap,Constant(30.0)),$circulating_mcap))))
$volume
Med(Var(Sum(Sub(Delta(Abs($total_mcap),50),Constant(-0.01)),30),50),30)
$total_mcap
Sub(Mad($total_mcap,20),Mul(Log($open),Greater(Abs($quote_volume),Abs(Add($num_market_pairs,$usd_price)))))
Add(Less(Constant(0.01),$quote_volume),Abs($turnover_rate))
Add(Add(Constant(1.0),Add($usd_price_pct,$volume)),Constant(-2.0))
Div($close,Less(Mul($taker_buy_quote_asset_volume,Div($low,Add($usd_price_pct,$circulating_supply))),Constant(-2.0)))
Greater($num_market_pairs,Add(Constant(2.0),$low))
Std(Div($total_mcap,Constant(-0.5)),30)
Mul(Div(Constant(-2.0),Add($total_mcap,Sub($taker_buy_quote_asset_volume,Constant(-2.0)))),$num_market_pairs)
Div(Constant(-0.5),Abs($taker_buy_quote_asset_volume))
$open
$trade_num
$circulating_mcap
Div(Constant(2.0),Mean(Mean($num_market_pairs,50),20))
Div(Std(Div(Constant(-30.0),$high),50),Constant(-2.0))
$usd_volume
$num_market_pairs
Delta($open,30)
Abs($turnover_rate)
$num_market_pairs
Abs(Sub(Sub(Med(Mul(Div(Constant(30.0),$open),$volume),30),$usd_price),$high))
Add(Constant(0.01),Ref(Ref($high,20),20))
$usd_price_pct
Abs(Sub(Add($trade_num,Less($quote_volume,$usd_price_pct)),$taker_buy_base_asset_volume))
Add(Constant(-30.0),Div($low,Add($high,$taker_buy_base_asset_volume)))
$num_market_pairs
Mul(Abs($usd_volume),Less(Constant(-1.0),Add(Div($taker_buy_quote_asset_volume,Constant(0.01)),Constant(30.0))))
Log(WMA($volume,20))
$total_mcap
$usd_volume
$pct_diff_abs
Add(Less(Div($pct_diff_abs,Add($close,Add($trade_num,Constant(30.0)))),$open),Constant(-0.5))
EMA(Mean(Div(Mul(Constant(-2.0),Var($usd_price,10)),Add(Add(Less($turnover_rate,$open),$pct_diff_abs),$trade_num)),20),10)
$open
$quote_volume
Mul(Sub(Constant(0.01),Add($quote_volume,Constant(-5.0))),Greater(Constant(30.0),$low))
Var(Var(Add(Constant(1.0),$high),10),40)
Add(Constant(-0.5),$quote_volume)
Std(Add($total_mcap,Abs($total_mcap)),20)
Sub(Sub($usd_price_pct,Constant(-0.5)),Add(Add(Constant(-1.0),$open),Add($close,$circulating_mcap)))
Log(Add(Add(Add($low,$close),Constant(2.0)),Constant(-2.0)))
Abs($volume)
Add(Var(Add(Mean($high,50),Div(Mad($low,20),$total_mcap)),30),Ref($usd_price,10))
Delta(Div($high,$pct_diff_abs),30)
$usd_price_pct
Var(Mul(Add(Constant(-2.0),$low),Div(Mean(Add(Div(Constant(0.5),Std($quote_volume,50)),$num_market_pairs),30),$turnover_rate)),10)
Mul(Constant(30.0),Var(Add(Div(Div($total_mcap,Constant(-10.0)),Less(Greater($turnover_rate,WMA($high,30)),$pct_diff_abs)),Less($quote_volume,$taker_buy_base_asset_volume)),30))
$taker_buy_base_asset_volume
Sub(Div(Constant(-30.0),Add(Mul(Less($num_market_pairs,Constant(0.01)),Mean(Min($total_mcap,20),20)),Constant(10.0))),Log($trade_num))
Div(Less($pct_diff_abs,Constant(5.0)),$pct_diff_abs)
$usd_price
Add($low,$high)
Div(Sub(Log($open),Sub(Constant(30.0),Mul($total_mcap,$high))),$trade_num)
Div(Sub($usd_price_pct,Sub($close,Div(Constant(0.01),$quote_volume))),$circulating_supply)
WMA($open,50)
Sub($usd_price,Constant(0.5))
Add(Mul(Greater(Div(Sub(Sub(Constant(10.0),Mean($taker_buy_quote_asset_volume,20)),$low),Constant(-30.0)),Constant(30.0)),Mul($low,Constant(-0.5))),Div(Constant(2.0),$taker_buy_base_asset_volume))
Mul(Constant(-0.5),$close)
Div(Constant(-10.0),$circulating_mcap)
Sub(Constant(-30.0),Std($usd_price,50))
WMA(Mean($open,30),40)
Med(Sub(Constant(-0.01),Sum(Add($close,Constant(-10.0)),50)),40)
$open
Add(Sub(Constant(2.0),$usd_price_pct),Less(Add($usd_price_pct,Constant(0.5)),Constant(2.0)))
Corr(Add(Constant(2.0),Med($usd_volume,50)),EMA(EMA(Mad($open,30),30),10),40)
$high
Log($close)
Mul(Constant(-5.0),Less($trade_num,$open))
$low
Sub(Mul(Add($usd_price,$usd_volume),Sub($total_mcap,Constant(1.0))),$trade_num)
Greater(Sub(Constant(-10.0),Add(Div($taker_buy_base_asset_volume,$usd_volume),$low)),Abs($pct_diff_abs))
Div(Less($circulating_supply,$usd_volume),Div($high,Std($taker_buy_quote_asset_volume,50)))
Mul(Constant(-10.0),Div($taker_buy_base_asset_volume,$volume))
$close
Log(Abs(Abs(Add(Add(Std($taker_buy_quote_asset_volume,50),Add(Add(Mul($open,$circulating_mcap),$quote_volume),$volume)),Constant(2.0)))))
Log($circulating_mcap)
Add(Div(Constant(-0.5),Add(Add($taker_buy_quote_asset_volume,$open),Less(Abs(Add($usd_price_pct,$low)),Constant(0.01)))),Mad(Log(Mul($total_mcap,$open)),20))
Add(Constant(-10.0),$low)
Div(Cov(Add(Sub($turnover_rate,Constant(2.0)),$usd_price_pct),Mean($pct_diff_abs,40),30),$turnover_rate)
Div(Add(Constant(2.0),$num_market_pairs),Add(Mul(Mul($total_mcap,Constant(2.0)),$usd_price),Add(Add($turnover_rate,Constant(1.0)),Sum(Div(Constant(10.0),$open),30))))
Sum(Div(Div(Constant(-0.01),$circulating_mcap),Mean($usd_price,30)),50)
Div(Sub(Constant(10.0),Greater($volume,$total_mcap)),Mul(Delta(Mad($total_mcap,30),10),Div(Constant(0.5),$num_market_pairs)))
Add(Constant(-2.0),$circulating_supply)
$low
Add($circulating_mcap,Constant(1.0))
$quote_volume
$circulating_mcap
$total_mcap
Sub(Min($total_mcap,40),Constant(1.0))
Var(WMA(Add(Sub($circulating_mcap,$quote_volume),Add(Abs($quote_volume),Sub(Sub($circulating_mcap,Constant(-30.0)),Constant(-2.0)))),10),50)
$open
Add($turnover_rate,$usd_price)
Div(Abs($usd_volume),Abs($volume))
$usd_volume
Add(Sub(Constant(-0.01),$usd_volume),$low)
Sub($taker_buy_quote_asset_volume,Constant(-2.0))
$high
Sub(Log(Add($usd_volume,Max(Mul(Constant(5.0),$trade_num),20))),$open)
$taker_buy_quote_asset_volume
$taker_buy_quote_asset_volume
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/crypto/new_all_200_5_20240120000808/28672_steps
--------------------------------------
| pool/                   |          |
|    best_ic_ret          | 0.322    |
|    eval_cnt             | 319      |
|    significant          | 168      |
|    size                 | 200      |
| rollout/                |          |
|    ep_len_mean          | 9.67     |
|    ep_rew_mean          | -0.0651  |
| test/                   |          |
|    ic                   | 0.0939   |
|    rank_ic              | 0.169    |
| time/                   |          |
|    fps                  | 14       |
|    iterations           | 14       |
|    time_elapsed         | 1920     |
|    total_timesteps      | 28672    |
| train/                  |          |
|    approx_kl            | 0.013943 |
|    clip_fraction        | 0.226    |
|    clip_range           | 0.2      |
|    entropy_loss         | -3.05    |
|    explained_variance   | 2.26e-06 |
|    learning_rate        | 0.001    |
|    loss                 | -0.245   |
|    n_updates            | 130      |
|    policy_gradient_loss | -0.0359  |
|    value_loss           | 0.209    |
--------------------------------------
Sub(Med(Div(Div(Add($open,Sub(Std($open,30),Constant(-10.0))),Div($turnover_rate,Constant(-2.0))),$circulating_supply),50),$volume)
Div(Add(Add($taker_buy_quote_asset_volume,$usd_price),$circulating_mcap),$usd_price)
$low
Std(Mul(Div(Constant(-2.0),$total_mcap),Constant(2.0)),30)
Abs(Sub($open,$usd_volume))
Div(Constant(-5.0),$total_mcap)
$volume
$open
Add($close,$high)
$volume
Mul(Greater(Greater(Constant(10.0),Div(WMA(Add($taker_buy_quote_asset_volume,Constant(-0.01)),30),Abs($taker_buy_quote_asset_volume))),$taker_buy_quote_asset_volume),Log($num_market_pairs))
Div(Sum($low,30),Constant(-2.0))
$total_mcap
Sub(Constant(-0.01),$num_market_pairs)
Add(Div($usd_price_pct,Sub(Greater($taker_buy_quote_asset_volume,$num_market_pairs),Sub(Mul($circulating_mcap,$circulating_supply),$circulating_supply))),Constant(5.0))
Min(Max(Div(Constant(-2.0),Mad(Abs($usd_price),30)),30),10)
Div(Less(Constant(1.0),Log(Div(Add($taker_buy_base_asset_volume,$usd_price),$quote_volume))),Mul(Div($circulating_supply,Add($low,$circulating_supply)),Constant(30.0)))
Add(Constant(30.0),$low)
Add($circulating_mcap,$pct_diff_abs)
$taker_buy_quote_asset_volume
Cov(Log($open),Div($close,Sub(Abs($pct_diff_abs),Constant(-10.0))),20)
Sub(Constant(2.0),$pct_diff_abs)
$circulating_mcap
$taker_buy_quote_asset_volume
WMA(Sub($num_market_pairs,Add($circulating_supply,Constant(-2.0))),30)
$total_mcap
Div(Greater(Constant(-2.0),$low),$taker_buy_base_asset_volume)
Add($pct_diff_abs,Constant(-2.0))
Div(Less(Sub($volume,$open),Constant(30.0)),Corr($high,Add(Delta($quote_volume,40),Mul($circulating_supply,Constant(2.0))),20))
Div($high,Abs(Mul($close,$quote_volume)))
$volume
$circulating_supply
$trade_num
Div(Constant(-5.0),$usd_volume)
Div(Constant(10.0),Mul(Add($usd_price_pct,$quote_volume),$total_mcap))
Min(Sum(Log(Add(Less(Constant(5.0),Abs(Sum($taker_buy_quote_asset_volume,40))),Sum(Div(Ref($taker_buy_quote_asset_volume,40),Constant(-10.0)),30))),50),50)
$close
$circulating_mcap
Add(Constant(2.0),$high)
$quote_volume
Abs($num_market_pairs)
Delta(Mad(Less(Mul(Log($open),$pct_diff_abs),$circulating_mcap),40),20)
$usd_price
Abs(Add(Constant(-2.0),$circulating_mcap))
$close
Sub(Constant(-5.0),Div(Mean($close,20),Constant(2.0)))
$taker_buy_quote_asset_volume
$open
Log($turnover_rate)
$num_market_pairs
Sub(Mean(Mad(Sub(Less(Sub(Less(Constant(-30.0),$close),Mean($volume,50)),Constant(-5.0)),Div($volume,Constant(-10.0))),30),10),$volume)
$circulating_mcap
Sub(Div(Greater(Constant(-0.5),$pct_diff_abs),$close),Sub(Constant(-0.01),$num_market_pairs))
Add(Constant(1.0),$usd_volume)
Add(Abs(Add(Add(Constant(5.0),Abs($circulating_mcap)),$turnover_rate)),Constant(2.0))
$taker_buy_quote_asset_volume
Sub(Div(Constant(30.0),$open),$trade_num)
Div(Var(Mul($quote_volume,Add(Constant(1.0),WMA($total_mcap,30))),40),Constant(2.0))
$close
$volume
Add(Mul(Constant(2.0),Abs($volume)),Abs(Greater($usd_price_pct,Sub(Abs($taker_buy_base_asset_volume),Std($low,30)))))
$taker_buy_quote_asset_volume
Sub(Constant(30.0),$low)
$total_mcap
Add(Constant(-2.0),$low)
Abs($close)
Sub(Constant(0.01),Greater(Div($high,Constant(-2.0)),$num_market_pairs))
$circulating_mcap
Max(Div(Add(Mad(Add(Constant(-0.5),$usd_volume),10),Var($taker_buy_quote_asset_volume,40)),Mean(Min($trade_num,30),10)),20)
$turnover_rate
Add($taker_buy_quote_asset_volume,Mean(WMA(Div(Mul($circulating_mcap,Constant(2.0)),Sub(Add($usd_price_pct,Constant(-2.0)),$usd_price_pct)),20),50))
Div(Constant(0.01),Mul(Add($taker_buy_quote_asset_volume,Constant(-2.0)),$volume))
Add($num_market_pairs,Constant(-0.5))
Mul(Div(Add(Less($turnover_rate,Constant(-5.0)),Sum(Sum($trade_num,20),50)),$volume),Div($close,$open))
Add($usd_price_pct,$quote_volume)
Abs($open)
Mul(Constant(30.0),$open)
Mul(Var($taker_buy_quote_asset_volume,50),Div($usd_price_pct,$total_mcap))
Sub(Constant(5.0),$usd_price_pct)
Div(Div(Constant(0.5),Div(Add($quote_volume,Mean($close,40)),$close)),Constant(-0.01))
Abs(Mul(Less(Constant(1.0),$total_mcap),$num_market_pairs))
Sub(Constant(-10.0),$trade_num)
Sum($circulating_mcap,30)
Mul(Constant(1.0),$circulating_mcap)
Mul(Constant(0.5),$pct_diff_abs)
$pct_diff_abs
Less(Add(Constant(-2.0),Sub(Less(Greater(Add($taker_buy_quote_asset_volume,$circulating_supply),Constant(-2.0)),Less($volume,$volume)),Mad($taker_buy_base_asset_volume,50))),$num_market_pairs)
$volume
Div(Constant(-2.0),$circulating_mcap)
WMA($close,20)
Less($quote_volume,Div($usd_price,Constant(30.0)))
$open
$taker_buy_quote_asset_volume
$close
Mul(Max($usd_price,10),$volume)
Add(Constant(1.0),$num_market_pairs)
Mul(Constant(5.0),Sub($low,$total_mcap))
$num_market_pairs
Add(Constant(1.0),$open)
Div(Constant(-2.0),$circulating_mcap)
WMA(WMA($usd_price_pct,30),20)
$pct_diff_abs
$quote_volume
Add(Constant(2.0),$usd_volume)
$quote_volume
$close
Add(Add(Abs(WMA(Std(Abs(Mul(WMA($pct_diff_abs,30),$taker_buy_quote_asset_volume)),10),50)),$usd_price_pct),$low)
Mean($usd_price_pct,30)
Add($usd_price,$low)
Log(Max(Mul(Constant(-0.01),Add(Add(Abs($num_market_pairs),Mad($total_mcap,20)),$pct_diff_abs)),30))
Mul($open,$volume)
$taker_buy_quote_asset_volume
Add(Constant(-2.0),Med($turnover_rate,50))
Log(Delta(WMA($trade_num,40),20))
Sum(Sub(Constant(0.01),$total_mcap),30)
$high
Div(Constant(1.0),$usd_price_pct)
Div(Mul(Less(Constant(-1.0),Mean($taker_buy_quote_asset_volume,30)),Div(Std($total_mcap,20),Constant(-2.0))),Constant(30.0))
$pct_diff_abs
Div(Constant(30.0),$circulating_supply)
$trade_num
$taker_buy_base_asset_volume
Sub(Less($trade_num,Constant(30.0)),$volume)
Add(Mul(Constant(-10.0),Log(Sub(Greater(Std(Div(Std($pct_diff_abs,40),Constant(-1.0)),50),Constant(10.0)),$total_mcap))),$open)
$circulating_mcap
EMA(Less(Abs($pct_diff_abs),$circulating_supply),40)
Abs($circulating_supply)
$circulating_mcap
Add(Constant(-10.0),Div($usd_price,$usd_volume))
$usd_price
Mul(Add($usd_price,Constant(-5.0)),$volume)
Mul(Add(Constant(-5.0),$trade_num),$total_mcap)
Mul(Constant(-1.0),$high)
Add(Less(Constant(30.0),Sub($pct_diff_abs,$total_mcap)),$turnover_rate)
Div($circulating_mcap,Constant(10.0))
Abs(Add($usd_price_pct,Constant(-1.0)))
Add(Constant(2.0),$usd_price)
Add($high,Med(Div(Add(Abs($low),Add(Mul(Constant(1.0),$volume),$usd_price)),$num_market_pairs),30))
Greater($usd_price_pct,$taker_buy_quote_asset_volume)
Std(Div(Sub(Div(Less($trade_num,Constant(-30.0)),Add($volume,Constant(-2.0))),$high),Greater($usd_price,Log(Div(Constant(5.0),$volume)))),40)
Div(Mad(Div(Mean(Mul($trade_num,$num_market_pairs),40),Mean($usd_price,10)),10),Constant(-1.0))
Div(Add(Constant(1.0),Less($open,Add(Delta($taker_buy_quote_asset_volume,10),Sub($open,$trade_num)))),$open)
Abs(Sub(Add(Mean(Min($volume,50),10),$close),$pct_diff_abs))
Sub(Abs(Abs(Sub($open,$total_mcap))),$open)
$num_market_pairs
$circulating_mcap
$taker_buy_quote_asset_volume
Add($trade_num,$circulating_mcap)
Div(Add(Mul(Add($usd_volume,Constant(0.5)),Abs($open)),$circulating_mcap),Constant(-1.0))
Mad(Div(Constant(-0.01),Greater($close,$open)),50)
$usd_price_pct
Mean($open,20)
$open
Mean(Corr(Add(Abs($open),Constant(-2.0)),Var(Greater($open,Log($taker_buy_quote_asset_volume)),50),30),20)
$pct_diff_abs
WMA(Sub($high,$taker_buy_quote_asset_volume),30)
Mul(Constant(-0.5),$total_mcap)
Less(Var(Mul(Less(Less(Constant(10.0),Log($num_market_pairs)),Corr(Med($trade_num,20),$taker_buy_quote_asset_volume,30)),$pct_diff_abs),10),$volume)
$quote_volume
Sub(Mul($low,Div(Constant(0.01),$taker_buy_quote_asset_volume)),Mul(Corr($quote_volume,$volume,50),$pct_diff_abs))
$turnover_rate
Div(Add(Constant(2.0),EMA(Std(Sum($open,50),50),40)),Constant(-5.0))
Mul(Mul($circulating_supply,Less(Constant(1.0),$quote_volume)),$turnover_rate)
Div(Less($open,Sub(Sub($volume,$quote_volume),$pct_diff_abs)),$volume)
Add(Constant(10.0),$circulating_supply)
WMA(Add($usd_price,Constant(0.01)),20)
Add(Greater(Div(Mad($circulating_mcap,40),Less(Constant(-1.0),$usd_price)),Constant(2.0)),$open)
Greater(Mul(Add(Sub(Corr(Mad(WMA($turnover_rate,30),30),Log($usd_price),50),$high),Constant(-2.0)),Constant(10.0)),$circulating_supply)
$high
$trade_num
Add($low,$turnover_rate)
$volume
Sub(Constant(5.0),$usd_price_pct)
$total_mcap
Div(Constant(2.0),$trade_num)
Log(Sub(Constant(1.0),Div($low,Constant(-10.0))))
Sub(Sum($usd_volume,20),$turnover_rate)
Sub(Add(Constant(10.0),$num_market_pairs),Mul($usd_price_pct,$circulating_supply))
$usd_volume
Div(Constant(-0.01),$pct_diff_abs)
$circulating_mcap
Var(Mul(Constant(-30.0),$low),20)
$low
Add(Div(Mul($quote_volume,$usd_price_pct),$quote_volume),Constant(-0.5))
Div($low,Log($circulating_supply))
Abs(Add(Constant(-2.0),$usd_price))
Div(Constant(1.0),$low)
Sub(Less(Constant(-0.01),Std(Mad($taker_buy_quote_asset_volume,50),40)),$pct_diff_abs)
Sub(Sub(Mul(Constant(-1.0),$circulating_supply),$trade_num),Constant(-30.0))
Div(Constant(-2.0),$low)
$circulating_supply
$num_market_pairs
Mean(Add($pct_diff_abs,Abs(Sub($low,$num_market_pairs))),50)
$close
$trade_num
Var(Mul(Constant(5.0),$taker_buy_base_asset_volume),10)
Ref(Min(Add(Add($circulating_supply,Constant(5.0)),Div($circulating_supply,Constant(10.0))),10),30)
Add(Less($low,$volume),$quote_volume)
Mul($low,Div(Std($total_mcap,40),$quote_volume))
$circulating_mcap
$high
Abs($volume)
Corr($quote_volume,$turnover_rate,30)
$trade_num
Add(Constant(2.0),Delta($num_market_pairs,50))
Abs(Div(Constant(-30.0),Abs($quote_volume)))
Min(Mad(Sum(Sub(Constant(5.0),$volume),30),10),40)
$usd_price
$close
$usd_price_pct
$circulating_mcap
Abs($taker_buy_quote_asset_volume)
Std(WMA(Med(Mul(Greater(Less($quote_volume,Constant(2.0)),Log($taker_buy_base_asset_volume)),$usd_volume),50),30),40)
Mul(Constant(30.0),$volume)
$high
$circulating_mcap
WMA($quote_volume,20)
$high
Mean(Div(Constant(2.0),Sub($circulating_mcap,$turnover_rate)),50)
$usd_volume
Add(Constant(0.01),$num_market_pairs)
Corr($quote_volume,$circulating_mcap,30)
Mad(Div(Constant(5.0),$low),40)
Div(Add(Constant(-10.0),$circulating_mcap),Constant(-10.0))
Sub(Abs($open),Constant(2.0))
Mad(Min(Mul(Less(Cov($total_mcap,$low,40),$usd_price_pct),Constant(-30.0)),20),40)
Sub(Abs($trade_num),Constant(-2.0))
Mul(Constant(-2.0),$quote_volume)
Add($pct_diff_abs,Log($taker_buy_base_asset_volume))
Var(Var($taker_buy_quote_asset_volume,50),30)
$taker_buy_quote_asset_volume
$usd_price_pct
$usd_price
$open
Sub(Add($total_mcap,Constant(-2.0)),Constant(1.0))
Sub(Less($volume,Constant(0.5)),$pct_diff_abs)
Div(Constant(2.0),$usd_volume)
Cov(Div($circulating_supply,Constant(-0.5)),$usd_price,50)
$high
Add(Sub(Add(Constant(-0.01),Mul(Std($circulating_mcap,10),$volume)),$quote_volume),$low)
Add(Constant(-10.0),Std(Var(Abs($quote_volume),50),50))
Min(Add(Constant(30.0),Sub(Mul($low,Constant(-0.5)),$close)),30)
Mul($total_mcap,$turnover_rate)
Div(Add(Constant(-0.01),Add($volume,$open)),$low)
Mul(Add(Min(Sub(Constant(-2.0),Log($usd_volume)),40),$usd_volume),Mul(Constant(5.0),Corr($open,WMA($turnover_rate,10),50)))
Med(Var($open,50),50)
Log(Abs(Add(Div($num_market_pairs,$trade_num),Less(Sub($circulating_mcap,Constant(-2.0)),Min($quote_volume,10)))))
$quote_volume
Mean(Std($circulating_mcap,40),10)
Add(Sub(Constant(-2.0),Std(Add(Div($usd_volume,Constant(10.0)),$low),10)),Mean($usd_volume,20))
Div(Log($open),$quote_volume)
Max($circulating_supply,40)
Min($high,20)
Max(Sub($taker_buy_quote_asset_volume,$pct_diff_abs),10)
Var($usd_price,30)
$trade_num
$volume
$circulating_supply
$usd_volume
Div(Constant(30.0),Abs($open))
Sub($close,Constant(-2.0))
Add(Abs(Div($circulating_mcap,Constant(1.0))),Constant(-10.0))
Mul(Constant(-30.0),$pct_diff_abs)
WMA(Add($volume,Constant(30.0)),50)
Div(Constant(-1.0),$taker_buy_quote_asset_volume)
Sub(Constant(-30.0),Max(Min($total_mcap,30),30))
$pct_diff_abs
$taker_buy_quote_asset_volume
Add(Constant(30.0),$volume)
Div(Constant(-2.0),$turnover_rate)
$taker_buy_quote_asset_volume
Sub(Less(Constant(-5.0),$circulating_supply),Log($usd_price))
$total_mcap
$close
Sub(Constant(-0.5),$usd_price_pct)
$low
Abs($num_market_pairs)
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/crypto/new_all_200_5_20240120000808/30720_steps
-----------------------------------------
| pool/                   |             |
|    best_ic_ret          | 0.338       |
|    eval_cnt             | 455         |
|    significant          | 186         |
|    size                 | 200         |
| rollout/                |             |
|    ep_len_mean          | 6.09        |
|    ep_rew_mean          | 0.101       |
| test/                   |             |
|    ic                   | 0.0982      |
|    rank_ic              | 0.145       |
| time/                   |             |
|    fps                  | 11          |
|    iterations           | 15          |
|    time_elapsed         | 2788        |
|    total_timesteps      | 30720       |
| train/                  |             |
|    approx_kl            | 0.014011094 |
|    clip_fraction        | 0.19        |
|    clip_range           | 0.2         |
|    entropy_loss         | -2.95       |
|    explained_variance   | 1.91e-06    |
|    learning_rate        | 0.001       |
|    loss                 | -0.218      |
|    n_updates            | 140         |
|    policy_gradient_loss | -0.0276     |
|    value_loss           | 0.197       |
-----------------------------------------
