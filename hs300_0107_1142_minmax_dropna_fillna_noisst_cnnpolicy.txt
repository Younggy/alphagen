[30490:MainThread](2024-01-07 11:42:59,375) INFO - qlib.Initialization - [config.py:416] - default_conf: client.
[30490:MainThread](2024-01-07 11:42:59,701) INFO - qlib.Initialization - [__init__.py:74] - qlib successfully initialized based on client settings.
[30490:MainThread](2024-01-07 11:42:59,701) INFO - qlib.Initialization - [__init__.py:76] - data_path={'__DEFAULT_FREQ': PosixPath('/Users/yangguangyu/.qlib/qlib_data/cn_data_rolling')}
instruments: hs300
[30490:MainThread](2024-01-07 11:43:03,771) INFO - qlib.timer - [log.py:127] - Time cost: 0.008s | DropnaProcessor Done
/Users/yangguangyu/anaconda3/envs/quant_dev/lib/python3.9/site-packages/qlib/data/dataset/processor.py:244: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df.loc(axis=1)[self.cols] = normalize(df[self.cols].values)
[30490:MainThread](2024-01-07 11:43:03,784) INFO - qlib.timer - [log.py:127] - Time cost: 0.012s | MinMaxNorm Done
raw df:                             $open      $close  ...     $psttm     $turn
datetime   instrument                          ...                     
2014-08-06 SH600000     36.678059   36.342247  ...   1.720402  0.901515
           SH600009     15.457175   15.367242  ...   4.889094  0.833367
           SH600010      4.297257    4.641038  ...   1.049635  3.491852
           SH600011      7.163883    7.211963  ...   0.627584  0.171663
           SH600015     12.955123   13.058764  ...   1.676678  0.649496
...                           ...         ...  ...        ...       ...
2019-02-19 SZ300661    107.945366  107.527779  ...  10.980824  1.395842
           SZ300750     84.660004   82.290001  ...   6.650053  4.338807
           SZ300751    174.140717  175.225296  ...  13.278975  8.478977
           SZ300759     31.355343   31.355343  ...   7.607547  0.926154
           SZ300760    114.797508  115.075615  ...  10.744785  3.528142

[251929 rows x 14 columns]
preprocessed df:                           $open    $close  ...    $psttm     $turn
datetime   instrument                      ...                    
2014-08-06 SH600000    0.028584  0.028242  ...  0.254788  0.011988
           SH600009    0.011396  0.011234  ...  0.255555  0.011081
           SH600010    0.002358  0.002537  ...  0.254625  0.046468
           SH600011    0.004679  0.004622  ...  0.254523  0.002273
           SH600015    0.009370  0.009362  ...  0.254777  0.008634
...                         ...       ...  ...       ...       ...
2019-02-19 SZ300661    0.086306  0.085962  ...  0.257030  0.018568
           SZ300750    0.067446  0.065498  ...  0.255982  0.057741
           SZ300751    0.139920  0.140853  ...  0.257587  0.112850
           SZ300759    0.024273  0.024198  ...  0.256213  0.012316
           SZ300760    0.091856  0.092082  ...  0.256973  0.046951

[239936 rows x 14 columns]
df after stack: instrument            SH600000  SH600009  ...  SZ300759  SZ300760
datetime                                  ...                    
2014-08-06 $open      0.028584  0.011396  ...       NaN       NaN
           $close     0.028242  0.011234  ...       NaN       NaN
           $high      0.028361  0.011246  ...       NaN       NaN
           $low       0.028466  0.011372  ...       NaN       NaN
           $volume    0.006786  0.001526  ...       NaN       NaN
...                        ...       ...  ...       ...       ...
2019-02-19 $pctchg    0.030978  0.039800  ...  0.063966  0.034362
           $pettm     0.033634  0.033663  ...  0.033724  0.033684
           $preclose  0.050838  0.051173  ...  0.022252  0.091778
           $psttm     0.254819  0.257211  ...  0.256213  0.256973
           $turn      0.001218  0.010565  ...  0.012316  0.046951

[15470 rows x 254 columns]
features: ['$open', '$close', '$high', '$low', '$volume', '$vwap', '$amount', '$pbmrq', '$pcfncfttm', '$pctchg', '$pettm', '$preclose', '$psttm', '$turn']
dates: DatetimeIndex(['2014-08-06', '2014-08-07', '2014-08-08', '2014-08-11',
               '2014-08-12', '2014-08-13', '2014-08-14', '2014-08-15',
               '2014-08-18', '2014-08-19',
               ...
               '2019-01-30', '2019-01-31', '2019-02-01', '2019-02-11',
               '2019-02-12', '2019-02-13', '2019-02-14', '2019-02-15',
               '2019-02-18', '2019-02-19'],
              dtype='datetime64[ns]', name='datetime', length=1105, freq=None)
stock ids: Index(['SH600000', 'SH600009', 'SH600010', 'SH600011', 'SH600015', 'SH600016',
       'SH600018', 'SH600019', 'SH600023', 'SH600025',
       ...
       'SZ300450', 'SZ300454', 'SZ300496', 'SZ300498', 'SZ300628', 'SZ300661',
       'SZ300750', 'SZ300751', 'SZ300759', 'SZ300760'],
      dtype='object', name='instrument', length=254)
values: [[[0.02858387 0.01139633 0.00235752 ...        nan        nan        nan]
  [0.02824152 0.01123416 0.00253692 ...        nan        nan        nan]
  [0.02836068 0.01124635 0.002613   ...        nan        nan        nan]
  ...
  [0.02899857 0.0116682  0.00265638 ...        nan        nan        nan]
  [0.25478786 0.25555515 0.25462544 ...        nan        nan        nan]
  [0.01198829 0.01108119 0.04646767 ...        nan        nan        nan]]

 [[0.02834211 0.0113326  0.00292259 ...        nan        nan        nan]
  [0.02769695 0.01112477 0.00291406 ...        nan        nan        nan]
  [0.02821022 0.01121915 0.00289841 ...        nan        nan        nan]
  ...
  [0.02860542 0.01160442 0.00291044 ...        nan        nan        nan]
  [0.25478014 0.25554478 0.2546509  ...        nan        nan        nan]
  [0.01258709 0.01091674 0.1009303  ...        nan        nan        nan]]

 [[0.02776792 0.01120513 0.00288983 ...        nan        nan        nan]
  [0.02763643 0.01116123 0.00277468 ...        nan        nan        nan]
  [0.02766857 0.01114662 0.00283317 ...        nan        nan        nan]
  ...
  [0.02806104 0.01149508 0.00328743 ...        nan        nan        nan]
  [0.25477928 0.25554824 0.25464147 ...        nan        nan        nan]
  [0.01077982 0.00587949 0.06488907 ...        nan        nan        nan]]

 ...

 [[0.05024226 0.05086301 0.00245328 ... 0.13733275 0.01986388 0.09155793]
  [0.04962396 0.04962479 0.00230813 ... 0.13593188 0.01978408 0.08989917]
  [0.05025892 0.05129386 0.00234139 ... 0.14002475 0.01967783 0.09141893]
  ...
  [0.05074279 0.05114395 0.00272762 ... 0.13773136 0.01824404 0.09232505]
  [0.25481293 0.25708112 0.25462472 ... 0.25747544 0.25589365 0.2569123 ]
  [0.00082954 0.00946376 0.00696014 ... 0.0857746  0.00843142 0.02821018]]

 [[0.05009931 0.05033554 0.00243035 ... 0.13554363 0.02196338 0.08992489]
  [0.05048259 0.05081783 0.00239993 ... 0.13835232 0.02188592 0.09143739]
  [0.05035381 0.0510896  0.00238705 ... 0.13902968 0.02176838 0.09149903]
  ...
  [0.04997984 0.04998068 0.00268174 ... 0.13625544 0.02015115 0.09023997]
  [0.2548204  0.25714472 0.25463128 ... 0.2575302  0.25604594 0.25695518]
  [0.00094054 0.01089479 0.01248058 ... 0.07438682 0.00783357 0.03834887]]

 [[0.05057579 0.05111699 0.0024762  ... 0.13991974 0.02427282 0.09185558]
  [0.05029178 0.05206955 0.00239993 ... 0.14085343 0.02419795 0.09208167]
  [0.05078082 0.05301545 0.00245553 ... 0.14616372 0.02406799 0.09514369]
  ...
  [0.05083815 0.05117327 0.00277351 ... 0.13867497 0.0222522  0.09177762]
  [0.2548187  0.2572114  0.25463128 ... 0.2575868  0.25621346 0.25697315]
  [0.00121763 0.01056457 0.0151949  ... 0.11285014 0.01231626 0.04695072]]], (1105, 14, 254)
train data: tensor([[[0.0286, 0.0114, 0.0024,  ...,    nan,    nan,    nan],
         [0.0282, 0.0112, 0.0025,  ...,    nan,    nan,    nan],
         [0.0284, 0.0112, 0.0026,  ...,    nan,    nan,    nan],
         ...,
         [0.0290, 0.0117, 0.0027,  ...,    nan,    nan,    nan],
         [0.2548, 0.2556, 0.2546,  ...,    nan,    nan,    nan],
         [0.0120, 0.0111, 0.0465,  ...,    nan,    nan,    nan]],

        [[0.0283, 0.0113, 0.0029,  ...,    nan,    nan,    nan],
         [0.0277, 0.0111, 0.0029,  ...,    nan,    nan,    nan],
         [0.0282, 0.0112, 0.0029,  ...,    nan,    nan,    nan],
         ...,
         [0.0286, 0.0116, 0.0029,  ...,    nan,    nan,    nan],
         [0.2548, 0.2555, 0.2547,  ...,    nan,    nan,    nan],
         [0.0126, 0.0109, 0.1009,  ...,    nan,    nan,    nan]],

        [[0.0278, 0.0112, 0.0029,  ...,    nan,    nan,    nan],
         [0.0276, 0.0112, 0.0028,  ...,    nan,    nan,    nan],
         [0.0277, 0.0111, 0.0028,  ...,    nan,    nan,    nan],
         ...,
         [0.0281, 0.0115, 0.0033,  ...,    nan,    nan,    nan],
         [0.2548, 0.2555, 0.2546,  ...,    nan,    nan,    nan],
         [0.0108, 0.0059, 0.0649,  ...,    nan,    nan,    nan]],

        ...,

        [[0.0502, 0.0509, 0.0025,  ..., 0.1373, 0.0199, 0.0916],
         [0.0496, 0.0496, 0.0023,  ..., 0.1359, 0.0198, 0.0899],
         [0.0503, 0.0513, 0.0023,  ..., 0.1400, 0.0197, 0.0914],
         ...,
         [0.0507, 0.0511, 0.0027,  ..., 0.1377, 0.0182, 0.0923],
         [0.2548, 0.2571, 0.2546,  ..., 0.2575, 0.2559, 0.2569],
         [0.0008, 0.0095, 0.0070,  ..., 0.0858, 0.0084, 0.0282]],

        [[0.0501, 0.0503, 0.0024,  ..., 0.1355, 0.0220, 0.0899],
         [0.0505, 0.0508, 0.0024,  ..., 0.1384, 0.0219, 0.0914],
         [0.0504, 0.0511, 0.0024,  ..., 0.1390, 0.0218, 0.0915],
         ...,
         [0.0500, 0.0500, 0.0027,  ..., 0.1363, 0.0202, 0.0902],
         [0.2548, 0.2571, 0.2546,  ..., 0.2575, 0.2560, 0.2570],
         [0.0009, 0.0109, 0.0125,  ..., 0.0744, 0.0078, 0.0383]],

        [[0.0506, 0.0511, 0.0025,  ..., 0.1399, 0.0243, 0.0919],
         [0.0503, 0.0521, 0.0024,  ..., 0.1409, 0.0242, 0.0921],
         [0.0508, 0.0530, 0.0025,  ..., 0.1462, 0.0241, 0.0951],
         ...,
         [0.0508, 0.0512, 0.0028,  ..., 0.1387, 0.0223, 0.0918],
         [0.2548, 0.2572, 0.2546,  ..., 0.2576, 0.2562, 0.2570],
         [0.0012, 0.0106, 0.0152,  ..., 0.1129, 0.0123, 0.0470]]]), torch.Size([1105, 14, 254])
instruments: hs300
[30490:MainThread](2024-01-07 11:43:08,294) INFO - qlib.timer - [log.py:127] - Time cost: 0.464s | CSZFillna Done
[30490:MainThread](2024-01-07 11:43:08,299) INFO - qlib.timer - [log.py:127] - Time cost: 0.003s | DropnaProcessor Done
[30490:MainThread](2024-01-07 11:43:08,301) INFO - qlib.timer - [log.py:127] - Time cost: 0.002s | MinMaxNorm Done
raw df:                             $open      $close  ...     $psttm      $turn
datetime   instrument                          ...                      
2018-08-03 SH600000     57.594746   57.830067  ...   1.745467   0.060483
           SH600009     74.151337   71.261703  ...  13.612852   0.662246
           SH600010      4.528701    4.472093  ...   1.285209   0.548638
           SH600011     10.894892   10.532657  ...   0.703142   0.260177
           SH600015     17.312105   17.288551  ...   1.426968   0.077760
...                           ...         ...  ...        ...        ...
2020-02-20 SZ300751    210.300003  221.039993  ...   9.349808   4.972300
           SZ300759     62.450001   61.599998  ...  13.984790   1.604300
           SZ300760    234.800003  234.990005  ...  18.020260   0.970900
           SZ300763     76.010002   81.680000  ...   6.418219  26.974701
           SZ300782    511.200012  551.090027  ...  49.872787   6.694400

[95573 rows x 14 columns]
preprocessed df:                           $open    $close  ...    $psttm     $turn
datetime   instrument                      ...                    
2018-08-03 SH600000    0.045525  0.045665  ...  0.254794  0.000794
           SH600009    0.058935  0.056556  ...  0.257668  0.008803
           SH600010    0.002545  0.002400  ...  0.254682  0.007291
           SH600011    0.007701  0.007314  ...  0.254542  0.003452
           SH600015    0.012899  0.012792  ...  0.254717  0.001023
...                         ...       ...  ...       ...       ...
2020-02-20 SZ300751    0.169206  0.178002  ...  0.256635  0.066174
           SZ300759    0.049457  0.048722  ...  0.257758  0.021343
           SZ300760    0.189050  0.189313  ...  0.258735  0.012912
           SZ300763    0.060440  0.065003  ...  0.255925  0.359042
           SZ300782    0.412916  0.445620  ...  0.266448  0.089096

[95573 rows x 14 columns]
df after stack: instrument            SH600000  SH600009  ...  SZ300763  SZ300782
datetime                                  ...                    
2018-08-03 $open      0.045525  0.058935  ...       NaN       NaN
           $close     0.045665  0.056556  ...       NaN       NaN
           $high      0.046131  0.059122  ...       NaN       NaN
           $low       0.046023  0.057217  ...       NaN       NaN
           $volume    0.000544  0.001141  ...       NaN       NaN
...                        ...       ...  ...       ...       ...
2020-02-20 $pctchg    0.035586  0.039740  ...  0.063976  0.051166
           $pettm     0.033634  0.033666  ...  0.033712  0.033857
           $preclose  0.053772  0.070161  ...  0.059331  0.420628
           $psttm     0.254790  0.257614  ...  0.255925  0.266448
           $turn      0.001724  0.020205  ...  0.359042  0.089096

[5236 rows x 265 columns]
features: ['$open', '$close', '$high', '$low', '$volume', '$vwap', '$amount', '$pbmrq', '$pcfncfttm', '$pctchg', '$pettm', '$preclose', '$psttm', '$turn']
dates: DatetimeIndex(['2018-08-03', '2018-08-06', '2018-08-07', '2018-08-08',
               '2018-08-09', '2018-08-10', '2018-08-13', '2018-08-14',
               '2018-08-15', '2018-08-16',
               ...
               '2020-02-07', '2020-02-10', '2020-02-11', '2020-02-12',
               '2020-02-13', '2020-02-14', '2020-02-17', '2020-02-18',
               '2020-02-19', '2020-02-20'],
              dtype='datetime64[ns]', name='datetime', length=374, freq=None)
stock ids: Index(['SH600000', 'SH600009', 'SH600010', 'SH600011', 'SH600015', 'SH600016',
       'SH600018', 'SH600019', 'SH600023', 'SH600025',
       ...
       'SZ300496', 'SZ300498', 'SZ300628', 'SZ300661', 'SZ300750', 'SZ300751',
       'SZ300759', 'SZ300760', 'SZ300763', 'SZ300782'],
      dtype='object', name='instrument', length=265)
values: [[[0.04552504 0.05893481 0.00254498 ...        nan        nan        nan]
  [0.04566471 0.05655561 0.00239993 ...        nan        nan        nan]
  [0.04613115 0.0591216  0.00250118 ...        nan        nan        nan]
  ...
  [0.04583134 0.0592317  0.00284233 ...        nan        nan        nan]
  [0.2547939  0.25766766 0.25468245 ...        nan        nan        nan]
  [0.00079351 0.00880344 0.00729123 ...        nan        nan        nan]]

 [[0.04638271 0.05506635 0.0024762  ...        nan        nan        nan]
  [0.04604632 0.05197605 0.00239993 ...        nan        nan        nan]
  [0.04636837 0.05516369 0.0024327  ...        nan        nan        nan]
  ...
  [0.04602207 0.0569089  0.00277351 ...        nan        nan        nan]
  [0.25479734 0.2574064  0.25468245 ...        nan        nan        nan]
  [0.00081466 0.01931616 0.00650441 ...        nan        nan        nan]]

 [[0.04623977 0.05094645 0.00252205 ...        nan        nan        nan]
  [0.04700036 0.05300234 0.00251469 ...        nan        nan        nan]
  [0.04679538 0.05282362 0.00252401 ...        nan        nan        nan]
  ...
  [0.04640354 0.05233106 0.00277351 ...        nan        nan        nan]
  [0.25480595 0.25746495 0.25469232 ...        nan        nan        nan]
  [0.00102022 0.01274341 0.00757161 ...        nan        nan        nan]]

 ...

 [[0.0533619  0.06916729 0.00169132 ... 0.19169022 0.05365294 0.38667405]
  [0.05317196 0.06872862 0.00159122 ... 0.19523215 0.05568663 0.4244647 ]
  [0.05347344 0.06947701 0.00160565 ... 0.19628859 0.05538756 0.4228222 ]
  ...
  [0.05411651 0.06965861 0.0019651  ... 0.19477162 0.05086903 0.3865769 ]
  [0.25478348 0.25748986 0.25457588 ... 0.2588705  0.25570682 0.26587647]
  [0.00141668 0.01571245 0.01051991 ... 0.01026302 0.12297596 0.09804755]]

 [[0.05331277 0.06892117 0.00169132 ... 0.19245966 0.06124204 0.41275397]
  [0.05341788 0.06981273 0.00154504 ... 0.18915898 0.05897864 0.4204105 ]
  [0.05376696 0.0698299  0.00158268 ... 0.19393365 0.06104909 0.44154075]
  ...
  [0.05352652 0.06907735 0.0019651  ... 0.19553351 0.05604025 0.4246802 ]
  [0.25478348 0.25748986 0.25457254 ... 0.2588705  0.25570682 0.26587647]
  [0.00117708 0.01403129 0.00908634 ... 0.01678929 0.40008754 0.09299744]]

 [[0.05375494 0.06980719 0.00166825 ... 0.18904984 0.06044021 0.41291597]
  [0.05400809 0.07150789 0.00159122 ... 0.18931304 0.06500318 0.44561955]
  [0.05391372 0.07153556 0.00160565 ... 0.19056255 0.06465407 0.45444453]
  ...
  [0.05377235 0.07016105 0.00191893 ... 0.1894626  0.05933102 0.4206275 ]
  [0.25478983 0.25761378 0.25457588 ... 0.25873494 0.25592545 0.2664482 ]
  [0.00172416 0.02020483 0.01087265 ... 0.01291186 0.35904247 0.08909605]]], (374, 14, 265)
valid data: tensor([[[0.0455, 0.0589, 0.0025,  ...,    nan,    nan,    nan],
         [0.0457, 0.0566, 0.0024,  ...,    nan,    nan,    nan],
         [0.0461, 0.0591, 0.0025,  ...,    nan,    nan,    nan],
         ...,
         [0.0458, 0.0592, 0.0028,  ...,    nan,    nan,    nan],
         [0.2548, 0.2577, 0.2547,  ...,    nan,    nan,    nan],
         [0.0008, 0.0088, 0.0073,  ...,    nan,    nan,    nan]],

        [[0.0464, 0.0551, 0.0025,  ...,    nan,    nan,    nan],
         [0.0460, 0.0520, 0.0024,  ...,    nan,    nan,    nan],
         [0.0464, 0.0552, 0.0024,  ...,    nan,    nan,    nan],
         ...,
         [0.0460, 0.0569, 0.0028,  ...,    nan,    nan,    nan],
         [0.2548, 0.2574, 0.2547,  ...,    nan,    nan,    nan],
         [0.0008, 0.0193, 0.0065,  ...,    nan,    nan,    nan]],

        [[0.0462, 0.0509, 0.0025,  ...,    nan,    nan,    nan],
         [0.0470, 0.0530, 0.0025,  ...,    nan,    nan,    nan],
         [0.0468, 0.0528, 0.0025,  ...,    nan,    nan,    nan],
         ...,
         [0.0464, 0.0523, 0.0028,  ...,    nan,    nan,    nan],
         [0.2548, 0.2575, 0.2547,  ...,    nan,    nan,    nan],
         [0.0010, 0.0127, 0.0076,  ...,    nan,    nan,    nan]],

        ...,

        [[0.0534, 0.0692, 0.0017,  ..., 0.1917, 0.0537, 0.3867],
         [0.0532, 0.0687, 0.0016,  ..., 0.1952, 0.0557, 0.4245],
         [0.0535, 0.0695, 0.0016,  ..., 0.1963, 0.0554, 0.4228],
         ...,
         [0.0541, 0.0697, 0.0020,  ..., 0.1948, 0.0509, 0.3866],
         [0.2548, 0.2575, 0.2546,  ..., 0.2589, 0.2557, 0.2659],
         [0.0014, 0.0157, 0.0105,  ..., 0.0103, 0.1230, 0.0980]],

        [[0.0533, 0.0689, 0.0017,  ..., 0.1925, 0.0612, 0.4128],
         [0.0534, 0.0698, 0.0015,  ..., 0.1892, 0.0590, 0.4204],
         [0.0538, 0.0698, 0.0016,  ..., 0.1939, 0.0610, 0.4415],
         ...,
         [0.0535, 0.0691, 0.0020,  ..., 0.1955, 0.0560, 0.4247],
         [0.2548, 0.2575, 0.2546,  ..., 0.2589, 0.2557, 0.2659],
         [0.0012, 0.0140, 0.0091,  ..., 0.0168, 0.4001, 0.0930]],

        [[0.0538, 0.0698, 0.0017,  ..., 0.1890, 0.0604, 0.4129],
         [0.0540, 0.0715, 0.0016,  ..., 0.1893, 0.0650, 0.4456],
         [0.0539, 0.0715, 0.0016,  ..., 0.1906, 0.0647, 0.4544],
         ...,
         [0.0538, 0.0702, 0.0019,  ..., 0.1895, 0.0593, 0.4206],
         [0.2548, 0.2576, 0.2546,  ..., 0.2587, 0.2559, 0.2664],
         [0.0017, 0.0202, 0.0109,  ..., 0.0129, 0.3590, 0.0891]]]), torch.Size([374, 14, 265])
instruments: hs300
[30490:MainThread](2024-01-07 11:43:13,269) INFO - qlib.timer - [log.py:127] - Time cost: 1.164s | CSZFillna Done
[30490:MainThread](2024-01-07 11:43:13,278) INFO - qlib.timer - [log.py:127] - Time cost: 0.009s | DropnaProcessor Done
[30490:MainThread](2024-01-07 11:43:13,283) INFO - qlib.timer - [log.py:127] - Time cost: 0.005s | MinMaxNorm Done
raw df:                             $open      $close  ...     $psttm   $turn
datetime   instrument                          ...                   
2019-08-06 SH600000     67.331314   67.270660  ...   1.786627  0.1608
           SH600009     93.082047   95.216736  ...  15.513098  1.1181
           SH600010      4.357638    4.272194  ...   1.010858  0.9161
           SH600011      9.384294    9.624917  ...   0.625742  0.2261
           SH600015     17.344748   17.417017  ...   1.467073  0.1580
...                           ...         ...  ...        ...     ...
2023-08-11 SZ300751    963.043640  941.549194  ...  12.552358  0.7226
           SZ300759     69.619865   67.315178  ...   4.841266  2.0063
           SZ300760    280.070007  276.232025  ...  10.157454  0.3799
           SZ300763    400.967407  391.187714  ...   5.525766  2.7863
           SZ300782    654.953186  639.436157  ...  21.357079  0.4208

[259698 rows x 14 columns]
preprocessed df:                           $open    $close  ...    $psttm     $turn
datetime   instrument                      ...                    
2019-08-06 SH600000    0.053411  0.053320  ...  0.254804  0.002129
           SH600009    0.074267  0.075979  ...  0.258128  0.014871
           SH600010    0.002406  0.002238  ...  0.254616  0.012182
           SH600011    0.006478  0.006578  ...  0.254523  0.002998
           SH600015    0.012925  0.012896  ...  0.254726  0.002092
...                         ...       ...  ...       ...       ...
2023-08-11 SZ300751    0.778880  0.762219  ...  0.257411  0.009607
           SZ300759    0.055265  0.053356  ...  0.255544  0.026694
           SZ300760    0.225716  0.222754  ...  0.256831  0.005045
           SZ300763    0.323635  0.315964  ...  0.255709  0.037076
           SZ300782    0.529347  0.517254  ...  0.259543  0.005590

[259698 rows x 14 columns]
df after stack: instrument            SH600000  SH600009  ...  SZ300763  SZ300782
datetime                                  ...                    
2019-08-06 $open      0.053411  0.074267  ...  0.027742  0.180641
           $close     0.053320  0.075979  ...  0.027924  0.185682
           $high      0.053718  0.076301  ...  0.027845  0.187693
           $low       0.053517  0.074503  ...  0.026886  0.179594
           $volume    0.001402  0.001908  ...  0.000233  0.000384
...                        ...       ...  ...       ...       ...
2023-08-11 $pctchg    0.024008  0.027497  ...  0.022598  0.025735
           $pettm     0.033633  0.033559  ...  0.033668  0.033757
           $preclose  0.043725  0.046749  ...  0.326040  0.528106
           $psttm     0.254655  0.259250  ...  0.255709  0.259543
           $turn      0.001668  0.012491  ...  0.037076  0.005590

[13664 rows x 267 columns]
features: ['$open', '$close', '$high', '$low', '$volume', '$vwap', '$amount', '$pbmrq', '$pcfncfttm', '$pctchg', '$pettm', '$preclose', '$psttm', '$turn']
dates: DatetimeIndex(['2019-08-06', '2019-08-07', '2019-08-08', '2019-08-09',
               '2019-08-12', '2019-08-13', '2019-08-14', '2019-08-15',
               '2019-08-16', '2019-08-19',
               ...
               '2023-07-31', '2023-08-01', '2023-08-02', '2023-08-03',
               '2023-08-04', '2023-08-07', '2023-08-08', '2023-08-09',
               '2023-08-10', '2023-08-11'],
              dtype='datetime64[ns]', name='datetime', length=976, freq=None)
stock ids: Index(['SH600000', 'SH600009', 'SH600010', 'SH600011', 'SH600015', 'SH600016',
       'SH600018', 'SH600019', 'SH600023', 'SH600025',
       ...
       'SZ300496', 'SZ300498', 'SZ300628', 'SZ300661', 'SZ300750', 'SZ300751',
       'SZ300759', 'SZ300760', 'SZ300763', 'SZ300782'],
      dtype='object', name='instrument', length=267)
values: [[[0.05341103 0.07426745 0.00240643 ... 0.12036732 0.0277425  0.18064068]
  [0.05331951 0.0759793  0.00223785 ... 0.12267821 0.02792429 0.18568161]
  [0.05371804 0.07630075 0.00229474 ... 0.12367266 0.02784504 0.18769273]
  ...
  [0.05441151 0.07672611 0.00274999 ... 0.12345254 0.02860418 0.18548535]
  [0.2548039  0.2581278  0.25461602 ... 0.25749025 0.2552113  0.26348966]
  [0.0021288  0.0148712  0.01218243 ... 0.0239984  0.08016985 0.10841663]]

 [[0.05360755 0.07668019 0.00233722 ... 0.12333168 0.02812127 0.18571368]
  [0.05322114 0.07603798 0.00228404 ... 0.12515938 0.02869848 0.18965237]
  [0.0533756  0.07717613 0.00231771 ... 0.12558404 0.02872508 0.19584896]
  ...
  [0.05367402 0.07632532 0.00261148 ... 0.12300675 0.0282883  0.18598655]
  [0.25480312 0.25813067 0.25461927 ... 0.25755268 0.25523362 0.26368338]
  [0.00147791 0.00732267 0.00905972 ... 0.01966175 0.09325168 0.13284455]]

 [[0.05365668 0.07642622 0.00236029 ... 0.12627985 0.02872099 0.19274965]
  [0.05415565 0.07773953 0.00226094 ... 0.12862977 0.02970176 0.206619  ]
  [0.05410941 0.07842112 0.00227177 ... 0.12914869 0.02996655 0.20761678]
  ...
  [0.05357568 0.07638398 0.00265765 ... 0.12548698 0.0290622  0.18995582]
  [0.2548105  0.2582135  0.25461766 ... 0.25764003 0.25526252 0.2645111 ]
  [0.0015631  0.01001011 0.00585715 ... 0.02219346 0.14612073 0.19687735]]

 ...

 [[0.04390077 0.04456265 0.00327189 ... 0.22857209 0.30650836 0.5235918 ]
  [0.04414831 0.04475932 0.00317356 ... 0.22691707 0.30849895 0.52199876]
  [0.04391121 0.04482591 0.00320283 ... 0.227497   0.31327268 0.5275803 ]
  ...
  [0.04432602 0.04506727 0.00354684 ... 0.22654234 0.31136444 0.5268359 ]
  [0.25465867 0.2591528  0.25467178 ... 0.25687665 0.25567785 0.2595903 ]
  [0.00079507 0.00445819 0.00721884 ... 0.0095642  0.02251691 0.0072468 ]]

 [[0.04360062 0.04516927 0.00327189 ... 0.22655575 0.30583045 0.51754063]
  [0.04336703 0.04639206 0.00315028 ... 0.22604235 0.32578728 0.5279296 ]
  [0.04337323 0.04616272 0.00317967 ... 0.22620872 0.33011287 0.5273697 ]
  ...
  [0.04450625 0.04511703 0.00354684 ... 0.22720656 0.3087579  0.52217776]
  [0.25466228 0.25932255 0.25467017 ... 0.25686705 0.25575078 0.2596495 ]
  [0.0023857  0.01611044 0.00677293 ... 0.00646812 0.079097   0.00677693]]

 [[0.04354059 0.04647201 0.00327189 ... 0.2257156  0.32363468 0.52934676]
  [0.04222515 0.04569516 0.00305717 ... 0.22275372 0.31596437 0.5172541 ]
  [0.04325368 0.04666773 0.00315652 ... 0.22598283 0.32307836 0.52930784]
  ...
  [0.04372526 0.04674916 0.00352357 ... 0.22633216 0.32603973 0.52810633]
  [0.25465485 0.2592501  0.25466383 ... 0.25683093 0.25570932 0.25954297]
  [0.00166825 0.01249124 0.00837821 ... 0.00504519 0.03707623 0.0055896 ]]], (976, 14, 267)
/Users/yangguangyu/anaconda3/envs/quant_dev/lib/python3.9/site-packages/torch/nn/modules/transformer.py:282: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.activation_relu_or_gelu was not True
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
test data: tensor([[[0.0534, 0.0743, 0.0024,  ..., 0.1204, 0.0277, 0.1806],
         [0.0533, 0.0760, 0.0022,  ..., 0.1227, 0.0279, 0.1857],
         [0.0537, 0.0763, 0.0023,  ..., 0.1237, 0.0278, 0.1877],
         ...,
         [0.0544, 0.0767, 0.0027,  ..., 0.1235, 0.0286, 0.1855],
         [0.2548, 0.2581, 0.2546,  ..., 0.2575, 0.2552, 0.2635],
         [0.0021, 0.0149, 0.0122,  ..., 0.0240, 0.0802, 0.1084]],

        [[0.0536, 0.0767, 0.0023,  ..., 0.1233, 0.0281, 0.1857],
         [0.0532, 0.0760, 0.0023,  ..., 0.1252, 0.0287, 0.1897],
         [0.0534, 0.0772, 0.0023,  ..., 0.1256, 0.0287, 0.1958],
         ...,
         [0.0537, 0.0763, 0.0026,  ..., 0.1230, 0.0283, 0.1860],
         [0.2548, 0.2581, 0.2546,  ..., 0.2576, 0.2552, 0.2637],
         [0.0015, 0.0073, 0.0091,  ..., 0.0197, 0.0933, 0.1328]],

        [[0.0537, 0.0764, 0.0024,  ..., 0.1263, 0.0287, 0.1927],
         [0.0542, 0.0777, 0.0023,  ..., 0.1286, 0.0297, 0.2066],
         [0.0541, 0.0784, 0.0023,  ..., 0.1291, 0.0300, 0.2076],
         ...,
         [0.0536, 0.0764, 0.0027,  ..., 0.1255, 0.0291, 0.1900],
         [0.2548, 0.2582, 0.2546,  ..., 0.2576, 0.2553, 0.2645],
         [0.0016, 0.0100, 0.0059,  ..., 0.0222, 0.1461, 0.1969]],

        ...,

        [[0.0439, 0.0446, 0.0033,  ..., 0.2286, 0.3065, 0.5236],
         [0.0441, 0.0448, 0.0032,  ..., 0.2269, 0.3085, 0.5220],
         [0.0439, 0.0448, 0.0032,  ..., 0.2275, 0.3133, 0.5276],
         ...,
         [0.0443, 0.0451, 0.0035,  ..., 0.2265, 0.3114, 0.5268],
         [0.2547, 0.2592, 0.2547,  ..., 0.2569, 0.2557, 0.2596],
         [0.0008, 0.0045, 0.0072,  ..., 0.0096, 0.0225, 0.0072]],

        [[0.0436, 0.0452, 0.0033,  ..., 0.2266, 0.3058, 0.5175],
         [0.0434, 0.0464, 0.0032,  ..., 0.2260, 0.3258, 0.5279],
         [0.0434, 0.0462, 0.0032,  ..., 0.2262, 0.3301, 0.5274],
         ...,
         [0.0445, 0.0451, 0.0035,  ..., 0.2272, 0.3088, 0.5222],
         [0.2547, 0.2593, 0.2547,  ..., 0.2569, 0.2558, 0.2596],
         [0.0024, 0.0161, 0.0068,  ..., 0.0065, 0.0791, 0.0068]],

        [[0.0435, 0.0465, 0.0033,  ..., 0.2257, 0.3236, 0.5293],
         [0.0422, 0.0457, 0.0031,  ..., 0.2228, 0.3160, 0.5173],
         [0.0433, 0.0467, 0.0032,  ..., 0.2260, 0.3231, 0.5293],
         ...,
         [0.0437, 0.0467, 0.0035,  ..., 0.2263, 0.3260, 0.5281],
         [0.2547, 0.2593, 0.2547,  ..., 0.2568, 0.2557, 0.2595],
         [0.0017, 0.0125, 0.0084,  ..., 0.0050, 0.0371, 0.0056]]]), torch.Size([976, 14, 267])
Using cpu device
Wrapping the env with a `Monitor` wrapper
Wrapping the env in a DummyVecEnv.
Logging to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/new_hs300_200_5_20240107114313_1
/Users/yangguangyu/anaconda3/envs/quant_dev/lib/python3.9/site-packages/gymnasium/core.py:311: UserWarning: [33mWARN: env.action_masks to get variables from other wrappers is deprecated and will be removed in v1.0, to get this variable you can do `env.unwrapped.action_masks` for environment variables or `env.get_wrapper_attr('action_masks')` that will search the reminding wrappers.[0m
  logger.warn(
/Users/yangguangyu/anaconda3/envs/quant_dev/lib/python3.9/site-packages/stable_baselines3/common/save_util.py:283: UserWarning: Path '/Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/new_hs300_200_5_20240107114313' does not exist. Will create it.
  warnings.warn(f"Path '{path.parent}' does not exist. Will create it.")
Var($pcfncfttm,50)
$amount
Div($preclose,$vwap)
$low
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/new_hs300_200_5_20240107114313/2048_steps
---------------------------------
| pool/              |          |
|    best_ic_ret     | 0.067    |
|    eval_cnt        | 4        |
|    significant     | 4        |
|    size            | 4        |
| rollout/           |          |
|    ep_len_mean     | 19.3     |
|    ep_rew_mean     | -0.958   |
| test/              |          |
|    ic              | 0.042    |
|    rank_ic         | 0.0638   |
| time/              |          |
|    fps             | 251      |
|    iterations      | 1        |
|    time_elapsed    | 8        |
|    total_timesteps | 2048     |
---------------------------------
/Users/yangguangyu/anaconda3/envs/quant_dev/lib/python3.9/site-packages/gymnasium/core.py:311: UserWarning: [33mWARN: env.action_masks to get variables from other wrappers is deprecated and will be removed in v1.0, to get this variable you can do `env.unwrapped.action_masks` for environment variables or `env.get_wrapper_attr('action_masks')` that will search the reminding wrappers.[0m
  logger.warn(
Mul(Constant(-30.0),$open)
Sub(Constant(-10.0),$preclose)
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/new_hs300_200_5_20240107114313/4096_steps
-----------------------------------------
| pool/                   |             |
|    best_ic_ret          | 0.067       |
|    eval_cnt             | 5           |
|    significant          | 5           |
|    size                 | 5           |
| rollout/                |             |
|    ep_len_mean          | 19.7        |
|    ep_rew_mean          | -0.979      |
| test/                   |             |
|    ic                   | 0.0419      |
|    rank_ic              | 0.0636      |
| time/                   |             |
|    fps                  | 69          |
|    iterations           | 2           |
|    time_elapsed         | 58          |
|    total_timesteps      | 4096        |
| train/                  |             |
|    approx_kl            | 0.014899425 |
|    clip_fraction        | 0.155       |
|    clip_range           | 0.2         |
|    entropy_loss         | -3.39       |
|    explained_variance   | -1.14       |
|    learning_rate        | 0.001       |
|    loss                 | -0.33       |
|    n_updates            | 10          |
|    policy_gradient_loss | -0.0144     |
|    value_loss           | 0.135       |
-----------------------------------------
$amount
Min($vwap,40)
Mul(Log($pcfncfttm),Mul(Constant(-10.0),$pbmrq))
Mul(Sub(WMA($close,40),Constant(-10.0)),Constant(0.5))
$close
Mul(Constant(0.01),Cov($turn,$pctchg,30))
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/new_hs300_200_5_20240107114313/6144_steps
---------------------------------------
| pool/                   |           |
|    best_ic_ret          | 0.0673    |
|    eval_cnt             | 8         |
|    significant          | 8         |
|    size                 | 8         |
| rollout/                |           |
|    ep_len_mean          | 19.1      |
|    ep_rew_mean          | -0.938    |
| test/                   |           |
|    ic                   | 0.0415    |
|    rank_ic              | 0.0647    |
| time/                   |           |
|    fps                  | 55        |
|    iterations           | 3         |
|    time_elapsed         | 110       |
|    total_timesteps      | 6144      |
| train/                  |           |
|    approx_kl            | 0.0195141 |
|    clip_fraction        | 0.207     |
|    clip_range           | 0.2       |
|    entropy_loss         | -3.38     |
|    explained_variance   | 0.0386    |
|    learning_rate        | 0.001     |
|    loss                 | -0.354    |
|    n_updates            | 20        |
|    policy_gradient_loss | -0.021    |
|    value_loss           | 0.00792   |
---------------------------------------
Div($volume,Constant(-30.0))
Add($psttm,$pcfncfttm)
Abs($vwap)
Mean($pctchg,40)
$open
Log($volume)
Mean(Mad($pctchg,10),10)
$pbmrq
$close
Mul(Constant(-10.0),Sub($amount,Log($vwap)))
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/new_hs300_200_5_20240107114313/8192_steps
-----------------------------------------
| pool/                   |             |
|    best_ic_ret          | 0.143       |
|    eval_cnt             | 15          |
|    significant          | 14          |
|    size                 | 15          |
| rollout/                |             |
|    ep_len_mean          | 18.5        |
|    ep_rew_mean          | -0.904      |
| test/                   |             |
|    ic                   | 0.0592      |
|    rank_ic              | 0.0624      |
| time/                   |             |
|    fps                  | 50          |
|    iterations           | 4           |
|    time_elapsed         | 163         |
|    total_timesteps      | 8192        |
| train/                  |             |
|    approx_kl            | 0.017255701 |
|    clip_fraction        | 0.229       |
|    clip_range           | 0.2         |
|    entropy_loss         | -3.38       |
|    explained_variance   | 0.0298      |
|    learning_rate        | 0.001       |
|    loss                 | -0.343      |
|    n_updates            | 30          |
|    policy_gradient_loss | -0.0202     |
|    value_loss           | 0.0118      |
-----------------------------------------
Add(Constant(10.0),Sub($pctchg,Constant(-10.0)))
Mul(Greater(Constant(2.0),$close),$pcfncfttm)
$open
$open
Corr(Std(Add(Constant(-0.01),Std(Mean($psttm,40),50)),30),$pbmrq,10)
Mean(Mul(Constant(-5.0),Mad($preclose,40)),30)
Div(Greater(Constant(-10.0),$pcfncfttm),$pbmrq)
Abs($close)
Abs($pctchg)
Add($pctchg,Log($vwap))
$pctchg
$pctchg
$amount
Add(Sum($vwap,40),$pcfncfttm)
$turn
$vwap
$pctchg
$pctchg
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/new_hs300_200_5_20240107114313/10240_steps
-----------------------------------------
| pool/                   |             |
|    best_ic_ret          | 0.151       |
|    eval_cnt             | 20          |
|    significant          | 19          |
|    size                 | 20          |
| rollout/                |             |
|    ep_len_mean          | 17.8        |
|    ep_rew_mean          | -0.855      |
| test/                   |             |
|    ic                   | 0.0548      |
|    rank_ic              | 0.059       |
| time/                   |             |
|    fps                  | 47          |
|    iterations           | 5           |
|    time_elapsed         | 217         |
|    total_timesteps      | 10240       |
| train/                  |             |
|    approx_kl            | 0.017104244 |
|    clip_fraction        | 0.207       |
|    clip_range           | 0.2         |
|    entropy_loss         | -3.36       |
|    explained_variance   | 0.0422      |
|    learning_rate        | 0.001       |
|    loss                 | -0.355      |
|    n_updates            | 40          |
|    policy_gradient_loss | -0.0201     |
|    value_loss           | 0.0172      |
-----------------------------------------
$pctchg
Cov(WMA(Div($vwap,$amount),30),Mad($preclose,10),20)
$pcfncfttm
Med($volume,30)
Cov(Log($amount),$vwap,40)
Log(Mean($amount,50))
$pcfncfttm
Corr(Cov($psttm,$pcfncfttm,50),Less($vwap,$high),20)
Abs(Add(Abs($pcfncfttm),EMA(Div($amount,$pbmrq),40)))
Mul(Cov(Mul(Constant(10.0),$close),Mul(Constant(0.01),Abs($pcfncfttm)),40),Constant(-5.0))
Sub(Constant(5.0),Log(Abs($pbmrq)))
Log(Div(Constant(-10.0),$pctchg))
Mad($preclose,40)
$close
Sum(Sum(Mul(Constant(5.0),$vwap),20),50)
Min($pettm,50)
$vwap
Sub(Constant(0.01),$preclose)
Div(Mean($preclose,40),Constant(-10.0))
$pettm
Div(Abs($volume),Constant(-10.0))
Mul(Constant(-0.5),Mul($close,Constant(-1.0)))
$low
$open
Mul(Constant(-10.0),Less(Delta($pcfncfttm,50),Mul($psttm,$pbmrq)))
$preclose
$close
$amount
Mul(Log(Add(Add(Constant(-0.5),$open),Sub(Constant(-10.0),$pctchg))),$pctchg)
$pctchg
$vwap
Abs(Add(Abs($amount),$preclose))
Sub($turn,Med($high,50))
Add($pettm,Mul(Constant(-30.0),Delta(Less($pctchg,$amount),40)))
Var(Log(Corr($preclose,Mean(Mul(Log(Mad($pctchg,40)),Constant(-30.0)),30),10)),10)
$turn
$pctchg
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/new_hs300_200_5_20240107114313/12288_steps
-----------------------------------------
| pool/                   |             |
|    best_ic_ret          | 0.16        |
|    eval_cnt             | 40          |
|    significant          | 31          |
|    size                 | 40          |
| rollout/                |             |
|    ep_len_mean          | 16          |
|    ep_rew_mean          | -0.721      |
| test/                   |             |
|    ic                   | 0.0444      |
|    rank_ic              | 0.046       |
| time/                   |             |
|    fps                  | 43          |
|    iterations           | 6           |
|    time_elapsed         | 284         |
|    total_timesteps      | 12288       |
| train/                  |             |
|    approx_kl            | 0.025126824 |
|    clip_fraction        | 0.251       |
|    clip_range           | 0.2         |
|    entropy_loss         | -3.33       |
|    explained_variance   | 0.0603      |
|    learning_rate        | 0.001       |
|    loss                 | -0.334      |
|    n_updates            | 50          |
|    policy_gradient_loss | -0.0246     |
|    value_loss           | 0.0296      |
-----------------------------------------
Mean(Log($pettm),20)
$pbmrq
Add(WMA($low,40),Constant(0.01))
Mul($close,Constant(30.0))
Mean($pctchg,40)
$pcfncfttm
$pcfncfttm
Add(Constant(-0.01),$pbmrq)
Abs($pcfncfttm)
Max($pctchg,30)
$vwap
Sum($vwap,10)
Div(Add(Sub(Constant(5.0),$vwap),$high),Constant(2.0))
WMA($volume,20)
Mul(Constant(5.0),$pettm)
Cov(Min(Div(Abs($pctchg),Constant(-5.0)),30),$close,30)
$pcfncfttm
$vwap
Abs($close)
$pctchg
$close
Sub(Constant(-10.0),WMA($pcfncfttm,30))
$pbmrq
Add(Constant(-5.0),WMA(Abs(Abs($amount)),30))
Sub(Abs($open),$preclose)
Mad($pcfncfttm,10)
Mul(Log($psttm),Less(Constant(-10.0),$pcfncfttm))
Mean(Min($pbmrq,50),40)
$pbmrq
$close
$pctchg
Less(Std($vwap,40),Min(EMA($vwap,40),40))
Add(Constant(-30.0),$turn)
$open
$pctchg
$pcfncfttm
$pbmrq
$high
Sum($turn,40)
Abs(Mean(WMA($vwap,40),40))
Div(Sub($pcfncfttm,Constant(-2.0)),Constant(10.0))
Add(Max($pctchg,30),Mul($pctchg,Constant(-5.0)))
Log(Add($preclose,Constant(-10.0)))
$pcfncfttm
Mul(Constant(-10.0),$close)
$turn
Sub($pcfncfttm,$psttm)
$psttm
$amount
EMA(Mul(Med($vwap,40),$psttm),50)
$pbmrq
Div($open,Constant(-10.0))
Less($vwap,$high)
$amount
Sub(Constant(-0.01),$pctchg)
$close
$pettm
$vwap
Abs(Abs($pctchg))
$pctchg
Delta(Mul(Constant(-30.0),Abs(Abs(Abs($turn)))),40)
Div(Constant(-5.0),$psttm)
$pctchg
Mul(Constant(-10.0),$pcfncfttm)
Add(Add(Div($pcfncfttm,Mul(Cov($pctchg,$vwap,50),Constant(0.5))),Constant(-10.0)),Greater($pctchg,Constant(1.0)))
Mad($turn,50)
Mul(Constant(0.01),$amount)
Mul($psttm,Sub(Div(Constant(-0.5),$pcfncfttm),$psttm))
$vwap
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/new_hs300_200_5_20240107114313/14336_steps
-----------------------------------------
| pool/                   |             |
|    best_ic_ret          | 0.174       |
|    eval_cnt             | 67          |
|    significant          | 52          |
|    size                 | 67          |
| rollout/                |             |
|    ep_len_mean          | 13          |
|    ep_rew_mean          | -0.529      |
| test/                   |             |
|    ic                   | 0.0449      |
|    rank_ic              | 0.0458      |
| time/                   |             |
|    fps                  | 38          |
|    iterations           | 7           |
|    time_elapsed         | 369         |
|    total_timesteps      | 14336       |
| train/                  |             |
|    approx_kl            | 0.028242435 |
|    clip_fraction        | 0.316       |
|    clip_range           | 0.2         |
|    entropy_loss         | -3.27       |
|    explained_variance   | 0.0581      |
|    learning_rate        | 0.001       |
|    loss                 | -0.324      |
|    n_updates            | 60          |
|    policy_gradient_loss | -0.0271     |
|    value_loss           | 0.0777      |
-----------------------------------------
$turn
$pctchg
$pbmrq
$psttm
Log(Corr($low,$turn,30))
$close
Sub(Constant(2.0),Greater($pctchg,Mul(Abs($pbmrq),Constant(0.01))))
Mul($close,Mul(Constant(1.0),$pbmrq))
$close
Delta(Div($high,$vwap),20)
Delta($pcfncfttm,40)
Log($pctchg)
$vwap
EMA(Mul(Constant(10.0),$low),50)
$close
Sub(Add(Std($pbmrq,10),$amount),Constant(0.5))
Mul($pbmrq,$amount)
Delta(Log(Delta(Sub($high,Constant(-2.0)),20)),20)
$pcfncfttm
$pettm
Mul(Sub(Abs($pctchg),Greater(Div(Add($turn,Sum(Corr($pctchg,$close,30),40)),Sub(Constant(5.0),$volume)),Constant(-2.0))),Constant(5.0))
Greater(Add(Add(Constant(2.0),$turn),Constant(-10.0)),$volume)
$pettm
Log(Less(Mul(Mean(Sum(Log($close),40),20),$close),Div($vwap,$pctchg)))
Sub(Less($amount,Constant(-0.5)),$volume)
$close
$vwap
$preclose
Add(Mul(Add(Constant(-30.0),$preclose),$psttm),Constant(0.01))
Var(Add(Constant(5.0),Mad(Div($volume,Constant(-10.0)),40)),50)
Mean(Sum($vwap,30),10)
$vwap
Mul(Constant(-30.0),$pcfncfttm)
$pcfncfttm
$pbmrq
$pctchg
$pcfncfttm
$low
Add($pcfncfttm,Constant(10.0))
Add(Constant(-30.0),$pcfncfttm)
Mul(Constant(0.01),$pcfncfttm)
$pbmrq
Mul(Constant(5.0),Sub($vwap,$low))
$vwap
$pctchg
$vwap
Mad($vwap,50)
EMA(Abs(Add(Sub(Constant(5.0),$pctchg),$psttm)),10)
$amount
Delta(Cov($psttm,Add($vwap,$high),50),30)
$pcfncfttm
Med(Log(Sub($turn,Constant(0.01))),20)
Abs($pctchg)
Div(Greater(Less(Constant(30.0),Add($pctchg,Add($preclose,Constant(-0.01)))),Log(EMA($open,10))),Ref(Abs(Sub($low,Constant(-0.01))),40))
Mul(Constant(-10.0),Mul(Mad($open,10),$close))
Mul(Div($pcfncfttm,Mul(Constant(-0.01),$close)),Constant(-5.0))
$pbmrq
Add($pcfncfttm,$vwap)
$pettm
Mul(Greater(Add(Max(Mad($open,30),40),Constant(10.0)),Med($low,10)),$pctchg)
Mul(Constant(0.01),WMA(Log($pcfncfttm),40))
$preclose
Mean(Sub($psttm,$open),50)
Log($low)
Mul(Std($psttm,40),Less(Sub(Constant(-30.0),$amount),Constant(30.0)))
$vwap
Sum($pcfncfttm,10)
Med($high,10)
Corr($pctchg,Add(Mul(Add(Med($psttm,20),Constant(-10.0)),Abs($psttm)),Constant(0.5)),50)
Min($amount,40)
$vwap
Mul(Mean($vwap,40),$open)
$pctchg
Mul($pcfncfttm,Constant(-10.0))
Add(Constant(-0.5),Add($vwap,Add(Mean($pcfncfttm,20),$vwap)))
WMA($close,40)
$pettm
Add(Constant(-10.0),Less($pctchg,$amount))
Div(EMA(Mul(Constant(2.0),Abs(Less(Min(Sub($high,$low),10),$volume))),20),Constant(-2.0))
Sub(Log(Mean($low,50)),Div(Corr($preclose,$pettm,40),$low))
$pcfncfttm
Var(Sum(WMA(Add(Constant(10.0),$close),30),40),30)
Var(Add(Mul(Constant(-10.0),$volume),Med($pctchg,40)),40)
Std(Div(Constant(10.0),$vwap),40)
$close
Sum(WMA(Sub(Constant(-30.0),Add($amount,Constant(5.0))),50),10)
$pcfncfttm
$pctchg
Mul(Constant(-10.0),$pctchg)
Mean(Mean($close,50),30)
$open
$low
Mul(Div(Mul(Constant(-0.01),$vwap),Constant(-10.0)),Constant(30.0))
Var(Log(Delta($pctchg,40)),20)
Sub($open,Less($high,Constant(2.0)))
Add(Constant(-5.0),$psttm)
WMA($pctchg,40)
Mul(Constant(-10.0),$amount)
$turn
Mul($pcfncfttm,Constant(2.0))
Add(Sub(Constant(-2.0),$amount),Constant(-5.0))
Mul(Log(Mul($open,$open)),$amount)
Mul(Mul(Abs($open),$amount),Constant(-2.0))
$pctchg
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/new_hs300_200_5_20240107114313/16384_steps
-----------------------------------------
| pool/                   |             |
|    best_ic_ret          | 0.187       |
|    eval_cnt             | 112         |
|    significant          | 77          |
|    size                 | 112         |
| rollout/                |             |
|    ep_len_mean          | 9.66        |
|    ep_rew_mean          | -0.243      |
| test/                   |             |
|    ic                   | 0.0496      |
|    rank_ic              | 0.0386      |
| time/                   |             |
|    fps                  | 29          |
|    iterations           | 8           |
|    time_elapsed         | 553         |
|    total_timesteps      | 16384       |
| train/                  |             |
|    approx_kl            | 0.029810496 |
|    clip_fraction        | 0.362       |
|    clip_range           | 0.2         |
|    entropy_loss         | -3.22       |
|    explained_variance   | 0.0816      |
|    learning_rate        | 0.001       |
|    loss                 | -0.337      |
|    n_updates            | 70          |
|    policy_gradient_loss | -0.0344     |
|    value_loss           | 0.0932      |
-----------------------------------------
Mul($pctchg,Constant(-10.0))
Add(Constant(-0.5),Log($amount))
$amount
$amount
EMA(Add(Constant(-0.5),Add(Abs(Mul(Sum(Sub($psttm,Med(Std($pctchg,40),50)),40),Constant(-0.5))),Constant(5.0))),40)
$low
$pctchg
$amount
$close
$close
Mean($pcfncfttm,40)
$pbmrq
Mad($pcfncfttm,30)
Mad(Div(Mul(WMA(Add(Constant(-5.0),$pctchg),40),Less(Var(Mad($amount,30),40),Mul($vwap,Constant(-10.0)))),Constant(30.0)),40)
Mul($close,Constant(-5.0))
Less(Div(Mul(Constant(-30.0),$close),Div(Sub($pbmrq,$pctchg),Constant(30.0))),Mul(Constant(0.01),$pcfncfttm))
Greater(Mul(Log($close),Constant(-30.0)),Div(Greater($pettm,$turn),Constant(-0.01)))
$close
Med($open,50)
$pbmrq
Div(Sub(Log(Add(Constant(5.0),$close)),Less($pettm,Constant(-0.01))),Constant(0.01))
Corr($vwap,EMA($volume,30),40)
Less(Add(Add(Constant(-0.5),$pctchg),$high),Div(Abs($pctchg),$high))
$high
$close
Add(Constant(-30.0),Div(Log(Abs($high)),$pctchg))
Sub(Min($pcfncfttm,30),Abs($preclose))
Mad($pcfncfttm,40)
Sub(Sub(Mad($pctchg,40),Constant(2.0)),Mul($pcfncfttm,Mul($amount,Constant(-0.5))))
Log(Log(Less(Ref($pctchg,40),Greater(Add($psttm,Constant(-5.0)),$close))))
Mad($pcfncfttm,50)
Add($pctchg,Abs(Mul(Add($pbmrq,$amount),Corr($pbmrq,$pctchg,40))))
$amount
Mul(Mad(Mul(Add(WMA(Sub(Constant(-30.0),Mul($open,$pcfncfttm)),30),Constant(-30.0)),Constant(-5.0)),40),Constant(-5.0))
Add(Min($pettm,40),Constant(-2.0))
Div(Sub(Mul(Sub(Min(WMA($psttm,50),10),Abs(Cov(Mul($low,Constant(-30.0)),$turn,50))),$close),$pctchg),Constant(-2.0))
Mul(Constant(2.0),Mean($preclose,40))
WMA($pbmrq,40)
Corr(Corr(Log($preclose),WMA(Add($high,$amount),50),50),Mul($pctchg,Abs(Corr($preclose,$pctchg,30))),10)
Add(Constant(1.0),Sum(Abs($pctchg),40))
Div(Constant(0.01),Mad(Mad(EMA(Sum(EMA($close,10),40),40),40),40))
Mul($amount,$vwap)
Corr(Div(Constant(2.0),$close),$amount,30)
$turn
Mul($volume,Greater(Div($psttm,Less($pcfncfttm,Log(Abs(Mul($pcfncfttm,Less(Constant(-30.0),$open)))))),Mul($vwap,Constant(2.0))))
$turn
$vwap
$vwap
Sub(Var(WMA(Mean(Sum($pbmrq,10),40),40),50),$pcfncfttm)
Add(Greater(Constant(-30.0),Mad(Add($volume,$turn),40)),$open)
$close
Log(Corr($pctchg,Sub($pcfncfttm,Constant(30.0)),50))
$pctchg
Abs($high)
$vwap
Delta(Abs(Var(Greater($pcfncfttm,$pettm),50)),50)
Mul($pcfncfttm,Sub(Mean(Greater(Abs(Log(Add($close,$close))),Add($pcfncfttm,$pcfncfttm)),30),Constant(1.0)))
$pcfncfttm
$pctchg
Abs(Max(Max(EMA(Greater($close,$high),50),30),30))
Abs(Corr(Add(Mean($pcfncfttm,50),Log($volume)),Less($pcfncfttm,$volume),40))
Std(Div(Less(Constant(-1.0),Delta($turn,30)),Max(Log($high),30)),10)
$amount
Sub(Std($open,40),Constant(-5.0))
$pctchg
Add(Constant(-0.5),Log($close))
$pbmrq
Mul($volume,Div($close,Add(Constant(-30.0),Abs(Max($volume,50)))))
$preclose
Add(Constant(-30.0),$pcfncfttm)
Log(Log($amount))
$vwap
Log($vwap)
Abs(Abs(WMA($pctchg,10)))
$psttm
Add(Mul($pctchg,Sub(Mul($volume,Constant(10.0)),Constant(-30.0))),$pbmrq)
$close
$pcfncfttm
Log($preclose)
$pctchg
Add(Constant(-1.0),Sum(Add(Sub(Abs($pbmrq),$amount),$pctchg),40))
Std(Mul(Div($turn,$pctchg),$psttm),10)
Mad($psttm,40)
Sub($open,Sum($pctchg,30))
$open
Max($vwap,40)
Mul($pcfncfttm,Corr($pctchg,Mul($pcfncfttm,$pcfncfttm),50))
$turn
$low
Add(Constant(10.0),Mul($close,$pcfncfttm))
Mean(Delta(Corr(Add(Greater(Sub(Constant(-5.0),$vwap),Constant(-5.0)),$close),$open,20),10),40)
Mul($amount,Constant(30.0))
Mad(Add(Sum(Log(Greater(Std($amount,50),$high)),40),Mul($pcfncfttm,Less($turn,Constant(-2.0)))),40)
Abs(Sub($preclose,Constant(-2.0)))
$pbmrq
$pettm
$vwap
$pctchg
$pcfncfttm
$turn
Add(Add(WMA($amount,40),Corr($high,$open,50)),Cov($amount,Std(Min($pcfncfttm,40),50),30))
Add(WMA($pctchg,50),Constant(-0.01))
Delta(Mean(Abs($pctchg),20),20)
$pbmrq
$close
Add(Constant(-2.0),$pctchg)
Add(Sub(Mul(Div(Constant(-10.0),Sub($close,$psttm)),Sum($turn,40)),Constant(-5.0)),$turn)
Sub($pcfncfttm,Corr($pctchg,$pcfncfttm,50))
$pcfncfttm
Add(Constant(1.0),Abs(Mean(Std(Sub($vwap,Constant(-2.0)),40),20)))
Mul(Constant(-0.01),Greater(Abs($pctchg),$pettm))
$pcfncfttm
Ref($pettm,50)
Less(Mul(Constant(10.0),$close),Sub($preclose,$pcfncfttm))
Add(Constant(-0.5),Mad(Sub(EMA($pbmrq,10),$pctchg),40))
$close
Sum(Mad(Log(Sub(Constant(-10.0),Sum($high,40))),20),50)
Mean(Log($pcfncfttm),40)
Sub(Constant(-0.5),Corr(Abs(Div($vwap,Log($high))),Sub($pcfncfttm,$pctchg),20))
Log($turn)
Div(Less(Greater(Constant(5.0),Mul($preclose,$vwap)),Corr($vwap,$amount,50)),$vwap)
Sum(Less(Add(Constant(10.0),Greater($pctchg,Greater($vwap,$vwap))),Add($pcfncfttm,Log(Abs(Mul($vwap,Sub(Constant(5.0),$amount)))))),40)
Greater($psttm,Sub(Sub($turn,$pcfncfttm),Constant(5.0)))
Add(Constant(10.0),Mad(Mean($open,30),10))
Sum(Add(Add(Constant(-1.0),Sub(Sub($close,Constant(0.01)),Constant(30.0))),$close),40)
Mean(Mean(Cov(Mean($psttm,30),$psttm,50),40),10)
Add($volume,Constant(-0.01))
Log($pctchg)
$amount
Sub(Mul(Abs($vwap),WMA($turn,40)),$turn)
Add($amount,Constant(-10.0))
$pctchg
Add(Constant(-2.0),EMA($vwap,30))
$preclose
Abs(Sub(Constant(-0.5),Cov($preclose,Div($vwap,Constant(30.0)),40)))
$amount
Mean($psttm,20)
$pctchg
$preclose
Mad(Mean(Med(Med($open,40),40),20),40)
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/new_hs300_200_5_20240107114313/18432_steps
----------------------------------------
| pool/                   |            |
|    best_ic_ret          | 0.2        |
|    eval_cnt             | 166        |
|    significant          | 113        |
|    size                 | 166        |
| rollout/                |            |
|    ep_len_mean          | 10.5       |
|    ep_rew_mean          | -0.269     |
| test/                   |            |
|    ic                   | 0.0539     |
|    rank_ic              | 0.04       |
| time/                   |            |
|    fps                  | 22         |
|    iterations           | 9          |
|    time_elapsed         | 809        |
|    total_timesteps      | 18432      |
| train/                  |            |
|    approx_kl            | 0.03556452 |
|    clip_fraction        | 0.337      |
|    clip_range           | 0.2        |
|    entropy_loss         | -3.1       |
|    explained_variance   | 0.175      |
|    learning_rate        | 0.001      |
|    loss                 | -0.261     |
|    n_updates            | 80         |
|    policy_gradient_loss | -0.0296    |
|    value_loss           | 0.148      |
----------------------------------------
$vwap
$pcfncfttm
$vwap
Add($turn,Log($pbmrq))
Sub($low,Sum($low,50))
$pctchg
Log($pcfncfttm)
$pcfncfttm
Mul(Constant(-10.0),Sum(Std($pcfncfttm,40),40))
Div($pctchg,Add($close,WMA($pcfncfttm,40)))
Mul($close,Div(Mad($pbmrq,50),$psttm))
$pctchg
Sub(EMA(Med(Div(Log($pctchg),$pettm),40),40),Cov(Mean($pcfncfttm,20),$vwap,50))
$close
Mad(Div(Log(Abs(Abs(Sub(Mul(Less(Constant(30.0),$turn),$pctchg),Constant(-30.0))))),$vwap),40)
Mean(Ref(Abs($pbmrq),40),50)
Abs($preclose)
Mul($open,Constant(-0.01))
$pbmrq
$turn
Add(Constant(0.01),Log(Div(Mul(Add(Add($psttm,$open),Std($high,40)),$close),Sub($pbmrq,$close))))
Less($pcfncfttm,Mul($amount,Mean(Add($open,Constant(-0.5)),40)))
Mul(Sub($psttm,Less(Constant(-10.0),Abs($pctchg))),Sub(Corr($psttm,Std($pcfncfttm,30),30),Mean(Log($amount),40)))
Sub(Constant(-10.0),Abs(Cov($amount,Abs(Add($pettm,Mul(Add(Less(Constant(2.0),Less($vwap,$pcfncfttm)),$preclose),Constant(-5.0)))),40)))
Mul(Div($high,Corr(Div($turn,$vwap),Mul($amount,Sub($preclose,Constant(-5.0))),40)),Sub(Constant(-30.0),$psttm))
Log(Div(Greater(Constant(-5.0),$preclose),Sub(Mul($pbmrq,Abs($vwap)),$pctchg)))
Mean(Add(Mul($open,Add(Mad($close,40),$pcfncfttm)),Sub(Constant(5.0),$amount)),30)
Sub(Log(Sum(Sub(Constant(-2.0),Corr(Var(Mul($pbmrq,Constant(-1.0)),20),$pctchg,40)),20)),Constant(10.0))
Add($vwap,Greater($low,Constant(-10.0)))
EMA(Sum($pcfncfttm,20),40)
$pctchg
Sub(Constant(0.01),$turn)
$vwap
$low
$pcfncfttm
Mul($amount,$pcfncfttm)
Div(Greater(Constant(10.0),$pcfncfttm),Mad($pctchg,40))
Mul(Greater(Constant(10.0),$pcfncfttm),Add($pctchg,$pctchg))
$close
Log($amount)
Sub(Constant(-10.0),$close)
Log(Mad(Add(Less($vwap,Constant(-10.0)),$high),40))
Cov($turn,$open,20)
Mul(Div(Constant(-1.0),$amount),Less($close,Constant(-0.01)))
$amount
Add(Med(Mul(Constant(-0.5),$vwap),40),Constant(-1.0))
$pcfncfttm
$pcfncfttm
$preclose
Sub(Mean(Mul(Less(Delta($preclose,40),Greater($turn,Constant(0.01))),Med(Div(Med($pettm,30),Constant(1.0)),40)),40),$vwap)
Less(Mean($preclose,40),$low)
$pcfncfttm
$pbmrq
Div(Add(Constant(-0.5),Log($pcfncfttm)),$close)
Sub($pctchg,$amount)
Mean(Sub($turn,Constant(10.0)),20)
Less($close,$pctchg)
Log(Log($vwap))
Abs(Add(Add($vwap,Sub(Corr($pettm,$pettm,10),Abs($close))),Less(Constant(5.0),Mul($vwap,Constant(10.0)))))
Log($volume)
Abs(Min(Mul(Max($high,40),$pettm),10))
Div(Sub(EMA(Mul(Constant(1.0),Mean($pctchg,40)),50),Mul($close,$pctchg)),$pcfncfttm)
Mean($vwap,20)
Ref(EMA($vwap,10),30)
Div(Div($pcfncfttm,$turn),Corr($pctchg,Mul($pettm,Less(Mean($pettm,20),Abs(Sub($high,Constant(-2.0))))),10))
Corr($amount,$amount,20)
$vwap
$close
Sum(Mean(Div(Constant(0.5),Corr(Mad($vwap,30),Corr($pcfncfttm,$preclose,10),50)),30),30)
$psttm
Log(Log($pcfncfttm))
$pcfncfttm
Mad($pctchg,50)
Std($vwap,40)
$pctchg
$volume
Add(Constant(-10.0),$pcfncfttm)
Min(Delta(Delta($close,50),10),10)
$pcfncfttm
$pettm
Sub(Constant(-10.0),$close)
Corr($pcfncfttm,$high,10)
$pctchg
$psttm
Sub(Constant(30.0),$open)
$high
Add($amount,Add($high,Sub($pctchg,$open)))
$pctchg
Ref(Abs($pcfncfttm),40)
$volume
Div(Constant(-5.0),$amount)
Sub($psttm,$pctchg)
$turn
Sub(Add(Add(Mean(Add(Constant(-5.0),$psttm),40),Log(Sub(Add(Constant(-2.0),$pctchg),Constant(-5.0)))),Constant(1.0)),$volume)
$vwap
Med(Abs($close),10)
Log(Log(Med($close,10)))
Sub(Mul(Sub(Log(Mul($amount,$pctchg)),$psttm),Abs(Mad($pctchg,50))),Log($open))
$pctchg
Sub(Constant(5.0),Mad($pctchg,40))
EMA(Log($turn),20)
$pctchg
$open
Mul(Constant(-30.0),Sub($psttm,Log(Mul(Sub(Constant(5.0),Abs(Mad(Mul($pctchg,$amount),40))),Sum(Add(Constant(-0.5),$pctchg),20)))))
$psttm
$high
Abs(Log($pctchg))
$amount
Ref(Mul(Mul(Log(Mul(Less($close,Constant(-2.0)),$vwap)),$high),Constant(-5.0)),40)
Add(Constant(-30.0),$pctchg)
Mul(Log(Mul(Constant(-0.01),Log(Mad(Med(Add(Add($psttm,$pettm),Med($vwap,20)),50),40)))),Sub($turn,Constant(-1.0)))
Add(Constant(0.01),Less($pctchg,$pctchg))
Log($pettm)
Corr(Mul(Constant(-30.0),Std(Var(Add($pctchg,Log($pbmrq)),40),40)),$pctchg,50)
Mul(Add(Add($close,$turn),Log($pctchg)),Log($pettm))
Add(Constant(0.5),$preclose)
Log($vwap)
$amount
$pctchg
$pctchg
Log(Corr(Mul(Constant(2.0),$pettm),Div($pettm,$low),40))
Mad(Sub(Abs(Mad(Log(EMA(Sub(Constant(-30.0),$vwap),20)),40)),Constant(-30.0)),30)
Abs(Abs($volume))
$preclose
$turn
$pcfncfttm
$pettm
$pcfncfttm
Div(Std(Div(Constant(0.5),$pettm),40),$open)
Mul(Sub(Div($turn,Constant(5.0)),$close),Greater(Constant(-2.0),$psttm))
$volume
$pcfncfttm
Div(Sum(Sum(Add(Abs($pcfncfttm),Constant(-0.5)),50),40),$low)
Mul(Constant(-5.0),Log($pcfncfttm))
Std($pbmrq,20)
Add(Constant(-10.0),Div(Add($turn,Med(Greater(Mul(Constant(-30.0),$turn),Add(Constant(1.0),Abs($vwap))),40)),Constant(5.0)))
Sub(Greater(Constant(10.0),$amount),Var(Mean(Log(Sub(Abs($pcfncfttm),$open)),40),30))
Cov(Div($vwap,$vwap),Mad($close,10),40)
Add(Constant(10.0),$volume)
$pettm
Mean(Sub($close,Constant(-2.0)),50)
Var(Max($vwap,50),20)
Mul($preclose,Add(Med(Div(Sub($turn,$amount),Log($amount)),40),$psttm))
Add($close,$vwap)
$vwap
$low
Mean(Add(Constant(30.0),$pcfncfttm),40)
Abs(Add(Constant(-10.0),$pettm))
Add(Mul($open,$pbmrq),$pctchg)
Ref(WMA(Add(Constant(10.0),Greater(Sum(WMA($turn,20),30),$open)),40),40)
$close
Div($close,$turn)
Sub(Corr(Sub(Constant(-0.5),Add(Div($open,Constant(-2.0)),$preclose)),$amount,40),Mul($high,Constant(-5.0)))
$amount
Add(Mul(Constant(10.0),Add($low,Abs($close))),Constant(-0.5))
$pctchg
$pbmrq
$turn
$pctchg
$vwap
Std(Sub(Constant(2.0),$psttm),20)
Corr(Mean($preclose,50),Mul(EMA(Sub(Constant(30.0),$open),50),$vwap),40)
Sub(Abs(Delta($close,40)),Constant(1.0))
Med(Mul($open,Constant(-0.5)),10)
$high
Sub($open,$pettm)
$vwap
$pcfncfttm
Sub($pettm,Constant(0.5))
Abs(Log(Mad(Mul($pctchg,$vwap),40)))
Div(Abs(Std($close,10)),$pcfncfttm)
$open
$high
$pctchg
$pcfncfttm
$close
Greater(Sum($pcfncfttm,10),Less(Sub($amount,$pcfncfttm),$preclose))
$pcfncfttm
Add(Add(Constant(-30.0),Std(Mad($pctchg,40),40)),Constant(-10.0))
$preclose
WMA(Add(Less(Mul(Constant(0.5),$turn),Constant(10.0)),$pctchg),50)
Med(Delta($close,40),40)
$vwap
$pcfncfttm
Ref(Abs(Add(Div(Mad($pctchg,20),Add(Abs($close),Div(Max(WMA($pbmrq,50),40),Constant(-5.0)))),$close)),20)
$low
$close
Add($pettm,$volume)
Std(Sub($close,Constant(10.0)),40)
$psttm
Mul($pbmrq,Sub(Constant(-5.0),Mul(Abs(Add($pctchg,$open)),$turn)))
Med(WMA($amount,30),40)
$close
Sub(Constant(30.0),Div(Add(Sub($close,Constant(0.01)),Constant(5.0)),Mean(Mul(Abs(Sub($close,$preclose)),$preclose),30)))
Mean(Sub($pbmrq,Constant(-5.0)),40)
Sub($amount,Mul(Constant(0.01),$pctchg))
Abs(Delta($low,30))
Min($open,40)
Abs(Sub(Sum($pctchg,40),$pcfncfttm))
$pctchg
Add(Constant(5.0),Log(Cov($open,Abs($preclose),50)))
$vwap
Sub(Sub($close,Constant(-2.0)),Corr(Add(Cov($pcfncfttm,Sub($pbmrq,$pcfncfttm),50),Div($volume,Constant(-10.0))),$low,30))
Add(Div(Constant(-10.0),Delta(Abs(Sub($pcfncfttm,Constant(-1.0))),10)),Constant(-30.0))
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/new_hs300_200_5_20240107114313/20480_steps
-----------------------------------------
| pool/                   |             |
|    best_ic_ret          | 0.219       |
|    eval_cnt             | 252         |
|    significant          | 148         |
|    size                 | 200         |
| rollout/                |             |
|    ep_len_mean          | 8.41        |
|    ep_rew_mean          | -0.114      |
| test/                   |             |
|    ic                   | 0.0375      |
|    rank_ic              | 0.0373      |
| time/                   |             |
|    fps                  | 14          |
|    iterations           | 10          |
|    time_elapsed         | 1396        |
|    total_timesteps      | 20480       |
| train/                  |             |
|    approx_kl            | 0.041461073 |
|    clip_fraction        | 0.341       |
|    clip_range           | 0.2         |
|    entropy_loss         | -2.95       |
|    explained_variance   | 0.12        |
|    learning_rate        | 0.001       |
|    loss                 | -0.234      |
|    n_updates            | 90          |
|    policy_gradient_loss | -0.0188     |
|    value_loss           | 0.169       |
-----------------------------------------
$high
$pbmrq
$close
Mean(Mean(Var(Add(Greater(Constant(2.0),Var($amount,30)),$amount),30),10),40)
Sum($low,40)
Mul(Add(Constant(-0.5),Add(Log(EMA($close,50)),$amount)),$pbmrq)
Mul(Constant(1.0),Add(Mean(Log($close),40),$psttm))
$vwap
$pcfncfttm
Abs(Sub(Constant(-30.0),$close))
$amount
$psttm
Sub(Constant(10.0),Add(Mean($preclose,10),$pctchg))
Min($close,30)
Abs($pctchg)
Mul(Constant(-5.0),$pbmrq)
Sub(Constant(-0.5),$low)
$vwap
$preclose
Sum(Add(Constant(30.0),$high),50)
Med($psttm,50)
Add(Less($open,Constant(-1.0)),Add($pbmrq,$amount))
Add(EMA(Mul(Constant(-5.0),$pettm),40),$vwap)
$open
Log(Std(Log($pctchg),20))
$pettm
$close
$pcfncfttm
Cov($vwap,Sum($low,40),40)
Mad($pcfncfttm,40)
Div(Delta(Sub($vwap,Sum($pbmrq,10)),40),Constant(-10.0))
$close
Sub(Constant(1.0),$pcfncfttm)
Div(Constant(0.01),Mean(EMA($turn,40),10))
Add($high,Constant(5.0))
EMA(Div(Constant(5.0),$pcfncfttm),50)
$pcfncfttm
Sub(Less(Less(Constant(-5.0),Mul($pctchg,$pcfncfttm)),$close),Div($pctchg,Max($amount,50)))
$turn
Min($preclose,30)
Div(Constant(-0.5),Sub($vwap,$vwap))
$preclose
Sum(Log($vwap),40)
Abs(Sub(Constant(-1.0),$low))
Mul($vwap,Sub(Mul($close,Greater(Constant(-5.0),Add($pctchg,Less($pettm,Constant(-0.01))))),$turn))
$open
Div(Greater(Constant(-2.0),$amount),Abs($pettm))
$amount
$pettm
$preclose
$vwap
Sub(Log($pctchg),$pctchg)
$pctchg
$close
$amount
$pcfncfttm
EMA(Less(Sub(Constant(-0.01),$pcfncfttm),Sub($close,Abs(Abs($close)))),30)
Mean($amount,40)
Sub($amount,Abs(Abs(Add(Add($open,$open),Constant(-0.01)))))
$pbmrq
Abs(Log(Sub(Constant(30.0),Corr($pcfncfttm,Add($pctchg,Less(Abs($high),Abs($vwap))),40))))
Std(Abs($pettm),40)
$psttm
Sub(Constant(5.0),Max($amount,40))
$turn
Abs(Ref(Greater($open,Add($pbmrq,$pctchg)),30))
$preclose
$pettm
Max(Mean(Add($pcfncfttm,$psttm),40),20)
$open
Add(Std(Corr(Add($close,$amount),$low,10),20),Add(Log($pbmrq),$open))
$psttm
Sub($preclose,EMA($pcfncfttm,30))
$amount
$pcfncfttm
$volume
Cov($preclose,$high,20)
$pctchg
$amount
Max($pctchg,50)
$pcfncfttm
Mean(Log(Delta(Mul(Constant(-2.0),$pctchg),40)),50)
Delta($pcfncfttm,40)
$pbmrq
$close
Mul(Add($psttm,$close),$amount)
Mul(Add(Constant(-5.0),Mad($turn,40)),$amount)
$amount
Abs($pctchg)
Mul($open,$low)
$close
Greater($pcfncfttm,$pbmrq)
Sum(Mul(Constant(-0.5),$volume),20)
Delta($amount,50)
Mul(Add(Greater(Constant(-10.0),Log($vwap)),$pctchg),Constant(0.01))
Mad($vwap,40)
Add(Constant(0.01),$pctchg)
Log(Mul($vwap,Sub(Sum(Sub($pbmrq,$amount),40),Mad($pcfncfttm,40))))
$amount
Sub($pbmrq,Add(Constant(-0.5),$open))
Greater(Div(Greater(Less(Constant(5.0),$vwap),Abs(Abs($pbmrq))),$volume),$pbmrq)
Mul($open,$pctchg)
Sum($preclose,40)
Add(Log(Div(Mul(Abs(Greater(Add(Constant(5.0),$pcfncfttm),Abs(Ref($psttm,30)))),$pctchg),$volume)),Corr($pctchg,$volume,10))
Mul(Add($close,$pctchg),Sub(Constant(-5.0),Log($pettm)))
Corr(Corr($pcfncfttm,$vwap,20),$close,40)
Max(Mul(Constant(0.01),$turn),30)
$turn
$pcfncfttm
$low
Log(Greater($pbmrq,Corr($vwap,Abs(Mul($pbmrq,Mul(Constant(-30.0),$open))),40)))
$vwap
Cov(Abs($psttm),Mul(Less(Constant(-5.0),$low),$amount),50)
$vwap
Log(Sub(Sub(Add(Mad($open,50),Mad($amount,30)),Constant(-10.0)),Greater(Abs($amount),Constant(30.0))))
Sum(Min(WMA($preclose,40),50),40)
$high
Mul($open,$vwap)
Add(Constant(10.0),Log(Std(Sum(Sub($volume,$amount),40),30)))
$pcfncfttm
$low
Add($pcfncfttm,Less($amount,Greater($close,Constant(5.0))))
$vwap
Add(Sub(Constant(-2.0),$close),Mul(Constant(-0.5),Add(Abs(Log(Mean($pcfncfttm,30))),Constant(-30.0))))
$amount
Std(Add(EMA(Div(Add($pcfncfttm,Constant(5.0)),Constant(-5.0)),30),$open),40)
$pctchg
Add(Constant(2.0),$low)
$amount
$close
Sub(Constant(10.0),$open)
Mul($psttm,$high)
WMA($preclose,40)
Abs($preclose)
Mad(Corr($amount,$open,40),40)
$pctchg
Med(Sum(Mul($pbmrq,Mul(Constant(5.0),Sub(Greater(Corr($close,Add($psttm,Log($pbmrq)),40),$close),Constant(-0.01)))),50),30)
Add(Constant(-0.5),Corr($pctchg,$pcfncfttm,20))
$vwap
Mad($open,10)
Div(Div(Constant(-0.5),Abs(WMA(EMA($preclose,40),20))),$pcfncfttm)
$vwap
$close
Add($pctchg,Constant(5.0))
$psttm
Sum(Add(Constant(-5.0),$vwap),50)
Sub($psttm,Div(Std(Less(Abs(Add($pctchg,Constant(0.5))),$pctchg),40),Mul($pettm,Constant(5.0))))
Mean($amount,20)
Cov($pctchg,$amount,10)
$amount
Div(Constant(30.0),Mul(Mad(Mean($pctchg,40),10),Constant(-10.0)))
$psttm
Corr($volume,Add($pcfncfttm,$low),50)
$open
Sub(Constant(2.0),$pcfncfttm)
$vwap
Mad($open,40)
Sub($volume,$close)
Sub($pctchg,Mul(Sub($turn,Constant(-1.0)),Constant(-10.0)))
Log($open)
$pbmrq
Mad(Corr(Corr($psttm,$pcfncfttm,20),$high,30),50)
Less($vwap,$pctchg)
Ref($low,40)
$pcfncfttm
Add(Constant(-30.0),Mul(Cov($preclose,$turn,50),$pcfncfttm))
Mean(Sub(Sub(Constant(10.0),$pcfncfttm),$pbmrq),10)
Sub(Constant(0.01),Add(Log(Mad($high,50)),$amount))
$pctchg
$amount
Delta($close,40)
Div(Constant(-0.5),Mul(Mad($close,50),Greater(Constant(-10.0),Log(Med($low,30)))))
Log(Abs(Mul(Less(Constant(-10.0),Div($close,$amount)),$close)))
Log(Sub(Constant(5.0),$psttm))
$pcfncfttm
Add(Constant(-0.5),Mul(Mean(Mul($pctchg,$amount),20),$preclose))
Sub(Constant(-10.0),$pbmrq)
$turn
Sub(Add(EMA(Abs($vwap),20),Add(Add($close,$pcfncfttm),Constant(-5.0))),Div($open,Add(Log($amount),$pctchg)))
Corr($pcfncfttm,Abs(Mean($turn,40)),40)
$pcfncfttm
$low
$pettm
Div(Constant(-5.0),$high)
$low
$pctchg
Med(Mul(Constant(-0.01),Delta($volume,30)),40)
$amount
Mad($amount,10)
Mean(Sub(Constant(2.0),Add($turn,Abs(Log(Mul(Mad($pettm,20),Add($open,Less(Greater($vwap,Constant(-30.0)),$high))))))),50)
Corr($psttm,$amount,30)
$preclose
$close
$turn
Mul($pctchg,$preclose)
$pctchg
$vwap
$vwap
$open
Abs(Log($pcfncfttm))
Add($volume,$volume)
Add($pcfncfttm,Div(Mad(Div(Add($preclose,$preclose),$pbmrq),40),Delta($vwap,20)))
$psttm
Mul(Div(Sub(Constant(-5.0),Log($amount)),$turn),$open)
Log($pbmrq)
$close
Mean(Less(Corr(Div(Constant(10.0),Mul($volume,$pcfncfttm)),$amount,50),Add($pcfncfttm,Add(Constant(2.0),Mean($low,40)))),40)
$vwap
Sub(Constant(0.01),Sum(Add($amount,Corr(Mad(Log($pbmrq),40),$close,40)),10))
$pettm
Add(Less(Constant(-1.0),Add(Abs($close),Mul(Constant(-5.0),Sub($pettm,Constant(-0.5))))),$pctchg)
Ref(Div(Constant(-0.01),$high),40)
$preclose
Mul($open,Greater(Constant(5.0),$open))
$pcfncfttm
$volume
$pettm
Add(Constant(10.0),$turn)
$pctchg
$pctchg
$vwap
$amount
$pcfncfttm
Min($psttm,20)
$close
$pctchg
Mul(Add(Constant(-10.0),Mul(Add(Less(Log($pctchg),Constant(-10.0)),$amount),$pcfncfttm)),Abs(EMA(Log($open),50)))
$close
Sum(Mul(Add($vwap,Add($pettm,Constant(-10.0))),$vwap),20)
$close
$pcfncfttm
Add($open,Add(Constant(-10.0),Mean($high,40)))
$pcfncfttm
Sum($turn,40)
Mean(Delta(EMA(Sub($turn,$pbmrq),30),50),40)
Delta($pctchg,40)
Sub(Constant(-0.5),Var(Corr($pbmrq,$pettm,30),40))
Add(Greater(Constant(2.0),$pcfncfttm),$low)
$pbmrq
$vwap
$vwap
Ref(Std(Abs($amount),40),40)
$pctchg
Add(Constant(10.0),Div($pcfncfttm,$amount))
$close
Div(Constant(-30.0),$volume)
Mul(Constant(30.0),EMA(Mul($pctchg,Add(Sub($turn,Less($close,Constant(-10.0))),Mul(Log(Abs($volume)),Add($turn,Constant(-10.0))))),40))
Sum(Mul($vwap,Add($pettm,$vwap)),40)
$pcfncfttm
Sum($vwap,50)
$pctchg
$amount
$amount
$open
$vwap
Log($close)
$close
$turn
Add(Mul(Add($pctchg,Mul($close,$high)),$pctchg),Constant(1.0))
Sub($high,$amount)
Log($low)
Less(Sub(Constant(30.0),$pctchg),Add(Constant(-0.01),Abs($psttm)))
Mean($pctchg,10)
Var($low,30)
$pctchg
$psttm
$pcfncfttm
Max(Add(Std($amount,30),Constant(-2.0)),20)
Add(Constant(5.0),Mean($preclose,40))
Less(Add($high,$turn),$amount)
$psttm
Mad(Mean($vwap,30),40)
$close
Corr(Sub(Add(Constant(-10.0),$pettm),Add(Constant(2.0),$low)),$preclose,50)
Mul(Constant(1.0),$amount)
$pcfncfttm
Div(Less(Constant(-5.0),$pbmrq),Less(Log(Div($close,$preclose)),$amount))
Cov($close,$pcfncfttm,50)
Sub(Constant(-10.0),Add(Abs(Abs($pettm)),Mul(Med($amount,30),$pcfncfttm)))
Corr(Sub($turn,$preclose),$pbmrq,50)
Log(Add(Constant(-10.0),Med(Mean(Cov($amount,Abs($open),40),40),30)))
Abs($high)
$pctchg
$close
Log($amount)
$preclose
Log($close)
Add(Add($amount,$pbmrq),$preclose)
Sub(WMA(Abs($pettm),40),Log($amount))
$pcfncfttm
Add(Mul(Constant(1.0),$open),$pbmrq)
$high
Log($vwap)
$vwap
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/new_hs300_200_5_20240107114313/22528_steps
-----------------------------------------
| pool/                   |             |
|    best_ic_ret          | 0.24        |
|    eval_cnt             | 374         |
|    significant          | 161         |
|    size                 | 200         |
| rollout/                |             |
|    ep_len_mean          | 5.79        |
|    ep_rew_mean          | 0.0276      |
| test/                   |             |
|    ic                   | 0.0414      |
|    rank_ic              | 0.0293      |
| time/                   |             |
|    fps                  | 9           |
|    iterations           | 11          |
|    time_elapsed         | 2433        |
|    total_timesteps      | 22528       |
| train/                  |             |
|    approx_kl            | 0.019062348 |
|    clip_fraction        | 0.272       |
|    clip_range           | 0.2         |
|    entropy_loss         | -2.83       |
|    explained_variance   | 0.112       |
|    learning_rate        | 0.001       |
|    loss                 | -0.227      |
|    n_updates            | 100         |
|    policy_gradient_loss | -0.0299     |
|    value_loss           | 0.16        |
-----------------------------------------
$amount
Add(Delta(Log(WMA($amount,40)),40),Div($pettm,Constant(-5.0)))
$amount
Mul(Constant(-0.01),Add($vwap,$pctchg))
EMA(Less($pcfncfttm,Mad(Mul(Constant(10.0),Greater(Abs($close),$pbmrq)),10)),10)
$pcfncfttm
Mul($turn,Abs(Cov($open,Ref(Max($pctchg,40),40),40)))
Mul(Constant(-0.5),$pettm)
Greater(WMA(Add(Sub($volume,$pcfncfttm),Constant(5.0)),10),$pcfncfttm)
Sum(Less($low,Abs($volume)),50)
Std(Sub(Constant(-10.0),$pcfncfttm),40)
Mul(Constant(5.0),Sub(Mean(Log(Sub($pctchg,$amount)),50),Ref($vwap,40)))
Sub(Greater(Constant(-5.0),Sub(Delta($pctchg,20),$turn)),$pcfncfttm)
$psttm
$pcfncfttm
Sub(Mean($pctchg,40),Div(Constant(-5.0),Sub($open,$turn)))
Sub(Constant(0.01),Corr($amount,$pcfncfttm,10))
$psttm
$vwap
Add(Less(Constant(5.0),$pettm),$pettm)
$pctchg
$pbmrq
Div(Constant(-5.0),$preclose)
$high
$pcfncfttm
$amount
$turn
$close
$amount
$turn
Mad(Less($psttm,Mul(Constant(-0.01),Log($close))),30)
Mul(Mul($close,Mean(Mul(Add($pctchg,Corr(Delta($pcfncfttm,40),$amount,50)),$pettm),20)),Constant(-10.0))
$vwap
Delta(WMA($pctchg,30),20)
Div(Constant(0.5),Mean($amount,40))
Less(Div(Mean(Abs(Mean($amount,40)),20),Constant(-0.01)),$psttm)
Mul(Mul(Mul(Constant(0.01),$high),Div(Mul(Div(Greater($volume,$open),$high),$pctchg),Constant(0.01))),Constant(-5.0))
$close
$high
Min($open,10)
$close
Div(Mul(Log(Mad($psttm,40)),Constant(-0.5)),$close)
$pettm
Corr(Log(Med($pcfncfttm,30)),WMA($close,50),10)
$pctchg
Add($pcfncfttm,Constant(30.0))
$high
Mad(Sub(Constant(0.01),Corr($preclose,$open,40)),40)
Add(Max(Mean(Add(Mul(Constant(-10.0),Sub($pcfncfttm,Log($psttm))),Div($pettm,Constant(-0.01))),10),50),Greater(Constant(-5.0),$pctchg))
Mul($amount,Constant(-5.0))
$pettm
Mad(Add(Constant(1.0),$pbmrq),40)
Mul(Constant(0.01),$amount)
$pcfncfttm
$preclose
Log(WMA($vwap,50))
Sub($pbmrq,$high)
Sub(Constant(-5.0),$vwap)
$pettm
Med(Mad($low,40),40)
Mul($amount,$close)
Mul(Mul(Constant(30.0),$turn),Mul($amount,Constant(-10.0)))
$turn
Greater(Mul($psttm,Constant(-30.0)),$pcfncfttm)
Delta(Mul(Less(Sub($pettm,$high),Constant(-10.0)),Add($pcfncfttm,Less($pcfncfttm,Abs($preclose)))),40)
Div($amount,Div($pctchg,$psttm))
$volume
Add(Constant(5.0),$open)
Log($pcfncfttm)
Mul($turn,Constant(-0.01))
Corr($volume,Sub(Constant(-0.5),Abs(Sub($pctchg,Constant(10.0)))),30)
$preclose
$amount
Log(Add($volume,Med(Var(Delta($low,40),40),10)))
Abs(Sub(Less(Log($vwap),$open),$open))
Mul(Mad(Mul(Constant(0.01),$pctchg),30),$pcfncfttm)
Sub(EMA($pcfncfttm,10),Constant(-10.0))
$pbmrq
$open
Add(Max($volume,40),$vwap)
$pcfncfttm
Add(Constant(0.01),$low)
Mad(Sub(Constant(5.0),$close),30)
Sub(Abs(Add(Sub(Constant(-5.0),$preclose),$turn)),Log($vwap))
Mad(Max(Mean(Abs($amount),40),40),30)
Mean($close,20)
$turn
$close
Delta($volume,10)
$amount
Cov($psttm,Delta(Abs($amount),20),30)
$pcfncfttm
Sub(Cov($turn,Corr($psttm,$pettm,10),30),Mul($pctchg,Constant(-5.0)))
Sub(Constant(-0.5),$pcfncfttm)
Add(Max(Sub($psttm,$amount),40),$pctchg)
WMA(Add(Constant(-5.0),Sum(Add(Ref($high,20),Constant(-0.5)),40)),30)
$pctchg
$high
Corr($pbmrq,Mad($vwap,40),40)
Add(Abs(Ref($vwap,40)),Var($open,30))
Abs(Sum($psttm,40))
$preclose
Mad(Min(Min(Add(Add(Div(Constant(5.0),$psttm),Mul($turn,$pcfncfttm)),$close),20),50),10)
Min(Sub(Constant(-5.0),$vwap),10)
Sub(Constant(5.0),$pctchg)
$vwap
Div(Constant(-10.0),$pcfncfttm)
Log(Corr($pbmrq,Mean($pbmrq,20),40))
Mad($low,40)
Mul(Constant(-5.0),$pcfncfttm)
Add(Constant(-0.01),Abs($preclose))
Add($pbmrq,Constant(-10.0))
Add(Sum(Sub(Add($amount,$vwap),Add(Abs(Sub(Constant(-10.0),$psttm)),Less(Delta($turn,50),Constant(-0.5)))),10),Log($vwap))
$volume
Max(Ref(Add(Mean($pbmrq,40),$pctchg),10),50)
Mul(Delta(Add(Constant(5.0),$psttm),40),Constant(0.01))
$turn
Delta(Add(Less(Constant(30.0),$pctchg),Mad($preclose,20)),50)
$pcfncfttm
$pctchg
Mul($pbmrq,$pctchg)
$amount
Less($close,Mean(Sub(Constant(-0.01),$open),40))
Less($pbmrq,$open)
Add(Constant(5.0),Abs(Add(Abs($psttm),Constant(-2.0))))
Add(Constant(-5.0),$vwap)
Corr($amount,$open,30)
$amount
Sub(Constant(-0.5),$pcfncfttm)
Max(Add(Abs(Mad(Mean($psttm,40),40)),Sub($pctchg,$close)),30)
$pctchg
$amount
Delta(Add(Constant(-0.01),$preclose),20)
Abs(Abs($vwap))
$psttm
Mad(Add(Constant(-10.0),$pcfncfttm),40)
Abs($turn)
Mean($pctchg,10)
Add($close,Log(Sub($amount,Constant(-0.5))))
$volume
Add($vwap,Constant(-30.0))
$high
Mean(Med(Sub(Constant(-0.5),$high),30),40)
$pctchg
Mul(Sub(Constant(-10.0),$open),Log($pctchg))
$close
Add(Constant(-30.0),Std(Mul(Add(WMA($turn,20),$pbmrq),$amount),50))
Mad(Mul($pcfncfttm,Constant(-5.0)),30)
Add(Constant(-30.0),Corr(Abs($open),Add(Constant(-10.0),Log(Sub($amount,$psttm))),50))
Max(Div(Mul(Sum(Var(Add(Greater($pbmrq,Abs($pbmrq)),$vwap),10),20),Constant(-5.0)),Constant(1.0)),40)
$preclose
Sub(Constant(30.0),$pbmrq)
Mul(Constant(-5.0),Mul(Mul(Less(Std($pcfncfttm,30),$pbmrq),Constant(-30.0)),$volume))
$amount
Sub($turn,Constant(0.01))
Add(Std($pcfncfttm,40),Constant(-5.0))
Add(Constant(0.01),Log($pctchg))
Mul($pcfncfttm,Add(Add(Div($amount,$amount),Sub(Mul($psttm,Constant(30.0)),Mul($close,$pctchg))),Log($turn)))
Div(Constant(1.0),Sum($preclose,10))
Less($open,$amount)
$pettm
$low
Corr(Sum(Med(Div(Constant(-5.0),$pctchg),10),40),$open,10)
$pcfncfttm
Med($pcfncfttm,10)
EMA($psttm,40)
Add(Greater(Constant(2.0),$pettm),$turn)
Less(Add(Sub(Constant(5.0),Abs($high)),$pctchg),$vwap)
$high
$low
Div(Mul(Constant(-5.0),Add($amount,Constant(30.0))),$high)
$pcfncfttm
Mad($pctchg,10)
$preclose
Log(Cov(Add(Constant(-10.0),$open),$amount,50))
Sum($pettm,30)
$close
WMA($amount,10)
Less($vwap,$pbmrq)
$vwap
Add(Sub(Constant(-0.5),$amount),$vwap)
Div($pbmrq,$turn)
$pctchg
Mul(Constant(-30.0),Sub(Greater($volume,$preclose),Greater($preclose,Constant(-5.0))))
Add(Constant(-0.01),Less(EMA($amount,30),$high))
Mul(Mul($turn,WMA(Log(Add($psttm,Constant(-10.0))),20)),$psttm)
$amount
Std(Mean($open,10),40)
Std(Div($preclose,$pbmrq),20)
Add($pcfncfttm,Mad($amount,20))
$pettm
Add($vwap,$low)
$turn
Corr(Ref($volume,20),Ref(Sum($high,30),50),30)
Sub(Constant(-5.0),Log($pcfncfttm))
$pcfncfttm
$psttm
Add(Div(Constant(-0.5),EMA(Mad(WMA($amount,40),40),40)),Log(Corr($pcfncfttm,Mul($pcfncfttm,Constant(-30.0)),20)))
Abs(EMA($pcfncfttm,40))
Sub(Add(Cov(Add($psttm,Abs(Add($pcfncfttm,$turn))),$pcfncfttm,10),Constant(-30.0)),$psttm)
$pcfncfttm
Sub(Less(Sub(Add(Constant(10.0),$preclose),Less($amount,Greater($amount,Mul($pcfncfttm,$turn)))),Less(Constant(-0.01),$pettm)),$close)
$close
Add(Constant(5.0),$amount)
Max(Mul(Constant(-5.0),Corr($vwap,$pctchg,10)),10)
Abs(Abs($close))
Sum(Med($pctchg,30),50)
Corr($turn,Log(Add(Constant(0.01),Mul($pbmrq,$amount))),20)
Less(Mul(Constant(2.0),Log($open)),$pcfncfttm)
Log($pettm)
WMA($pctchg,30)
$vwap
Mad(Mean(Sub(Constant(-10.0),Abs($pctchg)),10),40)
Add(Less($pcfncfttm,Constant(-0.5)),$volume)
$close
Log($vwap)
$open
Sub($turn,$preclose)
Med(Sub(Constant(5.0),$vwap),20)
Std($pctchg,40)
$close
$amount
Sum(Add($pctchg,Div($amount,Less(Add(Constant(2.0),$open),$pbmrq))),10)
Add($close,Delta($high,10))
Mul(Constant(-10.0),Mul($pctchg,$preclose))
Min(Mean($amount,20),50)
Sum($pettm,40)
$volume
WMA($open,20)
Add(Constant(-5.0),$high)
$low
Add(Constant(-10.0),Med($pctchg,40))
$low
Cov(Sub(Constant(5.0),Mul(WMA($close,40),Constant(-30.0))),$open,10)
$amount
$amount
Corr(Delta($amount,50),$pctchg,20)
$pettm
Mul(Sum($vwap,40),Constant(-10.0))
Add(Constant(1.0),Less($pctchg,$high))
$vwap
Sub(Less($open,Constant(30.0)),Std($pettm,50))
$close
Delta(Add(Add(Sub(Std($open,40),Constant(5.0)),Constant(10.0)),Mad(Less($vwap,Add(Std($preclose,30),Constant(0.01))),40)),30)
$pctchg
Sub(Sum($pctchg,40),Sub(Sum(Log($preclose),10),$preclose))
$close
$preclose
$high
$volume
Sub(Constant(-30.0),Mean(Mean($vwap,10),50))
Mul(Sum(Sub(Constant(0.01),$amount),40),Constant(5.0))
$pctchg
$close
Mul(Constant(2.0),$amount)
$pcfncfttm
$pctchg
Abs($amount)
Log(Log(Sum($volume,40)))
WMA(WMA(Add(Constant(-1.0),Mul(Mad(Abs($pettm),50),$amount)),10),40)
$turn
$open
Var($close,20)
Sum(Ref(Abs($pbmrq),50),40)
Cov($low,$close,50)
Log(Greater(Mad($amount,10),$turn))
Log($turn)
$turn
$volume
Greater(Ref($preclose,40),Mul($pcfncfttm,Constant(-10.0)))
Less($pcfncfttm,$pctchg)
Mean(Mul(Less(Constant(30.0),$turn),$vwap),40)
Less($high,Corr($turn,$close,10))
$pettm
Log(Sum($preclose,40))
Sum(Add(Constant(10.0),$vwap),40)
Mad($pctchg,10)
Log($amount)
$pbmrq
Mul(Constant(10.0),$pctchg)
Less(Abs(Abs(Corr(Delta($amount,30),$open,30))),Add($preclose,Constant(2.0)))
Mul(Constant(-10.0),Sub(WMA($psttm,40),Div($vwap,Add(Constant(10.0),$pbmrq))))
Add($high,Less(Constant(-2.0),$pcfncfttm))
Mul(Constant(5.0),$open)
Cov($amount,Add(Mad($preclose,20),Constant(-0.5)),50)
Var($close,20)
EMA(Mad(Log($volume),40),30)
Max(Mul(Constant(5.0),Mul($open,$amount)),40)
$pbmrq
$pettm
$high
Sum($vwap,50)
$vwap
Less(Mad($pctchg,40),Log($amount))
$volume
$pbmrq
$preclose
$psttm
Sub($psttm,Constant(-5.0))
Mul(Abs(Mul(Add(Sub(Mean(Sub($pcfncfttm,Add(Constant(-30.0),$open)),30),$pcfncfttm),$vwap),$pettm)),$pcfncfttm)
Div(Greater(Constant(5.0),$open),$pcfncfttm)
$pcfncfttm
Add(Cov($open,Abs($low),30),Constant(0.01))
Abs($open)
Sum(Add(Constant(-5.0),Abs(Log($psttm))),40)
$open
Div(Div($pcfncfttm,Constant(-0.01)),$pcfncfttm)
$pctchg
Less(EMA(Mean($pcfncfttm,50),40),$volume)
Abs($volume)
Sub($pctchg,Log($pcfncfttm))
EMA(Abs($pettm),10)
Div(Var(Mul(Constant(-0.01),$high),40),Greater($psttm,$pcfncfttm))
Max($close,40)
Sub(Cov(Mul($close,Constant(-10.0)),Log(Abs($pbmrq)),20),$close)
Mul(Mad($volume,20),$close)
Log(Sub(Constant(5.0),$pcfncfttm))
$amount
Sum($low,40)
Add($open,Constant(-10.0))
Add(Constant(-30.0),$open)
Add(Constant(-5.0),$high)
Sub(Constant(0.01),$pcfncfttm)
$pcfncfttm
$close
$vwap
$pbmrq
$pcfncfttm
Sum(Log(Add(Constant(-10.0),$psttm)),40)
Mul(Constant(5.0),$turn)
$pbmrq
$psttm
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/new_hs300_200_5_20240107114313/24576_steps
-----------------------------------------
| pool/                   |             |
|    best_ic_ret          | 0.255       |
|    eval_cnt             | 544         |
|    significant          | 187         |
|    size                 | 200         |
| rollout/                |             |
|    ep_len_mean          | 5.88        |
|    ep_rew_mean          | 0.0522      |
| test/                   |             |
|    ic                   | 0.0411      |
|    rank_ic              | 0.0271      |
| time/                   |             |
|    fps                  | 6           |
|    iterations           | 12          |
|    time_elapsed         | 3770        |
|    total_timesteps      | 24576       |
| train/                  |             |
|    approx_kl            | 0.015273859 |
|    clip_fraction        | 0.201       |
|    clip_range           | 0.2         |
|    entropy_loss         | -2.74       |
|    explained_variance   | 0.0586      |
|    learning_rate        | 0.001       |
|    loss                 | -0.238      |
|    n_updates            | 110         |
|    policy_gradient_loss | -0.0229     |
|    value_loss           | 0.124       |
-----------------------------------------
Mul(Constant(0.01),Less($low,$close))
$amount
Add(Constant(-5.0),Mean(Ref($pcfncfttm,40),50))
$psttm
Sum(Med(Abs($pbmrq),30),20)
Add(Constant(10.0),Sum(Mad($low,10),40))
Mul(Less(Constant(-5.0),$pcfncfttm),Log($preclose))
$amount
Sub(Greater(Mul(Sub(Constant(-10.0),$vwap),$amount),Constant(-5.0)),$volume)
Div(Log($psttm),Abs(Sub($vwap,Add($pettm,$pctchg))))
Mul(Mul(Constant(-2.0),$turn),Div($pcfncfttm,Constant(-2.0)))
Mean(Sub(Constant(-1.0),Add(Sum(Abs($close),40),Constant(-1.0))),10)
Div(Less(Constant(1.0),$turn),Ref($pcfncfttm,50))
$volume
Mad($turn,30)
$pettm
Div(Log($close),Add($pbmrq,Constant(-1.0)))
Mul(Add(Constant(2.0),Sub(Abs($preclose),$pbmrq)),$open)
$vwap
Sub(Constant(-5.0),$pcfncfttm)
Mul(Less(Add(Constant(-0.5),Add($psttm,Mul($volume,Add(Constant(-5.0),Max(Div($amount,$close),40))))),Constant(5.0)),$psttm)
Add(Constant(-2.0),Mul($close,$turn))
Ref(Mad(Less(Mul(Min(Log(Mul(Constant(0.01),$pbmrq)),30),Constant(-0.5)),$close),40),50)
$psttm
$amount
$pctchg
$vwap
$volume
$pctchg
$high
$open
Add(Sub(Constant(-5.0),$turn),$pbmrq)
Delta($pcfncfttm,30)
Std($amount,40)
Mean(Sub(Less(Constant(0.01),Abs($pbmrq)),$amount),20)
$low
$pcfncfttm
Sum(Mul(Add($pctchg,$close),Constant(5.0)),30)
Sub(Constant(-5.0),Abs(EMA(Abs(Add($pbmrq,Constant(-10.0))),40)))
Mul($vwap,$open)
$psttm
WMA(Add(Constant(-10.0),$pcfncfttm),40)
Sum(Corr(Add(Abs(Add(Sub(Constant(-10.0),$pettm),Constant(-0.5))),$open),$pbmrq,50),10)
Mean($turn,20)
$pctchg
$open
WMA($amount,40)
Sub(Constant(-10.0),$open)
$low
Var(Log(Sum(Std(Add($turn,Mul($pcfncfttm,Constant(-2.0))),40),40)),50)
Abs($pcfncfttm)
Mad($pctchg,50)
Med(Mul(Constant(0.01),Sum($amount,30)),50)
Sub(Constant(-5.0),Mad(Greater($pctchg,$volume),30))
$vwap
Mad($open,20)
$vwap
Log($pctchg)
$preclose
Add(Div(Constant(30.0),Add(Add($close,Add($pcfncfttm,Constant(-30.0))),$amount)),Constant(-0.5))
Sum(Log($amount),40)
$pctchg
Div(Constant(2.0),$pbmrq)
Div(Constant(-0.01),Div($pettm,$pctchg))
$preclose
Var($psttm,30)
$volume
Sub(Constant(-1.0),Abs(Log(Std(Mul(Mad($pcfncfttm,40),$pcfncfttm),40))))
Med(Abs(Mul(Add($pbmrq,Sub($pcfncfttm,Constant(-5.0))),$volume)),30)
Max($close,10)
Log(Sub(Constant(-1.0),$amount))
Div(Constant(1.0),Var(Std($low,40),10))
Med($psttm,50)
Div($vwap,Constant(-5.0))
Add($open,Greater(Sub(Log($pctchg),$high),Mul($close,Constant(-0.5))))
Add(Med($close,20),Constant(2.0))
Log($close)
$pettm
$high
$pctchg
$open
$low
$turn
Sum($pcfncfttm,50)
Add(Constant(0.5),$high)
$pcfncfttm
$amount
$volume
Add(Constant(-2.0),$open)
$pbmrq
$high
Div(Add(Constant(-0.01),$preclose),Greater($pctchg,Constant(1.0)))
$vwap
Add(Div(Mul(Constant(5.0),EMA($pbmrq,30)),Constant(-30.0)),Less(Constant(-0.5),Delta(Log($pctchg),10)))
Delta(Add(Add(Constant(-2.0),Abs(Abs(Mean($turn,40)))),$vwap),40)
Delta(Mul(Max(Div(Med($pcfncfttm,40),$pcfncfttm),40),Constant(-0.5)),50)
Abs(Div(Log(Abs(Mul(Constant(10.0),Log(Med($pctchg,10))))),Constant(-0.01)))
Sub(Sub(Constant(5.0),$open),$psttm)
Sub(Constant(-30.0),$amount)
Mad(Mean($pcfncfttm,40),10)
$pcfncfttm
Log($pcfncfttm)
$close
Sub(Constant(-10.0),$preclose)
$amount
Sub(Log(Sub(Log(Abs($pbmrq)),Delta($open,50))),$open)
Div(Constant(-5.0),Mul(Sum(Greater(Delta(Mad(Sum($turn,50),40),50),$pctchg),20),$vwap))
Sub(Constant(-10.0),Add(Sub(Greater($pbmrq,Constant(-2.0)),$amount),$open))
$pettm
Div(Add($close,Constant(-0.01)),$turn)
$high
Add(Mul(Less(Sub(Mul($open,$volume),$pctchg),Mul(Constant(0.01),Div($close,Constant(-10.0)))),Mad(Med($pcfncfttm,50),50)),$vwap)
$amount
Ref(Less(Sub(Less(Greater($close,Constant(0.01)),$vwap),Mean(Mad($close,40),10)),$pcfncfttm),20)
$close
Mul(Constant(-10.0),Mul($amount,Div(Constant(5.0),$amount)))
$preclose
Corr(Add(Constant(-10.0),$open),Div(Constant(-0.5),Corr(Sub(Sum($turn,40),$close),$amount,40)),10)
Add(Less(Log($volume),Constant(-30.0)),$open)
Mul(Less(Less(Constant(-1.0),$psttm),Add(Sub(Div(Abs(Div($close,$vwap)),$vwap),$vwap),$psttm)),$turn)
$amount
Mean(Add(Less(Constant(30.0),Corr($low,$close,40)),$turn),50)
$volume
$open
Sub(Add(Sub(Constant(-5.0),$pettm),$psttm),$open)
$psttm
$open
Mul(Constant(10.0),$turn)
Mul(Constant(5.0),$pcfncfttm)
$pbmrq
Sum($open,50)
Add($pcfncfttm,Log(Add($amount,Constant(5.0))))
Mul(Max(Max($open,50),40),$pettm)
$open
Delta(Sum(WMA($pettm,10),40),50)
Abs($high)
Add(Constant(-10.0),Sub($open,Sub(Constant(10.0),$close)))
Var(Abs(Sub(Mean($pcfncfttm,10),Constant(-0.5))),40)
Log(Add(Add(Constant(2.0),Mul($open,$preclose)),Add($pcfncfttm,Sub(Constant(-1.0),$close))))
Add(Constant(5.0),Add($preclose,$vwap))
Mul(Constant(-5.0),Mean($pbmrq,50))
Div(Less(Constant(1.0),Sum(Mul(Mul($preclose,Constant(-0.5)),Greater(Constant(5.0),Add(Mean($close,20),$amount))),10)),$open)
$psttm
Sub(Constant(0.01),Mul(Div(Mul($pctchg,Mul(Constant(-1.0),$vwap)),$pctchg),Log($vwap)))
Log($vwap)
$vwap
Mul($amount,$turn)
Abs(Ref($turn,10))
Mul(Log($high),Abs($pcfncfttm))
Sub(Mul(Less(Constant(0.01),$psttm),$close),Sub(Constant(30.0),$psttm))
Sum(Min(Cov($pctchg,$pettm,30),20),40)
Add(Constant(-0.5),Sum($psttm,50))
$preclose
Mad($pbmrq,20)
$vwap
$preclose
$preclose
Mul($low,Constant(1.0))
$high
Abs($pctchg)
Ref(Delta(Mul($pbmrq,Constant(-5.0)),10),40)
Abs(Sum(Sub(Greater(Constant(-30.0),$vwap),$pbmrq),30))
Mul(Less(Constant(-10.0),Std($psttm,40)),$pcfncfttm)
Std(Mul($vwap,$pbmrq),40)
Cov(Sub(Constant(-2.0),Sub($amount,Constant(10.0))),$preclose,10)
Mad($psttm,40)
Mean($vwap,30)
Log(Add(Constant(-5.0),$volume))
$volume
$low
Add(Abs($pbmrq),Constant(5.0))
$low
Div(Log($pctchg),$preclose)
Add(Mad($amount,40),Constant(1.0))
$pctchg
$vwap
Div(Constant(-0.01),Corr($vwap,Abs(Div($pctchg,Sub($pctchg,$turn))),40))
$low
Less(Log($open),Add(Less(Constant(-0.5),Add(Less($pctchg,Constant(-0.01)),Log(Mean($preclose,40)))),$vwap))
$psttm
Abs($pbmrq)
Mad($turn,10)
WMA(Abs(Sub($turn,Mul(Constant(-0.01),Add($open,$open)))),40)
$pettm
Max(Add(Constant(-10.0),Add($pcfncfttm,Add($pbmrq,$psttm))),40)
$amount
EMA($open,20)
Add(Less($pbmrq,Constant(-5.0)),$close)
Max(Min(Mul(Min(Div(Constant(-5.0),$pctchg),50),Constant(-0.01)),50),10)
$vwap
Med(Abs(Sub(Constant(-5.0),$low)),40)
$psttm
Sum(Div(Sum($amount,50),Sub($amount,$pctchg)),40)
$amount
Max(Mean(Greater($pettm,Max($turn,30)),40),10)
Med(Sub(Constant(0.5),$pctchg),50)
Div(Constant(10.0),Div($pctchg,Greater($high,Constant(-0.01))))
Mul(Mean(Sub(Constant(-10.0),Less($low,$pbmrq)),10),$high)
Log(Mul(Constant(-10.0),$pettm))
Abs(Div(Less(Constant(-30.0),Delta($psttm,50)),$pbmrq))
Log($pcfncfttm)
$preclose
Add(Constant(-5.0),Delta(Add($close,Constant(-0.5)),40))
Min($open,40)
Sub(Mul($vwap,Constant(-30.0)),$turn)
$pbmrq
Add(Constant(-10.0),Log(Add(Log($open),$preclose)))
Log(Log($preclose))
$vwap
$amount
$psttm
Mul($pcfncfttm,Constant(0.5))
$vwap
$psttm
Add(Div($open,Constant(10.0)),Mad($vwap,40))
Log($vwap)
Sub(Less(Less(Constant(10.0),$vwap),Std($open,10)),$open)
Med(Mul(Constant(-0.01),$close),40)
$pctchg
Sub($turn,Sub($close,$preclose))
Less(Log(Add(Add(Mad(Sum(Log(Sum($pettm,10)),40),50),$pcfncfttm),$preclose)),Sub(Constant(30.0),$psttm))
Add(Constant(-0.01),Sub(Var($psttm,20),$open))
$psttm
$vwap
$pbmrq
Add(Constant(5.0),$pctchg)
Add(Constant(5.0),Std(Min($amount,10),50))
Sub($turn,Abs($turn))
Sub($high,$amount)
$preclose
Log(Sub(Constant(-0.5),$open))
Mad(Mul(Constant(-2.0),$psttm),30)
$close
$high
EMA($volume,20)
Add(Constant(30.0),$turn)
$amount
Mad($vwap,20)
Add(Sub($pctchg,$pctchg),Mad($high,30))
Sub(Constant(-1.0),$pcfncfttm)
Sum(Mul($vwap,Constant(-0.5)),40)
Abs(Mul(Sub($high,Constant(10.0)),$open))
$close
Abs($vwap)
Add(Add(Log(Abs(Log($high))),Constant(-2.0)),Constant(-5.0))
Mean($close,10)
$amount
$pcfncfttm
$psttm
Max(Sum(Sub(Sub(Mad(EMA(Sub(Sub($close,Constant(-0.01)),$pettm),40),20),Constant(-0.01)),$pbmrq),40),10)
Less($open,Max($low,50))
Mul(Constant(-5.0),Sum(Abs($psttm),40))
$high
Mad(Sum(Less(Abs(Add(Constant(-0.01),$volume)),Log($vwap)),50),20)
$close
Max($close,20)
Add(Sum(Mean($open,20),40),Constant(-0.5))
Sub(Add($psttm,Add(Delta($open,40),Log($pettm))),$pcfncfttm)
Sub(Mul(Constant(-0.01),Std($pctchg,10)),$close)
Mul($preclose,Mul(Mul($psttm,Abs(Add($amount,Mad(Sub($pettm,Max($pcfncfttm,40)),20)))),$pctchg))
Corr(Div(Add($close,$pettm),$pbmrq),$preclose,40)
$volume
Less($pcfncfttm,Log($amount))
Sub(Constant(-1.0),Less(Sub($high,$turn),Log(Abs(Sub($open,Constant(-0.5))))))
Sub($pctchg,Mul(Constant(-0.01),Greater($vwap,$vwap)))
Abs(Add(Log(Add(Constant(1.0),$turn)),Constant(2.0)))
Add(Constant(-1.0),$open)
Mul(Add(Constant(-5.0),Log(Log(Log(Sum($amount,20))))),Div(Constant(-5.0),Mad(Sub(Log($vwap),Constant(-5.0)),10)))
EMA(Corr($pcfncfttm,$turn,50),30)
Add(Corr($close,$amount,10),Greater($low,Add($close,$close)))
$high
$turn
Corr(Sub(Less(Constant(-1.0),$amount),Div($pcfncfttm,$pctchg)),$pctchg,40)
EMA(Add(Constant(-0.01),$turn),20)
Div(Constant(-0.5),Mean(WMA($high,30),20))
Mul(Mul(Mul($pbmrq,$close),Max($close,40)),Constant(5.0))
$pbmrq
EMA(Sum(Mul(Log(Add(Constant(-5.0),$vwap)),$vwap),10),40)
Log(Mul(Delta(Mad(Sum($preclose,40),40),40),Corr(Div($pbmrq,$preclose),Sub($pettm,Sub($pctchg,$pcfncfttm)),50)))
Sum(Greater(Add(Constant(-5.0),Sub($preclose,Mean($high,20))),Log($open)),20)
Add(Constant(-0.5),Add(Mad(Abs($amount),40),$close))
Add(Sub(Constant(-0.01),$pettm),Add(Med(Log($amount),10),Sub(Mul(Constant(-0.01),$pcfncfttm),Log($vwap))))
$open
Add(Mean(Add($psttm,Sub(Std(Mul($pctchg,Greater(Constant(-5.0),Max(Add($pctchg,$vwap),10))),40),$close)),10),$vwap)
$preclose
Sub(Constant(10.0),$preclose)
$psttm
Mad(Sub(Constant(5.0),$preclose),10)
Sub(Constant(-30.0),Mad($vwap,30))
$vwap
Sub($vwap,Constant(-10.0))
$turn
Abs(Mad($pcfncfttm,10))
Sum($preclose,10)
$pcfncfttm
Sum(Add(Add($vwap,Log($pbmrq)),Greater(Constant(-5.0),$preclose)),20)
$vwap
$preclose
Sub(Delta($turn,10),Med($pcfncfttm,20))
Std(Abs(Add(Constant(-5.0),Sum($vwap,40))),40)
$pbmrq
$close
$amount
$close
$pcfncfttm
Div(Constant(-1.0),Sub(Less(Abs(Mul($close,$psttm)),Constant(-10.0)),$high))
$pbmrq
Mad($high,30)
$low
Mad($vwap,20)
Mul(Constant(-0.01),Cov($vwap,$turn,30))
$pctchg
Mul(Constant(-0.5),Sub(Mean(Sub(Ref(EMA(Mul($amount,Mul($preclose,Constant(-5.0))),40),20),$open),40),$high))
$pcfncfttm
$pbmrq
Add(Constant(-1.0),$amount)
$close
$pbmrq
$pctchg
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/new_hs300_200_5_20240107114313/26624_steps
-----------------------------------------
| pool/                   |             |
|    best_ic_ret          | 0.264       |
|    eval_cnt             | 773         |
|    significant          | 199         |
|    size                 | 200         |
| rollout/                |             |
|    ep_len_mean          | 6.11        |
|    ep_rew_mean          | 0.19        |
| test/                   |             |
|    ic                   | 0.0453      |
|    rank_ic              | 0.0273      |
| time/                   |             |
|    fps                  | 4           |
|    iterations           | 13          |
|    time_elapsed         | 5339        |
|    total_timesteps      | 26624       |
| train/                  |             |
|    approx_kl            | 0.016802844 |
|    clip_fraction        | 0.288       |
|    clip_range           | 0.2         |
|    entropy_loss         | -2.73       |
|    explained_variance   | 0.0778      |
|    learning_rate        | 0.001       |
|    loss                 | -0.244      |
|    n_updates            | 120         |
|    policy_gradient_loss | -0.0135     |
|    value_loss           | 0.0937      |
-----------------------------------------
Add(Mad(Sub(Constant(2.0),EMA(Delta(Log(Log($pctchg)),40),40)),10),Constant(-30.0))
Add(Add($pettm,Sub(Less(Abs($pettm),Add($high,Add($close,Mul(Constant(30.0),$preclose)))),$psttm)),Constant(-0.5))
$amount
$turn
Delta(Mul(Constant(-2.0),Sum($vwap,40)),40)
$high
Log(Mul(Constant(2.0),$pctchg))
$amount
Delta($amount,40)
Log($low)
Add($high,$open)
Greater(Sub(Constant(-0.5),Div(Log(Abs($pcfncfttm)),Sub(Mean($pettm,40),$open))),$low)
$amount
$pctchg
$low
$pcfncfttm
Sub(Add(Constant(-0.5),Corr(Greater(Mean($volume,10),$amount),$vwap,40)),Add($turn,Log(Log($turn))))
$pctchg
Corr(Sub(Constant(0.5),$pcfncfttm),Sub($vwap,Log($high)),10)
Ref(Sub(Sub(Corr(Abs($turn),$low,40),Mul($psttm,Sub($amount,$close))),Sub($amount,$amount)),40)
$pbmrq
Std(Add(Less(Constant(0.5),$amount),$psttm),30)
$high
Add(Add(Mul(Constant(0.01),$pctchg),Abs($pbmrq)),Add($pcfncfttm,$pctchg))
$low
Sub(Constant(-30.0),$close)
Add(Constant(-10.0),Less($pbmrq,Log($preclose)))
Mul(Constant(-0.5),WMA($volume,10))
$high
Add(Mul(Constant(0.01),$psttm),Mul($pbmrq,$pctchg))
Abs(Log(Med(Mul(Constant(-10.0),$psttm),30)))
$open
$pctchg
Add(Log($pctchg),Less($volume,Log($close)))
$pctchg
$close
$close
Abs(Sub(Abs($pctchg),$psttm))
Log(Max(Sub(Constant(-2.0),$psttm),40))
Var(Log(Add(Div(Less(Mul(Constant(-30.0),$amount),Constant(5.0)),$turn),$amount)),30)
Log(Mul($vwap,Log(Log(Abs(Add($high,Constant(2.0)))))))
Sub(Mad(Sum($amount,10),50),$pettm)
Var(Sum(Mul($open,$vwap),40),20)
Mul(Sum(Mul(Div(Corr(Mul(Constant(30.0),$vwap),$pctchg,20),Constant(-1.0)),$low),50),$pctchg)
Abs($pbmrq)
Abs(Sub(Constant(-0.01),Add($pettm,Constant(0.01))))
$pctchg
$psttm
Log(Mul(Constant(-10.0),Log($pcfncfttm)))
Corr(Cov(Corr($psttm,$volume,50),$pctchg,40),Log($pbmrq),30)
$pcfncfttm
Sub(Mad(Add(Sum($pettm,10),$pbmrq),40),$psttm)
Sum($psttm,50)
Add(Mean(Max($pcfncfttm,50),50),Add(Add($pctchg,$vwap),Constant(2.0)))
Sum(Add(Std($high,30),Constant(-10.0)),40)
Mul(Less(Mad($amount,40),Log($vwap)),$psttm)
Div(Constant(-0.01),$volume)
Div($pcfncfttm,$preclose)
Sub(Mul($high,$close),Constant(10.0))
$pctchg
Div($pbmrq,$high)
Sub(Less($amount,Constant(5.0)),Add($close,Sum($preclose,40)))
$preclose
Sub(Constant(0.01),Mad($vwap,10))
Sub(Constant(-10.0),$vwap)
$close
$turn
Add(Add(Constant(-2.0),Sub(Div(Mean($amount,20),Constant(0.01)),Constant(-0.5))),Ref(Less($vwap,$pbmrq),40))
Sub(Less(Constant(-5.0),$amount),Log(Mean($volume,10)))
Mad(Var($close,20),40)
$pettm
Add(Constant(-0.01),Delta($high,40))
Mul(Sub($open,$close),Constant(10.0))
Delta(Mul(Abs($pctchg),Constant(-30.0)),20)
Ref(Greater($volume,Mul(Constant(0.01),Add(Sub($open,$psttm),Constant(-5.0)))),10)
Mul(Less(Constant(-0.01),$turn),$pbmrq)
Mul(Constant(2.0),$pbmrq)
Abs($amount)
$psttm
$open
$volume
$preclose
Add(Constant(-0.01),Mul($turn,$open))
Mean(Add(Sum(Mul(Constant(10.0),$vwap),40),Greater(Constant(0.01),$amount)),30)
Log(Med(Mul(Constant(1.0),Sub(Abs(Sub($amount,Constant(-30.0))),Constant(0.5))),40))
Log(Delta(Add(Greater(Constant(-0.01),$turn),$open),10))
Div(Greater(Add(Sum(Mul(Max($high,40),$pbmrq),50),$vwap),$pctchg),$psttm)
Mad($vwap,40)
Abs($psttm)
Abs(Sub(Sub($pcfncfttm,Constant(-1.0)),Add(Sum(Log($pcfncfttm),40),$amount)))
Abs($close)
$vwap
Div(Less(Greater(Less(Abs(EMA(Div(Sum($pcfncfttm,40),Constant(-2.0)),50)),Constant(5.0)),$pctchg),$vwap),Delta($high,40))
$close
Greater(Log(Add(Less(Mad(Abs($turn),40),$psttm),$preclose)),$pctchg)
Add($close,Constant(2.0))
$amount
Div(Add(Constant(-10.0),Mul($volume,$low)),$vwap)
Mul(Constant(1.0),Std(Var(Mul($preclose,Sub($vwap,Constant(0.01))),40),10))
Mul(Add(Log($amount),Constant(-10.0)),$amount)
Sum(Sum($pcfncfttm,50),40)
Abs($high)
Abs(Add($pbmrq,Mad($amount,50)))
Sum($psttm,40)
Sub(Constant(5.0),$pctchg)
Mad(Add(Abs($vwap),$psttm),10)
Mean($pctchg,50)
Abs(Div(Constant(-30.0),$pbmrq))
Add($amount,Greater($amount,$pcfncfttm))
$volume
Abs($pbmrq)
Greater(Sub(Constant(2.0),$pettm),Med($volume,50))
Sub(Constant(-0.5),Sub($pctchg,Constant(5.0)))
Mul(Less(Constant(-2.0),$pctchg),$psttm)
Sum(Mul(Constant(10.0),Mul($pctchg,Sub($vwap,Constant(5.0)))),10)
Min(Mean(Log(Div(Div($turn,$pettm),Sub($vwap,$psttm))),30),10)
Med(Mean(Std(Div($open,$pctchg),30),30),40)
$turn
Mul(Sub(EMA($turn,20),$psttm),Mul(Constant(-0.01),Less(Div($vwap,$open),$pctchg)))
$amount
Mean(Std(Sub(Div($pbmrq,Sub(Mean(Abs(Add($close,Add($open,$pbmrq))),50),$pctchg)),$pcfncfttm),50),40)
$psttm
Add(Constant(30.0),$low)
Add(Constant(5.0),$amount)
Delta(Add(Div(Constant(10.0),$open),$pcfncfttm),40)
Max($pcfncfttm,30)
Less(Div(Constant(-5.0),$pettm),$close)
Abs(Abs($pctchg))
$pctchg
Std(Mul($low,Ref(Less($vwap,Med($turn,20)),10)),40)
Mul(Mul(Constant(1.0),Log($close)),Greater($pettm,Mul($preclose,$pettm)))
$amount
Std(Sub(Constant(-0.5),$pettm),40)
Sum($amount,10)
Sum(Sub(Sub(Constant(-2.0),Add(Mad($amount,20),Constant(-0.5))),Constant(-2.0)),40)
Log(Sub(Constant(-10.0),WMA($preclose,30)))
Add($high,Constant(5.0))
Mul(Constant(5.0),Abs(Sum($psttm,50)))
Mul($close,Constant(-0.5))
$preclose
$preclose
Div(Constant(5.0),Log(Div(Sub(Mul($pcfncfttm,$pctchg),Abs($low)),Constant(-0.01))))
Sub(Abs(Log(Mul(Add(Ref(Mul(Constant(10.0),Add($low,$amount)),30),Sub($pbmrq,$pcfncfttm)),Constant(-30.0)))),$preclose)
Div(Constant(5.0),$vwap)
Mul(Mul(Constant(-30.0),Sub(Abs($amount),Add(Sum(Div($amount,$pcfncfttm),30),Constant(-1.0)))),$close)
Delta(Add($pettm,$amount),10)
Corr(Sub($open,Corr(Sum($turn,40),Log($preclose),20)),$pctchg,10)
Div(Var(Div(Sum($volume,50),Add(Add($amount,$vwap),Constant(1.0))),10),$preclose)
$amount
Less(Log(Log(Cov(Ref($amount,40),Mul($vwap,$turn),40))),Sum(Log(Add(Mul(Constant(-10.0),$volume),Constant(-5.0))),40))
Sub($open,Abs(Sub(Constant(-0.5),Std($turn,10))))
Add(Sub(Constant(5.0),WMA($turn,40)),$low)
$turn
Sub($turn,Constant(30.0))
Add(Constant(-30.0),Delta($pbmrq,10))
Greater($pbmrq,$pctchg)
$high
Add(Sub(Greater(Mul(Greater(Constant(10.0),$open),$amount),Constant(-10.0)),$close),Constant(1.0))
$pettm
$vwap
Mean(Add(Add(Mul(Add(Ref(Add($turn,$open),10),$pettm),$turn),$pctchg),$pcfncfttm),50)
Mul(Abs($preclose),Log(Add(Constant(2.0),$amount)))
$low
$turn
Add(Constant(-0.01),$high)
$vwap
Add(Greater(Constant(-2.0),WMA(Max(Sum(Max($vwap,40),30),40),40)),$close)
Mad(EMA(Log(Less($low,Log($volume))),50),40)
$turn
Log(Ref(Sum(Add(Abs($psttm),Div(Log($pbmrq),Cov($pctchg,$open,30))),10),30))
Div(Abs(Abs($turn)),Constant(-1.0))
Add(Constant(-10.0),Var(Sub($vwap,Constant(-30.0)),30))
Log($vwap)
$close
Greater(Div($open,Log($amount)),$open)
Div(Add(Constant(-5.0),$pctchg),Constant(5.0))
Sub($vwap,Constant(1.0))
Add(Std(Sub(Abs($pcfncfttm),Constant(-2.0)),50),Constant(-10.0))
$pbmrq
Div(Min(Sub(Log(Div(Mul(Mad($open,40),Sub(Constant(-0.01),$turn)),$pbmrq)),Constant(10.0)),30),$low)
$open
Add(Constant(-2.0),$amount)
Sub($preclose,Constant(-10.0))
Sum(Add(Sub(Mean(Add(Constant(-1.0),Log(Add(Log($psttm),Constant(30.0)))),40),Sum(Log($high),20)),Log($close)),40)
$preclose
$turn
$pettm
$vwap
Abs(Sub(Constant(5.0),$amount))
Mean(Sum($vwap,30),20)
Log(EMA(Log($open),20))
$psttm
$high
Abs(Sub(Constant(0.01),Mul($pbmrq,Constant(5.0))))
$close
$low
EMA(Sub(Constant(2.0),$amount),20)
EMA(Log(Sub(Constant(0.01),$low)),40)
$high
Log(Med(Abs($amount),30))
$preclose
Div(Constant(-0.5),Greater($vwap,Add(Cov(Mul(Constant(-5.0),$preclose),$volume,40),Max(Add($amount,Mean($turn,40)),40))))
WMA(Greater($low,$vwap),10)
Mul(Less(Constant(0.5),Add($amount,$pbmrq)),Add(Log($volume),Constant(30.0)))
Div($close,$vwap)
Add(Abs(Mul(Constant(-30.0),$close)),$turn)
$psttm
$psttm
$pcfncfttm
Abs(Greater(Sub(Constant(10.0),$close),$open))
Div(Add($pbmrq,$vwap),$open)
$open
Log(Min($pctchg,20))
Sub(Constant(10.0),$high)
Div(Div(Greater(Constant(10.0),$close),Log(Log($low))),$psttm)
$vwap
Add(Constant(10.0),Sum($amount,10))
Add(Constant(-30.0),$pctchg)
Div(Add(Greater(Constant(-30.0),Add(Abs($pcfncfttm),Log(Ref($turn,40)))),Sub(Less($open,EMA($psttm,20)),$volume)),Constant(-2.0))
Add(Sub(Constant(-5.0),$pettm),Constant(10.0))
$close
$amount
Sub(Sub(Less(Constant(10.0),$pctchg),$preclose),Constant(-2.0))
Abs(Log($open))
Add(Constant(-5.0),$vwap)
$pbmrq
Abs($pctchg)
$vwap
$amount
Mul($pctchg,$pcfncfttm)
$amount
Mul(Greater($amount,Add(Constant(-10.0),Sum($preclose,20))),Constant(30.0))
Sub(Constant(-5.0),$low)
Sum($pctchg,50)
Delta(Abs($pcfncfttm),40)
Sub(Constant(-0.5),$close)
Abs(Div(Sub(Less(Constant(10.0),$close),$turn),$close))
$psttm
$low
Abs($preclose)
Sub(Sub($pctchg,$amount),Constant(-1.0))
Div(Constant(1.0),Mad(Mean($psttm,10),30))
EMA($volume,50)
Sub(Div(Constant(-2.0),Mean(Cov($psttm,$volume,40),30)),$close)
$amount
Ref(Sum(Mad($preclose,40),40),50)
Mul($pbmrq,EMA($amount,10))
Sub(Greater(Add(Constant(0.01),Add($pctchg,$pctchg)),Constant(5.0)),$pbmrq)
Delta(Med($vwap,50),30)
Less($close,Max(Sub($pctchg,$psttm),20))
Mean(Abs($pctchg),50)
Mul(Constant(-1.0),Add(Sub($low,$turn),$pbmrq))
$pctchg
$amount
$vwap
Abs($close)
Mul($pctchg,$pettm)
Add(Constant(5.0),Sub($vwap,Constant(-5.0)))
Mul(Constant(0.5),Mean($pbmrq,10))
EMA($pctchg,10)
$amount
$pctchg
Div(Constant(5.0),$pcfncfttm)
Sub(Cov(Sum(Var(Sub(Constant(-0.5),$amount),10),20),$pbmrq,30),Add($amount,Constant(-2.0)))
$pcfncfttm
Add(Ref(Abs(Div(Mad(Log(Add(Greater(Constant(-0.5),Log(Mul($pettm,$psttm))),$pctchg)),10),$psttm)),10),$high)
$amount
Abs(Abs(Min($high,50)))
Max(Div(Mul(Constant(-5.0),Sub(Log(Add(Delta($pettm,10),$vwap)),Constant(-1.0))),Constant(-10.0)),40)
WMA(Log($vwap),50)
Sum($amount,10)
Sub($open,$pctchg)
Add($pctchg,$amount)
Mad(Div(Mul(Less(Std(Add(Greater(Constant(-2.0),Add($close,$pctchg)),$pbmrq),40),Constant(5.0)),$close),Constant(0.01)),30)
Mul($psttm,Mad(Add($close,Sum($psttm,10)),40))
$psttm
Med(Mul(Less(Constant(-30.0),Sum(Mean($turn,30),40)),$open),40)
$pbmrq
Add(Constant(5.0),Mad($low,40))
$pettm
$open
Mad(Log(Log(Log($pctchg))),40)
Add(Mul($pctchg,Constant(-1.0)),Sum(Med($vwap,30),30))
$pcfncfttm
Sub(Add(Less(Add(Constant(-2.0),$pctchg),Constant(-0.5)),$pcfncfttm),Constant(-5.0))
Greater(Sum(Div(Constant(10.0),Sub(Max($psttm,40),$vwap)),50),$close)
$amount
Delta($preclose,50)
$open
Var($pbmrq,40)
Mul($pettm,Mad(Corr(Sum($psttm,10),$low,10),40))
Sub(Constant(-5.0),Med(Med($pctchg,10),40))
Log(Add(Mul(Greater(Constant(-5.0),Mad(EMA($low,40),40)),Sub($vwap,Less(Constant(-30.0),$psttm))),Log($pctchg)))
Sub(Less(Constant(5.0),Med($pbmrq,40)),$amount)
Add($turn,Mul(Constant(-0.01),$open))
Sub(Constant(-5.0),$amount)
$amount
Log(Mul(Div(Constant(5.0),$amount),$close))
$pettm
$amount
Mul(Mul(Abs($amount),Constant(-0.01)),Less($volume,Greater(Sum($close,10),$pcfncfttm)))
Std($pbmrq,10)
Less(Mul(Constant(30.0),$open),$vwap)
Sub(Div($psttm,Log($amount)),$turn)
$low
Mul(Constant(-5.0),Ref($low,10))
Sub(Constant(30.0),$open)
$amount
Log(Sub(Constant(-1.0),Div($pcfncfttm,Constant(-2.0))))
$turn
Add(Less(Constant(30.0),Abs(Abs($close))),$close)
Add(Constant(0.01),Sub($pcfncfttm,Constant(-5.0)))
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/new_hs300_200_5_20240107114313/28672_steps
-----------------------------------------
| pool/                   |             |
|    best_ic_ret          | 0.277       |
|    eval_cnt             | 1044        |
|    significant          | 200         |
|    size                 | 200         |
| rollout/                |             |
|    ep_len_mean          | 6.03        |
|    ep_rew_mean          | 0.212       |
| test/                   |             |
|    ic                   | 0.0473      |
|    rank_ic              | 0.0291      |
| time/                   |             |
|    fps                  | 4           |
|    iterations           | 14          |
|    time_elapsed         | 7129        |
|    total_timesteps      | 28672       |
| train/                  |             |
|    approx_kl            | 0.013553208 |
|    clip_fraction        | 0.208       |
|    clip_range           | 0.2         |
|    entropy_loss         | -2.71       |
|    explained_variance   | 0.0241      |
|    learning_rate        | 0.001       |
|    loss                 | -0.244      |
|    n_updates            | 130         |
|    policy_gradient_loss | -0.0179     |
|    value_loss           | 0.0752      |
-----------------------------------------
Abs(Min(EMA(Add(Add(Div(Constant(-30.0),Sum($close,40)),Constant(-1.0)),$turn),30),50))
Div(Constant(5.0),$pettm)
Mul(Constant(-1.0),$pctchg)
Less(Sub($pctchg,$amount),Sub($vwap,$volume))
Abs(Mean(Greater($psttm,Div(Constant(1.0),$amount)),30))
Mul(Constant(10.0),Delta(Add(Add(Less(Min($vwap,10),Constant(-1.0)),$psttm),Constant(-5.0)),20))
Mean(Var(WMA(Log(Sub(Greater(Constant(-0.5),$open),$pettm)),40),40),10)
Add($preclose,Add(Var(Sub(Constant(30.0),Sub(Log(Sub($pbmrq,$open)),$pcfncfttm)),40),$low))
Mul($close,Div(Less(Log($pcfncfttm),Mul(Sum($pettm,30),Constant(-2.0))),Std($amount,10)))
Add(Add(Constant(10.0),$close),Constant(10.0))
WMA(Sub(Sum($amount,50),$pbmrq),10)
$pettm
Ref(Mad($amount,40),30)
Log(Sub(Greater(Sub($pctchg,$pctchg),$low),$amount))
Var(Sub(Log(Mad(Sub(Add(Constant(-1.0),Sub($amount,$close)),$vwap),40)),Abs($close)),20)
$low
Log($amount)
Sub($pctchg,Constant(-10.0))
Sub(Sub(Constant(0.01),$open),$pctchg)
Std(Div(Constant(-10.0),$vwap),30)
Sum(Mul($open,Constant(-2.0)),40)
Sub(Constant(0.5),$psttm)
Delta(Sub($close,Constant(0.5)),40)
$vwap
$amount
$volume
$amount
Mul(Constant(0.01),Div(Sum(Mean($pbmrq,30),10),Div($pbmrq,$pctchg)))
Sub($vwap,Constant(10.0))
Med(Abs($psttm),40)
$pbmrq
Sub(Constant(0.01),Less($pctchg,$amount))
Div(Greater(Constant(0.01),$pettm),$vwap)
Log(Sub(Div(Log(Sum(Abs(Var(Std(Abs(Log(Abs(Add(Constant(-0.5),$turn)))),40),40)),10)),$vwap),Constant(-10.0)))
$pcfncfttm
Sub(Less($psttm,Constant(0.01)),$pctchg)
$close
Abs(Mul(Greater(Less(Constant(10.0),Mul($psttm,$amount)),Corr($amount,$close,40)),Cov($high,$pettm,50)))
Sub(Add(Greater(Sub($open,Sub($low,$turn)),Greater($pcfncfttm,Constant(-0.5))),Sub($psttm,$psttm)),Greater($pcfncfttm,Std($pctchg,10)))
$psttm
Min($open,40)
Sum(Mul(Constant(1.0),Add($vwap,$pctchg)),20)
Mul(Less(Abs(Mul(Add(Sum(Add(Constant(10.0),Div($close,$preclose)),40),$psttm),Mad($pettm,40))),Constant(-0.5)),Abs($close))
$preclose
Add($close,Sub(Greater($pettm,Constant(-5.0)),$turn))
Add(Constant(-0.01),$low)
Sub(Mean(Div(Constant(-0.5),Mean($pctchg,40)),20),Constant(2.0))
Sub(Greater(Less(Constant(-0.5),Sub($open,$volume)),$pcfncfttm),Max(Abs(Greater(Add($pctchg,$psttm),$vwap)),30))
Sum(Abs(Mul(Constant(-1.0),$pcfncfttm)),30)
$close
Add(Add(Constant(10.0),$psttm),Constant(-5.0))
Add(Less(Div(Greater(Less($open,Constant(-10.0)),$low),$close),$vwap),Abs($pctchg))
Corr(Less(Div(Greater(Constant(-1.0),Delta(Greater($pctchg,Sub($pbmrq,Sub($pctchg,$high))),40)),Log($open)),$vwap),$close,40)
Add(Constant(-5.0),$pettm)
Max(Sub(Add($preclose,Constant(10.0)),Constant(-2.0)),50)
Log($vwap)
Delta(Add(Add($pettm,Constant(-2.0)),$high),40)
Log($pbmrq)
Sub(Constant(-2.0),Less($high,Abs(Log($high))))
Div(Sub($high,$preclose),Sub(Abs($low),$vwap))
$pctchg
Log(Sum(Delta(Add(Constant(-0.5),Mean($pctchg,50)),40),40))
Greater(Sub(Mean($close,30),Constant(10.0)),$turn)
Var($vwap,30)
Ref(Div(Less(Less(Constant(-2.0),$low),Std($vwap,20)),Sub($pctchg,$turn)),10)
Log($pcfncfttm)
Mul(Constant(-5.0),$pctchg)
$close
Mul($amount,Log(Std(Mean(Sum($pctchg,40),30),50)))
Abs(Sub(Constant(10.0),$high))
$amount
Greater(Sub(Constant(-30.0),$open),$pcfncfttm)
$close
Mean(Abs(Sum($close,20)),40)
$psttm
Mul(Std(Sub(Constant(0.01),Log(Add(Mad($vwap,40),$pctchg))),50),Constant(1.0))
Std(Mean($volume,40),50)
$vwap
Log(Div(Div(Sub($preclose,Constant(2.0)),Mul($turn,Greater($psttm,Constant(5.0)))),$open))
Sub(Corr($amount,$vwap,10),Constant(-5.0))
Abs(Abs(Abs(Var($close,50))))
$amount
Mean(Add(Constant(-1.0),$psttm),10)
Mad($turn,10)
Mul(Add($open,Add($open,Constant(-0.5))),Mad(Abs($turn),50))
$psttm
$pettm
Mul(Constant(5.0),Delta($turn,40))
Log(Log($pctchg))
Sub(Add(Less(Greater($amount,Constant(30.0)),$low),$psttm),$psttm)
Mul(Log(Log(Min(Mul(Sum(Sub($amount,Constant(2.0)),20),$low),50))),Constant(-1.0))
Abs(Add($psttm,$close))
Abs(Delta($pettm,10))
Less(EMA(Max(Add($pctchg,$pcfncfttm),10),50),$psttm)
$vwap
Sub(Abs(Abs(Max(Sub(Std($close,40),Constant(-30.0)),30))),$pctchg)
Sum(Greater($amount,$low),10)
Mad($open,10)
Sum(Med(Add(Constant(-0.5),$pcfncfttm),40),40)
Abs(Sum(Div($amount,$pcfncfttm),50))
$vwap
Less(Div(Constant(5.0),Log($pctchg)),Less($vwap,$vwap))
Mean($pettm,30)
Mul($preclose,$psttm)
$pcfncfttm
$pbmrq
Div(Sub(Constant(5.0),Sub(Greater(Std($pcfncfttm,10),Constant(2.0)),$vwap)),Constant(-0.5))
Mul($vwap,$high)
Mul(Constant(-0.01),Sum($amount,50))
Mul($volume,Mul($psttm,Sum($close,40)))
$pettm
Log(Mul(Less(Constant(0.01),$pbmrq),$high))
Var(Div(Mul($pcfncfttm,Constant(-0.5)),Mul($pctchg,$high)),30)
Sub($vwap,$vwap)
$close
Var(Abs(WMA($pbmrq,30)),40)
Div($amount,Constant(-0.5))
Var(Mean(Sub(Min(Corr(Div($pcfncfttm,Constant(-2.0)),$amount,30),50),Mul(Abs(Div($close,$pbmrq)),$pctchg)),10),30)
$open
$amount
Sub($amount,Less(Constant(-10.0),Max($psttm,50)))
Log(Mul($low,$pctchg))
Div($turn,Mul(Constant(10.0),$close))
Add(Sub($psttm,$vwap),$pctchg)
$pettm
Sub(Abs($close),Constant(-0.01))
$amount
Sub(Div($low,Constant(2.0)),Cov($low,$pcfncfttm,30))
Sub($vwap,$open)
Abs(Add(Mul(Var(Mul(Sum(Abs($preclose),10),Constant(-0.5)),10),$close),Constant(-0.01)))
Max(Med($amount,20),20)
$open
Sub(Add(Constant(5.0),$close),$pettm)
Add(Constant(1.0),$pcfncfttm)
Greater(Sub(Div($psttm,$pbmrq),Constant(-2.0)),Greater(Div(Constant(-30.0),$turn),$pcfncfttm))
Mul(Constant(-0.5),$pbmrq)
Sub(Constant(0.01),$amount)
Min(Div(Constant(0.01),$high),10)
Add(Constant(0.5),Sub($volume,$vwap))
$pctchg
Delta($pettm,50)
$pctchg
Mul(Greater(Less(Ref(Greater(Sub(Constant(1.0),WMA($amount,30)),Mul($pbmrq,$open)),40),Constant(1.0)),$high),$close)
Log(Add(Constant(2.0),Sub(Delta(Add($amount,$volume),40),$pcfncfttm)))
Std(Add(Constant(-5.0),Mul(Add(Log($turn),$pcfncfttm),Constant(10.0))),20)
$high
Sub(Constant(1.0),Div($open,$vwap))
Add($high,$pbmrq)
Sub(Add(Constant(1.0),Med($turn,40)),$pctchg)
Med($pctchg,40)
$amount
Sub(Constant(-2.0),$turn)
Abs(Log(Ref(Abs($psttm),10)))
Div(Constant(5.0),$pbmrq)
Abs($high)
Abs(Abs(Div($open,Add($pettm,Constant(-10.0)))))
Min(Mul(Constant(-2.0),$pbmrq),50)
Log(Div(Constant(2.0),$pctchg))
Mean(Med(Div(Constant(5.0),$pctchg),20),30)
$pctchg
$pcfncfttm
Sub(Add($open,$psttm),$open)
Add(Constant(-5.0),Max(EMA(Add($psttm,Abs($high)),10),40))
Cov(Greater(Add(Sum(Log(Mul(Abs(Mul(Abs(Sub($pcfncfttm,Constant(-0.5))),$close)),$pettm)),10),Constant(-0.5)),$vwap),$pbmrq,50)
Sub(Constant(1.0),Sub(Less(Less(Less($amount,Constant(-0.01)),$vwap),$close),Cov($open,$open,50)))
$open
Var(Add(Less(Constant(-0.5),$high),$close),50)
Mean(Div(Mul(Constant(10.0),Abs(Sum(Add(Log($pettm),Abs(EMA($amount,40))),50))),$pbmrq),10)
Add(Log(EMA(Mul(Constant(-0.5),EMA($amount,40)),30)),Constant(1.0))
$pbmrq
$vwap
Std(Div(Greater(Constant(0.5),$pctchg),$low),50)
$pcfncfttm
$amount
Mad(Mul(Constant(-30.0),Mul($open,Constant(1.0))),40)
Log(Mean(Add(Std(Std($amount,40),50),$turn),50))
Sum($turn,30)
Log(Mul($pctchg,Sum($pettm,20)))
$amount
$amount
Sub($open,$vwap)
Abs(Abs($turn))
Mul(Constant(0.01),Less(Abs(Med(Add($amount,Sub(Abs($preclose),Log($preclose))),50)),$turn))
Sum($pbmrq,40)
$pbmrq
Div(Mul($pctchg,$amount),Constant(-2.0))
Sum(Abs(Sub(Constant(10.0),Mul(Greater($turn,$pctchg),$psttm))),20)
Add($turn,Cov($pbmrq,Greater($amount,$open),40))
Mul(Constant(-1.0),Med($vwap,40))
Sub(Mean($close,40),$vwap)
$amount
Mad(Abs(Abs(Mul(Sub(Constant(-0.01),$pettm),Constant(-10.0)))),30)
Abs(Sub(Constant(2.0),$amount))
$amount
Sum(Mul(Less(Greater(Greater(Constant(1.0),$pctchg),$open),$pcfncfttm),Mean(Div($pctchg,Constant(5.0)),40)),30)
Add(Sub(Constant(-2.0),$preclose),Sum(Add(Mad(Sum(Std($vwap,40),20),30),Std(Abs(Abs($high)),10)),40))
Log(Sub($low,Sum(Mul(Mul($psttm,$pettm),$vwap),50)))
Add(Constant(0.01),$amount)
Mean($vwap,50)
$low
Div(Less(Abs(Add(Mad(Sub(Constant(1.0),$psttm),30),$vwap)),Constant(-1.0)),$close)
Sub(Greater(Constant(-0.01),$pbmrq),$close)
$pcfncfttm
Mul($low,Constant(-30.0))
Abs(Div(Constant(-0.5),$pettm))
Div(Mean(Min(Sub($amount,Constant(-2.0)),10),40),$amount)
$close
$vwap
Div(Constant(-5.0),$volume)
$close
$vwap
Sub(Constant(-2.0),Sub($turn,Mul(Max($vwap,10),$close)))
Abs($pbmrq)
$pctchg
Log(Med(Med(Med(Sub(Greater(Greater(Greater(Constant(-2.0),Mad($open,30)),$vwap),$amount),$pctchg),40),40),50))
Abs(Mul(Constant(5.0),$pctchg))
Add(Sub(Constant(0.01),Add($amount,$pctchg)),$close)
$vwap
Med(Mul(Constant(-1.0),$high),40)
$amount
$pctchg
Sub(Add(Constant(-10.0),$psttm),Sub(Ref(Mul(Log($preclose),Constant(-0.01)),40),$pctchg))
Add(Less(Less(Sub(Greater(Constant(-2.0),$pctchg),$turn),Constant(0.01)),$open),$close)
Div(Add(Log(Div(Constant(-1.0),$low)),$preclose),$amount)
Med(Sum($amount,40),30)
Add(Mean(Mul(Constant(-30.0),Sub(Log($turn),Constant(-0.01))),40),Div($low,Mul($vwap,Ref($vwap,10))))
$close
$open
Abs(Mul(Add($vwap,$pcfncfttm),$open))
Abs(Add($pettm,Sub(Sub($vwap,Constant(-1.0)),$vwap)))
Sub(Constant(1.0),Greater($pcfncfttm,$open))
Less(Sub($psttm,Constant(10.0)),Sum($vwap,40))
Sub(Greater(Constant(5.0),Corr(Mul(Abs($vwap),$open),$pbmrq,30)),$turn)
Abs(Add($open,Constant(-0.5)))
Abs(Mul(Constant(-5.0),$pbmrq))
Add(Sum($amount,40),$pbmrq)
Abs($pctchg)
Sub(Constant(-0.5),$pcfncfttm)
Div(Less(Constant(-30.0),$pcfncfttm),$vwap)
Sum($low,40)
Sub(Constant(-0.01),Sub($psttm,Constant(5.0)))
Mul(Constant(-5.0),$turn)
$pbmrq
Mul(Delta(Delta($volume,40),40),$pcfncfttm)
Add($close,$psttm)
Max(Sub($pctchg,Sub(Constant(-0.01),Mad(Sum($pctchg,40),10))),50)
$turn
$pbmrq
Sub(Constant(-0.5),$pbmrq)
Log($turn)
Add(Constant(-0.5),$pettm)
Mul($pcfncfttm,Constant(-2.0))
Mul($psttm,$low)
$low
Mad(Add(Constant(0.5),Less($open,$open)),10)
Delta(Sub(Sub(Constant(-2.0),$open),Add(Constant(10.0),$close)),10)
Div(Delta(Mul(WMA(Div(Abs($low),Constant(1.0)),10),Sub(Add($pcfncfttm,Greater(Constant(-30.0),$open)),$vwap)),50),$psttm)
Sub(Abs($pctchg),Sub(Constant(-10.0),$pbmrq))
Mul($amount,Log($pettm))
Mad(Div(Mul(Add(Sub(Constant(10.0),$pbmrq),WMA($psttm,30)),$preclose),Constant(5.0)),40)
Mean($open,40)
$low
Div(Log(Div($pettm,Constant(-30.0))),Mad($preclose,40))
Div(EMA(Div(Constant(30.0),$psttm),40),Greater($open,$pbmrq))
$close
Add(Constant(-0.01),$amount)
Sub(Div(Std($vwap,40),Constant(-1.0)),Constant(-0.01))
$pcfncfttm
$volume
Mad(Add(Delta(Mul(Sub(Constant(5.0),Sum($pctchg,50)),Constant(-30.0)),50),$open),30)
Mul(Log(Add(Constant(-1.0),$pettm)),Sub(Log($open),$pbmrq))
Saving model checkpoint to /Users/yangguangyu/Projects/QuantLearning/research/test_result/alphagen/new_hs300_200_5_20240107114313/30720_steps
-----------------------------------------
| pool/                   |             |
|    best_ic_ret          | 0.284       |
|    eval_cnt             | 1285        |
|    significant          | 200         |
|    size                 | 200         |
| rollout/                |             |
|    ep_len_mean          | 6.87        |
|    ep_rew_mean          | 0.203       |
| test/                   |             |
|    ic                   | 0.0631      |
|    rank_ic              | 0.0445      |
| time/                   |             |
|    fps                  | 3           |
|    iterations           | 15          |
|    time_elapsed         | 8769        |
|    total_timesteps      | 30720       |
| train/                  |             |
|    approx_kl            | 0.022271326 |
|    clip_fraction        | 0.261       |
|    clip_range           | 0.2         |
|    entropy_loss         | -2.75       |
|    explained_variance   | 0.0376      |
|    learning_rate        | 0.001       |
|    loss                 | -0.253      |
|    n_updates            | 140         |
|    policy_gradient_loss | -0.0115     |
|    value_loss           | 0.0478      |
-----------------------------------------
